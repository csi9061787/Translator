REPLACE PROCEDURE PMART.WDWH_1_2_FUNC
(
	I_TIME_LEVEL VARCHAR(100),
	I_TIME_ID_S VARCHAR(100),
	I_TIME_ID_E  VARCHAR(100),
	I_ORG_LEVEL  VARCHAR(100),
	I_ORG_ID  VARCHAR(100),
	I_PRD_LEVEL  VARCHAR(100),
	I_PRD_ID  VARCHAR(100),
	I_FILTER_LEVEL  VARCHAR(100),
	I_DIM_Y  VARCHAR(100),
	I_EMP_NO  VARCHAR(100)
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(10000);
	DECLARE V_SQLSTR VARCHAR(10000)
		DEFAULT
			'WITH BASE_DATA AS
		    (
		        SELECT A.*, B.*, C.*, D.GRP_ID, D.KND_ID 
		        FROM PMART.WDWH_PRD_FACT_DAY_HIS A
		        INNER JOIN (
		            SELECT L_DAY_ID, L_DAY_NAME, L_WEEK_ID, L_WEEK_NAME FROM PMART.YMWD_TIME
		            WHERE L_DAY_ID BETWEEN <START_TIME> AND <END_TIME>
		        ) B ON A.TIME_ID=B.L_DAY_ID
		        INNER JOIN (
		            SELECT DISTINCT OSTORE_ID, STORE_NO, RESPON_NO, BRANCH_NO, DEPT_NO 
		            FROM PMART.LATEST_ORG_DIM 
		            WHERE ENDDT=99999999 AND <ORG_FILTER>
		        ) C ON A.ORG_ID=C.OSTORE_ID
		        INNER JOIN (
		            SELECT DISTINCT PRD_ID, GRP_ID, KND_ID
		            FROM PMART.PRD_DIM 
		            WHERE 1=1 AND <PRD_FILTER>
		        ) D ON A.PRD_ID=D.PRD_ID
		    ),
		    SUM_DIMENSION AS
		    (
		        SELECT
		            L_DAY_ID, L_DAY_NAME,
		            <ORG_COL_LS>,
		            <PRD_COL_LS>,
		            SUM(INPRD_CNT) AS INPRD_CNT, SUM(INPRD_AMT) AS INPRD_AMT,
		            SUM(SALES_CNT) AS SALES_CNT, SUM(SALES_AMT) AS SALES_AMT,
		            SUM(THR_CNT)   AS THR_CNT,   SUM(THR_AMT)   AS THR_AMT,
		            SUM(ORD_CNT)   AS ORD_CNT,   SUM(ORD_AMT)   AS ORD_AMT
		        FROM BASE_DATA
		        GROUP BY L_DAY_ID, L_DAY_NAME, <Y_DIM> <Y_DIM_2>
		    ),
		    AVG_NONCURRENT AS
		    (
		        SELECT 
		            <Y_DIM>,
		            ROUND(AVG(INPRD_CNT),0) AS AVG_INPRD_CNT, ROUND(AVG(INPRD_AMT),0) AS AVG_INPRD_AMT,
		            ROUND(AVG(SALES_CNT),0) AS AVG_SALES_CNT, ROUND(AVG(SALES_AMT),0) AS AVG_SALES_AMT,
		            ROUND(AVG(THR_CNT),0)   AS AVG_THR_CNT,   ROUND(AVG(THR_AMT),0)   AS AVG_THR_AMT
		        FROM SUM_DIMENSION 
		        WHERE L_DAY_ID<><END_TIME>
		        GROUP BY <Y_DIM> <Y_DIM_2>
		    ),
		    COMBINE_SUM_AVG AS
		    (
		        SELECT A.*, -1 AS SHELF_TYPE_ID,
		            AVG_INPRD_CNT, AVG_INPRD_AMT, AVG_SALES_CNT, AVG_SALES_AMT, AVG_THR_CNT, AVG_THR_AMT
		        FROM SUM_DIMENSION A
		        LEFT JOIN AVG_NONCURRENT B
		        ON A.<Y_DIM>=B.<Y_DIM>
		    ),
		    DIMENSION_TOTAL AS
		    (
		        SELECT L_DAY_ID, L_DAY_NAME,
		            CAST(NULL AS VARCHAR(6)) AS DEPT_NO, CAST(NULL AS VARCHAR(6)) AS BRANCH_NO, NULL AS RESPON_NO,
		            NULL AS OSTORE_ID, CAST(NULL AS VARCHAR(6)) AS STORE_NO,
		            CAST(NULL AS VARCHAR(2)) AS KND_ID,
		            CAST(NULL AS VARCHAR(3)) AS GRP_ID,
		            CAST(NULL AS VARCHAR(7)) AS PRD_ID,
		            SUM(INPRD_CNT) AS INPRD_CNT, SUM(INPRD_AMT) AS INPRD_AMT,
		            SUM(SALES_CNT) AS SALES_CNT, SUM(SALES_AMT) AS SALES_AMT,
		            SUM(THR_CNT)   AS THR_CNT,   SUM(THR_AMT)   AS THR_AMT,
		            SUM(ORD_CNT)   AS ORD_CNT,   SUM(ORD_AMT)   AS ORD_AMT,
		            NULL AS SHELF_TYPE_ID,
		            SUM(AVG_INPRD_CNT) AS AVG_INPRD_CNT, SUM(AVG_INPRD_AMT) AS AVG_INPRD_AMT,
		            SUM(AVG_SALES_CNT) AS AVG_SALES_CNT, SUM(AVG_SALES_AMT) AS AVG_SALES_AMT,
		            SUM(AVG_THR_CNT)   AS AVG_THR_CNT,   SUM(AVG_THR_AMT)   AS AVG_THR_AMT
		        FROM COMBINE_SUM_AVG
		        GROUP BY L_DAY_ID, L_DAY_NAME
		    ),
		    RESULT_DT AS
		    (
		        SELECT * FROM COMBINE_SUM_AVG
		        UNION
		        SELECT * FROM DIMENSION_TOTAL
		    )
		    SELECT * FROM RESULT_DT'
	;
	DECLARE Y_DIM VARCHAR(200) DEFAULT '';
	DECLARE Y_DIM_2 VARCHAR(200) DEFAULT '';
	DECLARE ORG_FILTER VARCHAR(200);
	DECLARE PRD_FILTER VARCHAR(200);
	DECLARE ORG_COL_LS VARCHAR(200);
	DECLARE PRD_COL_LS VARCHAR(200);
	IF I_DIM_Y='1' THEN 
		CASE I_ORG_LEVEL
			WHEN '0' THEN
				SET ORG_FILTER = '1=1';
				SET Y_DIM = 'DEPT_NO';
				SET ORG_COL_LS = 'DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, -1 AS OSTORE_NO, ''-1'' AS STORE_NO';
			WHEN '1' THEN
				SET ORG_FILTER = 'DEPT_NO=''' + I_ORG_ID + '''';
				SET Y_DIM = 'BRANCH_NO';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, BRANCH_NO, -1 AS RESPON_NO, -1 AS OSTORE_NO, ''-1'' AS STORE_NO';
			WHEN '2' THEN
				SET ORG_FILTER = 'BRANCH_NO=''' + I_ORG_ID + '''';
				SET Y_DIM = 'OSTORE_ID';
				SET Y_DIM_2 = ', STORE_NO';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, OSTORE_ID, STORE_NO';
			WHEN '3' THEN
				SET ORG_FILTER = 'RESPON_NO=''' + I_ORG_ID + '''';
				SET Y_DIM = 'OSTORE_ID';
				SET Y_DIM_2 = ', STORE_NO';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, OSTORE_ID, STORE_NO';
			WHEN '4' THEN
				SET ORG_FILTER = 'OSTORE_ID=''' + I_ORG_ID + '''';
				SET Y_DIM = 'OSTORE_ID';
				SET Y_DIM_2 = ', STORE_NO';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, OSTORE_ID, STORE_NO';
		END CASE;
		CASE I_PRD_LEVEL
			WHEN '0' THEN
				SET PRD_FILTER = '1=1';
				SET PRD_COL_LS = '''-1'' AS KND_ID, ''-1'' AS GRP_ID, ''-1'' AS PRD_ID';
			WHEN '1' THEN
				SET PRD_FILTER = 'KND_ID=''' + I_PRD_ID + '''';
				SET PRD_COL_LS = '''' + I_PRD_ID + ''' AS KND_ID, ''-1'' AS GRP_ID, ''-1'' AS PRD_ID';
			WHEN '2' THEN
				SET PRD_FILTER = 'GRP_ID=''' + I_ORG_ID + '''';
				SET PRD_COL_LS = '''-1'' AS KND_ID, ''' + I_PRD_ID + ''' AS GRP_ID, ''-1'' AS PRD_ID';
			WHEN '3' THEN
				SET PRD_FILTER = 'PRD_ID=''' + I_ORG_ID + '''';
				SET PRD_COL_LS = '''-1'' AS KND_ID, ''-1'' AS GRP_ID, ''' + I_PRD_ID + ''' AS PRD_ID';
		END CASE;
	ELSEIF I_DIM_Y='2' THEN
		CASE I_ORG_LEVEL
			WHEN '0' THEN
				SET ORG_FILTER = '1=1';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, -1 AS OSTORE_NO, ''-1'' AS STORE_NO';
			WHEN '1' THEN
				SET ORG_FILTER = 'DEPT_NO=''' + I_ORG_ID + '''';
				SET ORG_COL_LS = 'DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, -1 AS OSTORE_NO, ''-1'' AS STORE_NO';
			WHEN '2' THEN
				SET ORG_FILTER = 'BRANCH_NO=''' + I_ORG_ID + '''';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, BRANCH_NO, -1 AS RESPON_NO, -1 AS OSTORE_ID, ''-1'' AS STORE_NO';
			WHEN '3' THEN
				SET ORG_FILTER = 'RESPON_NO=''' + I_ORG_ID + '''';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, RESPON_NO, -1 AS OSTORE_ID, ''-1'' AS STORE_NO';
			WHEN '4' THEN
				SET ORG_FILTER = 'OSTORE_ID=''' + I_ORG_ID + '''';
				SET ORG_COL_LS = '''-1'' AS DEPT_NO, ''-1'' AS BRANCH_NO, -1 AS RESPON_NO, OSTORE_ID, ''-1'' AS STORE_NO';
		END CASE;
		CASE I_PRD_LEVEL
			WHEN '0' THEN
				SET PRD_FILTER = '1=1';
				SET Y_DIM = 'KND_ID';
				SET PRD_COL_LS = 'KND_ID, ''-1'' AS GRP_ID, ''-1'' AS PRD_ID';
			WHEN '1' THEN
				SET PRD_FILTER = 'KND_ID=''' + I_PRD_ID + '''';
				SET Y_DIM = 'GRP_ID';
				SET PRD_COL_LS = '''-1'' AS KND_ID, GRP_ID, ''-1'' AS PRD_ID';
			WHEN '2' THEN
				SET PRD_FILTER = 'GRP_ID=''' + I_ORG_ID + '''';
				SET Y_DIM = 'PRD_ID';
				SET PRD_COL_LS = '''-1'' AS KND_ID, ''-1'' AS GRP_ID, PRD_ID';
			WHEN '3' THEN
				SET PRD_FILTER = 'PRD_ID=''' + I_ORG_ID + '''';
				SET Y_DIM = 'PRD_ID';
				SET PRD_COL_LS = '''-1'' AS KND_ID, ''-1'' AS GRP_ID, PRD_ID';
		END CASE;
	END IF;
	SET V_SQLSTR = Replace(V_SQLSTR, '<START_TIME>', I_TIME_ID_S);
	SET V_SQLSTR = Replace(V_SQLSTR, '<END_TIME>', I_TIME_ID_E);
	SET V_SQLSTR = Replace(V_SQLSTR, '<ORG_FILTER>', ORG_FILTER);
	SET V_SQLSTR = Replace(V_SQLSTR, '<PRD_FILTER>', PRD_FILTER);
	SET V_SQLSTR = Replace(V_SQLSTR, '<Y_DIM>', Y_DIM);
	SET V_SQLSTR = Replace(V_SQLSTR, '<Y_DIM_2>', Y_DIM_2);
	SET V_SQLSTR = Replace(V_SQLSTR, '<ORG_COL_LS>', ORG_COL_LS);
	SET V_SQLSTR = Replace(V_SQLSTR, '<PRD_COL_LS>', PRD_COL_LS);
	SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_1_2_FUNC  AS( ' 
						+ V_SQLSTR 
						+ ' ) WITH DATA ON COMMIT PRESERVE ROWS;'; 
	CALL PMART.P_DROP_TABLE ('#VT_WDWH_1_2_FUNC');
	EXECUTE IMMEDIATE SQLSTR;
END SP;