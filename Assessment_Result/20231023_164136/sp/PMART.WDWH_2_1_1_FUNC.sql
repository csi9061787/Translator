REPLACE PROCEDURE PMART.WDWH_2_1_1_FUNC
(
	I_ORG_LEVEL VARCHAR(100),
	I_ORG_ID VARCHAR(100),
	I_PRD_LEVEL  VARCHAR(100),
	I_PRD_ID  VARCHAR(100)
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(10000);
	DECLARE V_SQLSTR VARCHAR(10000);
	CALL PMART.P_DROP_TABLE ('#VT_WDWH_2_1_1_FUNC');	
	IF I_ORG_LEVEL = '2' THEN
		SET V_SQLSTR =  'SELECT ST.OST_NO V_OST_NO, '
									+ 'ST.PRD_ID V_PRD_ID, '
									+ 'ST.STK_CNT_INST V_STK_CNT_INST, '
									+ 'ST.STK_AMT_INST V_STK_AMT_INST, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_CNT_SUM END AS V_SALES_CNT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_AMT_SUM END AS V_SALES_AMT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_CNT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_CNT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_AMT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL OR (SA.SALES_AMT_SUM / SA.WORKDAYS) = 0 THEN 0 ELSE (CAST(ST.STK_AMT_INST AS DECIMAL(12,2)) / (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS)) END AS V_STK_DAYS '
									+ 'FROM PDATA.WDWH_STK_DAY_INST ST LEFT JOIN PDATA.WDWH_SALES_28D SA '
									+ 'ON ST.OST_NO = SA.OST_NO '
									+ 'AND ST.PRD_ID = SA.PRD_ID '
									+ 'AND ST.DAY_ID = SA.DAY_ID '
									+ 'WHERE ST.PRD_ID = '''+ I_PRD_ID +''' '
									+ 'AND ST.BRANCH_ID = '''+ I_ORG_ID +''' ';
	ELSEIF I_ORG_LEVEL = '3' THEN
		SET V_SQLSTR =  'SELECT ST.OST_NO V_OST_NO, '
									+ 'ST.PRD_ID V_PRD_ID, '
									+ 'ST.STK_CNT_INST V_STK_CNT_INST, '
									+ 'ST.STK_AMT_INST V_STK_AMT_INST, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_CNT_SUM END AS V_SALES_CNT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_AMT_SUM END AS V_SALES_AMT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_CNT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_CNT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_AMT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL OR (SA.SALES_AMT_SUM / SA.WORKDAYS) = 0 THEN 0 ELSE (CAST(ST.STK_AMT_INST AS DECIMAL(12,2)) / (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS)) END AS V_STK_DAYS '
									+ 'FROM PDATA.WDWH_STK_DAY_INST ST LEFT JOIN PDATA.WDWH_SALES_28D SA '
									+ 'ON ST.OST_NO = SA.OST_NO '
									+ 'AND ST.PRD_ID = SA.PRD_ID '
									+ 'AND ST.DAY_ID = SA.DAY_ID '
									+ 'WHERE ST.PRD_ID = '''+ I_PRD_ID +''' '
									+ 'AND ST.SREMP_NO = '+ I_ORG_ID +' ';
	ELSEIF I_ORG_LEVEL = '4' THEN
		IF I_PRD_LEVEL = '2' THEN
			SET V_SQLSTR =  'SELECT ST.OST_NO V_OST_NO, '
										+ 'ST.PRD_ID V_PRD_ID, '
										+ 'ST.STK_CNT_INST V_STK_CNT_INST, '
										+ 'ST.STK_AMT_INST V_STK_AMT_INST, '
										+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_CNT_SUM END AS V_SALES_CNT, '
										+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_AMT_SUM END AS V_SALES_AMT, '
										+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_CNT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_CNT_PSD, '
										+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_AMT_PSD, '
										+ 'CASE WHEN SA.PRD_ID IS NULL OR (SA.SALES_AMT_SUM / SA.WORKDAYS) = 0 THEN 0 ELSE (CAST(ST.STK_AMT_INST AS DECIMAL(12,2)) / (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS)) END AS V_STK_DAYS '
										+ 'FROM PDATA.WDWH_STK_DAY_INST ST LEFT JOIN PDATA.WDWH_SALES_28D SA '
										+ 'ON ST.OST_NO = SA.OST_NO '
										+ 'AND ST.PRD_ID = SA.PRD_ID '
										+ 'AND ST.DAY_ID = SA.DAY_ID '
										+ 'WHERE ST.GRP_NO = '''+ I_PRD_ID +''' '
										+ 'AND ST.OST_NO = '+ I_ORG_ID +' ';
		ELSEIF I_PRD_LEVEL = '3' THEN
			SET V_SQLSTR =  'SELECT ST.OST_NO V_OST_NO, '
									+ 'ST.PRD_ID V_PRD_ID, '
									+ 'ST.STK_CNT_INST V_STK_CNT_INST, '
									+ 'ST.STK_AMT_INST V_STK_AMT_INST, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_CNT_SUM END AS V_SALES_CNT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE SA.SALES_AMT_SUM END AS V_SALES_AMT, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_CNT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_CNT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL THEN 0 ELSE (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS) END AS V_SALES_AMT_PSD, '
									+ 'CASE WHEN SA.PRD_ID IS NULL OR (SA.SALES_AMT_SUM / SA.WORKDAYS) = 0 THEN 0 ELSE (CAST(ST.STK_AMT_INST AS DECIMAL(12,2)) / (CAST(SA.SALES_AMT_SUM AS DECIMAL(12,2)) / SA.WORKDAYS)) END AS V_STK_DAYS '
									+ 'FROM PDATA.WDWH_STK_DAY_INST ST LEFT JOIN PDATA.WDWH_SALES_28D SA '
									+ 'ON ST.OST_NO = SA.OST_NO '
									+ 'AND ST.PRD_ID = SA.PRD_ID '
									+ 'AND ST.DAY_ID = SA.DAY_ID '
									+ 'WHERE ST.PRD_ID = '''+ I_PRD_ID +''' '
									+ 'AND ST.OST_NO = '+ I_ORG_ID +' ';
		END IF;
	END IF;
	SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_2_1_1_FUNC  AS( ' 
						+ V_SQLSTR 
						+ ' ) WITH DATA PRIMARY  CHARINDEX( V_PRD_ID,V_OST_NO) ON COMMIT PRESERVE ROWS;'; 
	EXECUTE IMMEDIATE SQLSTR;  
END SP;