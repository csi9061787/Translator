REPLACE PROCEDURE PMART.BI_1_6_RESPON_S0_FUNC
(
	P_WEEK_ID NUMBER,
	P_BRANCH_ID NUMBER
)
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(1000) DEFAULT '';
      CALL PMART.P_DROP_TABLE ('#VT_BI_1_6_RESPON_S0_FUNC');  
	  CALL PMART.BI_1_6_OSTORE_S0_FUNC(P_WEEK_ID);
	SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_BI_1_6_RESPON_S0_FUNC  AS( ' 
				+ ' SELECT A.PRD_ID, O.RESPON_ID AS ORG_ID, '
				+ ' SUM(A.ORDER_AMT) AS ORDER_AMT, '
				+ ' SUM(A.SALES_AMT) AS SALES_AMT, '
				+ ' SUM(A.BUG_SAL_AMT*1.2*F.STNUM) AS BUG_SAL_ALL_AMT, '
				+ ' SUM(A.ORDER_CNT) AS ORDER_CNT, '
				+ ' SUM(A.SALES_CNT) AS SALES_CNT '
				+ ' FROM '
       			+ ' (SELECT  ORG_ID , PRD_ID '
          		+ ' FROM (SELECT DISTINCT OSTORE_ID AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE BRANCH_ID='+ P_BRANCH_ID + ') ORG, '
				+ ' (SELECT PRD_ID FROM PMART.BI_CODE WHERE PRD_ID <> ''17'' '
				+ ' UNION '
				+ ' SELECT ''176''  FROM (SELECT 1 AS "DUMMY") AS "DUAL" ) PRD '
         		+ ' ) B, PMART.BASIC_MFACT_ORD1 A, '
				+ ' #VT_BI_1_6_OSTORE_S0_FUNC F, '
				+ ' PMART.LAST_ORG_DIM O '
   				+ ' WHERE A.TIME_ID = ' + P_WEEK_ID
      			+ ' AND A.ORG_ID = B.ORG_ID '
      			+ ' AND A.PRD_ID = B.PRD_ID '
				+ ' AND A.ORG_ID = F.ORG_ID '
				+ ' AND A.ORG_ID = O.OSTORE_ID '
				+ ' GROUP BY A.PRD_ID, O.RESPON_ID '
				+ ' ) WITH DATA PRIMARY  CHARINDEX( ORG_ID,PRD_ID) ON COMMIT PRESERVE ROWS;'; 
      EXECUTE IMMEDIATE SQLSTR;
END SP;