REPLACE PROCEDURE PMART.NEW_TOP_AVG_MODULE_STNUM_2
(FP_AMT_TYPE CHAR,FP_TIME_TYPE CHAR,
FP_TIME_LIST VARCHAR(2000),FP_LTIME_LIST VARCHAR(2000),
FP_ORG_LEVEL NUMBER,FP_ORG_LIST VARCHAR(2000),
FP_PRD_TYPE CHAR,FP_PRD_LEVEL NUMBER,FP_PRD_ID VARCHAR(10))
SQL SECURITY INVOKER
SP:BEGIN
DECLARE SQLSTR  VARCHAR(64000);
   CALL PMART.P_DROP_TABLE ('#VT_NEW_TOP_AVG_MODULE_STNUM_2'); 
   CALL PMART.NEW_TOP_MFACT_2 (FP_AMT_TYPE ,FP_TIME_TYPE ,FP_TIME_LIST ,FP_LTIME_LIST ,FP_ORG_LEVEL ,FP_ORG_LIST ,FP_PRD_TYPE ,FP_PRD_LEVEL ,FP_PRD_ID );
   CALL PMART.NEW_TOP_STFACT_2(FP_TIME_TYPE ,FP_TIME_LIST ,FP_LTIME_LIST ,FP_ORG_LEVEL ,FP_ORG_LIST ,FP_PRD_TYPE ,FP_PRD_LEVEL ,FP_PRD_ID );
   SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_NEW_TOP_AVG_MODULE_STNUM_2  AS('+
                'SELECT '+
                'A.TIME_ID AS TIME_ID, '+
                'A.ORG_ID AS ORG_ID, '+
                'A.ORDER_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS ORDER_AMT, '+
                'A.LORDER_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LORDER_AMT, '+
                'A.ORDER_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)- '+
                'A.LORDER_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) '+
                'AS LORDER_AMT_DIFF, '+
                'CASE WHEN '+
                '((A.ORDER_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)>=10000 THEN 9999.99 '+
                'WHEN '+
                '((A.ORDER_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)<=-10000 THEN -9999.99 '+
                'ELSE ((A.ORDER_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100) END '+
                'AS LORDER_AMT_RATE, '+
                'A.INPRD_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS INPRD_AMT, '+
                'A.LINPRD_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LINPRD_AMT, '+
                'A.SALES_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS SALES_AMT, '+
                'A.LSALES_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LSALES_AMT, '+
                'A.SALES_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)- '+
                'A.LSALES_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) '+
                'AS LSALES_AMT_DIFF, '+
                'CASE WHEN '+
                '((A.SALES_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)>=10000 THEN 9999.99 '+
                'WHEN '+
                '((A.SALES_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)<=-10000 THEN -9999.99 '+
                'ELSE ((A.SALES_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100) END '+
                'AS LSALES_AMT_RATE, '+
                'A.THROW_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS THROW_AMT, '+
                'A.LTHROW_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LTHROW_AMT, '+
                '(A.THROW_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.ORDER_AMT,0,NULL,A.ORDER_AMT), '+
                'DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)))*100 AS THROW_AMT_RATE, '+
                'A.RETPRD_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS RETPRD_AMT, '+
                'A.LRETPRD_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LRETPRD_AMT, '+
                'A.TRANSPRD_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS TRANSPRD_AMT, '+
                'A.LTRANSPRD_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LTRANSPRD_AMT, '+
                'A.DIS_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS DIS_AMT, '+
                'A.SUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS SUB_AMT, '+
                'A.DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS DISSUB_AMT, '+
                'A.ORDER_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS ORDER_CNT, '+
                'A.LORDER_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LORDER_CNT, '+
                'A.ORDER_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)- '+
                'A.LORDER_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) '+
                'AS LORDER_CNT_DIFF, '+
                'CASE WHEN '+
                '((A.ORDER_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)>=10000 THEN 9999.99 '+
                'WHEN '+
                '((A.ORDER_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)<=-10000 THEN -9999.99 '+
                'ELSE ((A.ORDER_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100) END '+
                'AS LORDER_CNT_RATE, '+
                'A.INPRD_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS INPRD_CNT, '+
                'A.LINPRD_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LINPRD_CNT, '+
                'A.SALES_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS SALES_CNT, '+
                'A.LSALES_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LSALES_CNT, '+
                'A.SALES_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)- '+
                'A.LSALES_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) '+
                'AS LSALES_CNT_DIFF, '+
                'CASE WHEN '+
                '((A.SALES_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)>=10000 THEN 9999.99 '+
                'WHEN '+
                '((A.SALES_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)<=-10000 THEN -9999.99 '+
                'ELSE ((A.SALES_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100) END '+
                'AS LSALES_CNT_RATE, '+
                'A.THROW_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS THROW_CNT, '+
                'A.LTHROW_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LTHROW_CNT, '+
                '(A.THROW_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.ORDER_CNT,0,NULL,A.ORDER_CNT), '+
                'DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)))*100 AS THROW_CNT_RATE, '+
                'A.RETPRD_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS RETPRD_CNT, '+
                'A.LRETPRD_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LRETPRD_CNT, '+
                'A.TRANSPRD_CNT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS TRANSPRD_CNT, '+
                'A.LTRANSPRD_CNT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LTRANSPRD_CNT, '+
                'A.SALES_DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM) AS SALES_DISSUB_AMT, '+
                'A.LSALES_DISSUB_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) AS LSALES_DISSUB_AMT, '+
                'A.SALES_DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM)- '+
                'A.LSALES_DISSUB_AMT/DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM) '+                  
                'AS LSALES_DISSUB_AMT_DIFF, '+
                'CASE WHEN '+
                '((A.SALES_DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)>=10000 THEN 9999.99 '+
                'WHEN '+
                '((A.SALES_DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100)<=-10000 THEN -9999.99 '+
                'ELSE ((A.SALES_DISSUB_AMT/DECODE(B.STNUM_STORE_NUM,0,NULL,B.STNUM_STORE_NUM))/ '+
                'NULLIFZERO(PMART.DIVIDE_BY_ZERO(DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT), '+
                'DECODE(B.LSTNUM_STORE_NUM,0,NULL,B.LSTNUM_STORE_NUM)))*100) END '+
                'AS LSALES_DISSUB_AMT_RATE '+                
                'FROM '+
                '     #VT_NEW_TOP_MFACT_2 A LEFT JOIN  '+
                '     #VT_NEW_TOP_STFACT_2 B '+
                '     ON (A.TIME_ID=B.TIME_ID AND A.ORG_ID=B.ORG_ID) '+
                ') WITH DATA UNIQUE PRIMARY  CHARINDEX(ORG_ID , TIME_ID) ON COMMIT PRESERVE ROWS;';    
	EXECUTE IMMEDIATE SQLSTR;
END SP;