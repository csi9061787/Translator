REPLACE PROCEDURE PMART.PT_TCFACT_FUNC_TIME(
FP_TIME_ID NUMBER,
FP_ORG_LEVEL NUMBER,FP_ORG_ID NUMBER,
FP_PRD_LEVEL NUMBER,FP_PRD_LIST VARCHAR(2000))
SQL SECURITY INVOKER
SP:BEGIN
DECLARE SQLSTR  VARCHAR(4000);
DECLARE V_TABLE_NAME VARCHAR(30);
   CALL PMART.P_DROP_TABLE ('#VT_PT_TCFACT_FUNC'); 
    SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_PT_TCFACT_FUNC  AS('+
         'SELECT PRD_ID, TR_ID, SUM(CNT) CNT, SUM(AMT) AMT '+
		 ' FROM (  '+
		 '  SELECT  I.PRD_ID AS PRD_ID,   CAST(H.X AS NUMBER) AS TR_ID,   '+
         '             CAST(CASE WHEN I.TIME_RANGE = H.X THEN I.S_CNT ELSE 0 END AS NUMBER) AS CNT,  '+
         '             CAST(CASE WHEN I.TIME_RANGE = H.X THEN I.S_AMT ELSE 0 END AS NUMBER) AS AMT 	'+
         ' FROM PMART.FACT_SALES_TIME I ' +
         '  CROSS JOIN (SELECT CAST(DAY_OF_CALENDAR AS INTEGER) -1 AS X FROM SYS_CALENDAR.CALENDAR  WHERE X BETWEEN 0 AND 23 ) AS H '+
         ' WHERE I.TIME_ID='+ FP_TIME_ID + ' ' +
         ' AND I.ORG_ID='+ FP_ORG_ID +' '+
         ' AND I.PRD_ID IN ('+ PMART.CONVERT_STRING_LIST(FP_PRD_LIST) +') '+
		 ' ) S '+
         ' GROUP BY PRD_ID, TR_ID '+
    ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
	EXECUTE IMMEDIATE SQLSTR;	
END SP;