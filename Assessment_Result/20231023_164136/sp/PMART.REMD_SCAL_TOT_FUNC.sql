REPLACE PROCEDURE PMART.REMD_SCAL_TOT_FUNC(P_DAY_ID NUMBER)
SQL SECURITY INVOKER
SP:BEGIN
DECLARE SQLSTR  VARCHAR(5000) DEFAULT ''; 
  CALL PMART.P_DROP_TABLE ('#VT_REMD_SCAL_TOT_FUNC_1'); 
  CALL PMART.P_DROP_TABLE ('#VT_REMD_SCAL_TOT_FUNC');
  CALL PMART.REMD_ST_TOT_FUNC(P_DAY_ID);
  SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_REMD_SCAL_TOT_FUNC_1  
   (
        R14    VARCHAR(20) Collate Chinese_Taiwan_Stroke_CI_AS ,
        R15    VARCHAR(8) Collate Chinese_Taiwan_Stroke_CI_AS 
    )   
    ON COMMIT PRESERVE ROWS;';  
  EXECUTE IMMEDIATE SQLSTR; 
  INSERT INTO #VT_REMD_SCAL_TOT_FUNC_1(R14  ,R15 ) SELECT '僅課別以下顯示' ,NULL ; 
      SET SQLSTR = 
          'CREATE MULTISET VOLATILE TABLE #VT_REMD_SCAL_TOT_FUNC AS('+            
                'SELECT '+
                'TOT_ID, '+
                'ORG_ID, '+
                'MAST_STORE_NUM AS R1, '+
                'AMT/DECODE(UPLOAD_STNUM,0,NULL,UPLOAD_STNUM) AS R2, '+
                'CUST_NUM/DECODE(UPLOAD_STNUM,0,NULL,UPLOAD_STNUM) AS R3, '+
                'AMT/DECODE(CUST_NUM,0,NULL,CUST_NUM) AS R4, '+
                '(ACCU_AMT/DECODE(ACCU_PLAN_STNUM,0,NULL,ACCU_PLAN_STNUM)) AS R5, '+
		' ( '+
		'SELECT ((SUM(ACCU_AMT) / SUM((DECODE(ACCU_PLAN_STNUM,0,NULL,ACCU_PLAN_STNUM) * DECODE(BUDGET_PDEPT_AVG_AMT,0,NULL,BUDGET_PDEPT_AVG_AMT)))) * 0.9561 * 100) AS AMT '+		
	        ' FROM ( '+
	        ' SELECT '+
	        '  CAST(A.ACCU_AMT AS NUMBER) AS ACCU_AMT '+
	        ' ,CAST(A.ACCU_PLAN_STNUM AS NUMBER) AS ACCU_PLAN_STNUM '+
	        ' ,CAST(A.BUDGET_PDEPT_AVG_AMT AS NUMBER) AS BUDGET_PDEPT_AVG_AMT '+
	        ' FROM PMART.REMD_FACT_SUM A '+
                ' WHERE L_DAY_ID = '+P_DAY_ID+' '+
                ' AND ORG_ID IN (SELECT DISTINCT PDEPT_ID FROM PMART.LAST_ORG_DIM) '+
                '      ) B '+
	        ' ) AS R6,  '+
                ' (REMD_ADD_TKSL( '+P_DAY_ID+' ,''Y'',EX_ACCU_AMT,EX_ACCU_TKSL)/DECODE(EX_ACCU_PLAN_STNUM,0,NULL,EX_ACCU_PLAN_STNUM))/ '+
                '   (REMD_ADD_TKSL( '+P_DAY_ID+' ,''Y'',EX_TOT_AMT_LAST_YEAR,EX_TOT_TKSL_LAST_YEAR)/ '+
                '   DECODE(EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR))*100 '+
                'AS R7, '+
                '(REMD_ADD_TKSL('+P_DAY_ID+',''M'',ACCU_AMT,ACCU_TKSL)/DECODE(ACCU_PLAN_STNUM,0,NULL,ACCU_PLAN_STNUM))/ '+
                '   DECODE(REMD_ADD_TKSL('+P_DAY_ID+',''M'',TOT_AMT_LAST_MONTH,TOT_TKSL_LAST_MONTH)/ '+
                '   DECODE(TOT_PLAN_STNUM_LAST_MONTH,0,NULL,TOT_PLAN_STNUM_LAST_MONTH), '+
                '   0,NULL, REMD_ADD_TKSL('+P_DAY_ID+',''M'',TOT_AMT_LAST_MONTH,TOT_TKSL_LAST_MONTH)/ '+
                '   DECODE(TOT_PLAN_STNUM_LAST_MONTH,0,NULL,TOT_PLAN_STNUM_LAST_MONTH))*100 '+
                'AS R8, '+
		'(ACCU_CUST_NUM/DECODE(ACCU_PLAN_STNUM,0,NULL,ACCU_PLAN_STNUM)) AS R9, '+
                '(EX_ACCU_CUST_NUM/DECODE(EX_ACCU_PLAN_STNUM,0,NULL,EX_ACCU_PLAN_STNUM))/ '+
                'DECODE( EX_TOT_CUST_NUM_LAST_YEAR/DECODE(EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR) '+
                ',0,NULL,EX_TOT_CUST_NUM_LAST_YEAR/DECODE(EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR))*100 '+
                ' AS R10, '+
                '(ACCU_AMT/DECODE(ACCU_CUST_NUM,0,NULL,ACCU_CUST_NUM)) AS R11, '+
		'(REMD_ADD_TKSL('+P_DAY_ID+',''Y'',ACCU_AMT,ACCU_TKSL)/DECODE(ACCU_CUST_NUM,0,NULL,ACCU_CUST_NUM))- '+
                '   (REMD_ADD_TKSL('+P_DAY_ID+',''Y'',EX_TOT_AMT_LAST_YEAR,EX_TOT_TKSL_LAST_YEAR)/ '+
                '   DECODE(EX_TOT_CUST_NUM_LAST_YEAR,0,NULL,EX_TOT_CUST_NUM_LAST_YEAR)) '+
                'AS R12, '+
                '(ACCU_AMT*0.9561/DECODE(BUDGET_ST_TOT_AMT,0,NULL,BUDGET_ST_TOT_AMT))*100 AS R13, '+
		' ( SELECT R14 FROM #VT_REMD_SCAL_TOT_FUNC_1 ) AS R14,'+
		' PMART.GET_WEATHER_NM(0) AS R14_NAME, '+		
		' ( SELECT R15 FROM #VT_REMD_SCAL_TOT_FUNC_1 ) AS R15,'+
                'SCUST_NUM/DECODE(UPLOAD_STNUM,0,NULL,UPLOAD_STNUM) AS R16, '+
                '(ACCU_SCUST_NUM/DECODE(T1.ACCU_PLAN_STNUM,0,NULL,T1.ACCU_PLAN_STNUM)) AS R17, '+
                'ROUND((EX_ACCU_CUST_NUM/DECODE(EX_ACCU_PLAN_STNUM,0,NULL,EX_ACCU_PLAN_STNUM)),0)- '+
                'ROUND(DECODE( EX_TOT_CUST_NUM_LAST_YEAR/DECODE(EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR) '+
                ',0,NULL,EX_TOT_CUST_NUM_LAST_YEAR/DECODE(EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR)),0)  '+
                ' AS R18, '+
                'ROUND(((T1.EX_ACCU_SCUST_NUM)/DECODE(T1.EX_ACCU_PLAN_STNUM,0,NULL,T1.EX_ACCU_PLAN_STNUM)),0)/ '+
                'ROUND(DECODE( EX_TOT_SCUST_NUM_LAST_YEAR/DECODE(T1.EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR) '+
                ',0,NULL,EX_TOT_SCUST_NUM_LAST_YEAR/DECODE(T1.EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR)),0)*100 '+
                ' AS R19, '+
                'ROUND(((T1.EX_ACCU_SCUST_NUM)/DECODE(T1.EX_ACCU_PLAN_STNUM,0,NULL,T1.EX_ACCU_PLAN_STNUM)),0) - '+
                'ROUND(DECODE( EX_TOT_SCUST_NUM_LAST_YEAR/DECODE(T1.EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR) '+
                ',0,NULL,EX_TOT_SCUST_NUM_LAST_YEAR/DECODE(T1.EX_TOT_PLAN_STNUM_LAST_YEAR,0,NULL,EX_TOT_PLAN_STNUM_LAST_YEAR)),0) '+
                ' AS R20, '+
                '(T1.ACCU_PLAN_STNUM/DECODE(BUDGET_ST_TOT_PLAN_STNUM,0,NULL,BUDGET_ST_TOT_PLAN_STNUM))*100 AS R21 '+                 
                'FROM #VT_REMD_ST_TOT_FUNC T1 '+				
          ' ) WITH DATA ON COMMIT PRESERVE ROWS;';
    EXECUTE IMMEDIATE SQLSTR; 
END SP;