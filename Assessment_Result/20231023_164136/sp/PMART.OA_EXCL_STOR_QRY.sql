REPLACE PROCEDURE PMART.OA_EXCL_STOR_QRY
(
	IN P_TIME_ID_S VARCHAR(6),
	IN P_TIME_ID_E VARCHAR(6),
	IN P_EXCL_ID VARCHAR(6),
	IN P_ORG_ID VARCHAR(10),
	IN P_STORE_NO VARCHAR(6)
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(4000)  DEFAULT '';
	DECLARE SQLSTR_FROM VARCHAR(100);
	DECLARE SQLSTR_WHERE VARCHAR(100);
	CALL PMART.P_DROP_TABLE ('#VT_OA_EXCL_STOR_QRY');
	IF P_STORE_NO = '' THEN
		SET SQLSTR_WHERE = '';
	ELSE
		SET SQLSTR_WHERE = ' AND E.STORE_ID = '+ P_STORE_NO;
	END IF;
	IF P_EXCL_ID = '' THEN
		SET SQLSTR_WHERE = SQLSTR_WHERE + '';
	ELSE
		SET SQLSTR_WHERE = SQLSTR_WHERE + ' AND E.EXCL_ID = '+ P_EXCL_ID;
	END IF;
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_OA_EXCL_STOR_QRY AS( '
 						+ ' SELECT E.TIME_ID, '
						+ ' CASE WHEN EXCL_ID = 1000 THEN '''+'1000:兩者都排除'+''' WHEN EXCL_ID = 1001 THEN '''+'1001:排除系訂率'+''' WHEN EXCL_ID = 1002 THEN '''+'1002:排除系訂調整率'+''' ELSE EXCL_ID END AS EXCL_NM, '
						+ ' E.STORE_ID, O.STORE_NM, COALESCE(PE.EMP_NAME, NULL, E.EMP_NO) AS EMP_NO, E.UPDATE_TIME '
						+ ' FROM PDATA.OA_EXCL_STOR E '
						+ ' INNER JOIN ( '
						 + ' SELECT STORE_NO, STORE_ID, STORE_NM '
						 + '    FROM PMART.LATEST_ORG_DIM '
						 + ' WHERE TOT_ID = '+ P_ORG_ID +' OR PDEPT_ID = '+ P_ORG_ID +' OR DEPT_ID = '+ P_ORG_ID +' OR BRANCH_ID = '+ P_ORG_ID +' OR RESPON_ID = '+ P_ORG_ID +' '
						+ ' ) O ON E.STORE_ID = O.STORE_ID '
						+ ' LEFT JOIN PDATA.PBMEMP PE ON E.EMP_NO = PE.EMP_NO '
						+ ' WHERE E.TIME_ID BETWEEN '+ P_TIME_ID_S +' AND '+ P_TIME_ID_E +' '
						+ SQLSTR_WHERE
 						+ ' ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
	EXECUTE IMMEDIATE SQLSTR;
END SP;