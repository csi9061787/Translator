REPLACE PROCEDURE PMART.OLD0401_FUNC_FACT_SALES
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(1000),
   IN P_TIMETYPE VARCHAR(1),   
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(20),
   IN P_PRDTYPE SMALLINT,
   IN P_PRDID VARCHAR(20),
   IN P_AUTH_LEVEL SMALLINT,
   IN P_AUTH_LEVEL_ID VARCHAR(20)
)
SP:BEGIN
   DECLARE SQLSTR  VARCHAR(20000);
   DECLARE ORGWHERE VARCHAR(2000);
   DECLARE PRDWHERE VARCHAR(2000);
   DECLARE SELECTWHERE VARCHAR(500);
   DECLARE SELECTWHEREO VARCHAR(500);
   DECLARE SELECT_CALCNT VARCHAR(200);
   DECLARE TIME_CALCNT VARCHAR(500);  	 	 
   DECLARE TIMEWHERE_CALCNT VARCHAR(500);
   DECLARE SELECT_PRD VARCHAR(50);
   DECLARE FSELECT_PRD VARCHAR(50);
   DECLARE TIME_SELECT VARCHAR(500);
   DECLARE SELECT_ORG VARCHAR(50);
   DECLARE FSELECT_ORG VARCHAR(50);
   DECLARE SELECT_JOIN VARCHAR(50);
   DECLARE OSELECT_ORG VARCHAR(50);
   DECLARE OFSELECT_ORG VARCHAR(50);
   DECLARE BASE_SELECT VARCHAR(2000);
   DECLARE UNION_DETAIL VARCHAR(5000);
   DECLARE EXTRA_SELECT VARCHAR(50);
   DECLARE TEMP_JOIN VARCHAR(200);
	 SET ORGWHERE = ' WHERE 1=1 ';
	 SET PRDWHERE = ' WHERE 1=1 ';
	 SET SELECTWHERE = ' ';
	 SET OSELECT_ORG = ' ';
	 SET OFSELECT_ORG = ' ';
	 SET UNION_DETAIL = ' ';
      IF P_RPTID = 1  THEN
		  SET SELECT_CALCNT = ' T.ORG_ID ';
		  SET SELECT_JOIN = ' AND T.ORG_ID = C.ORG_ID ';
		  SET EXTRA_SELECT = ' ,O.* ';
		  IF P_ORGTYPE = 0 THEN
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.ORG_ID = B.ORG_ID ';
		  ELSEIF P_ORGTYPE = 1 THEN
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.ORG_ID = B.ORG_ID ';
		  ELSEIF P_ORGTYPE = 2 THEN
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.S_ID = B.ORG_ID ';
		  ELSEIF P_ORGTYPE = 3 THEN
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.S_ID = B.ORG_ID ';
		  ELSEIF P_ORGTYPE = 4 THEN
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.ORG_ID = B.ORG_ID ';
		  ELSE
			  SET TEMP_JOIN = ' JOIN #VT_BASE_ORG O ON O.ORG_ID = B.ORG_ID ';
		  END IF;
		  IF P_PRDTYPE = -1 THEN
			  SET SELECTWHERE = ' AND B.PRD_ID = -1 ';
		  ELSE
			  SET SELECTWHERE = ' AND B.PRD_ID = '+P_PRDID;
		  END IF;
	  ELSE
		  SET SELECT_CALCNT = ' T.PRD_ID ';
		  SET SELECT_JOIN = ' ';
		  SET EXTRA_SELECT = ' ,P.PRD_ID, B.ORG_ID ';
		  SET TEMP_JOIN = ' JOIN #VT_BASE_PRD P ON P.PRD_ID = B.PRD_ID ';
		  IF P_AUTH_LEVEL = 6 OR P_AUTH_LEVEL = 7 THEN
			  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE DEPT_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
		  ELSEIF P_AUTH_LEVEL = 8 THEN
			  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE BRANCH_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
		  ELSEIF P_AUTH_LEVEL = 9 THEN
			  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE RESPON_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
		  END IF;
		  IF P_ORGTYPE = -1 THEN
			  SET SELECTWHEREO = ' AND B.ORG_ID = -1 ';
		  ELSE
			  SET SELECTWHEREO = ' AND B.ORG_ID = '+P_ORGID;
		  END IF;
		  IF P_ORGTYPE = 2 OR P_ORGTYPE = 3 THEN
			  SET SELECTWHERE = ' JOIN #VT_BASE_ORG O ON O.S_ID = B.ORG_ID AND O.ORG_ID = '+P_ORGID;
		  ELSE
			  SET SELECTWHERE = ' JOIN #VT_BASE_ORG O ON O.ORG_ID = B.ORG_ID AND O.ORG_ID = '+P_ORGID;
		  END IF;
	  END IF;
	  SET TIME_SELECT = ' AND B.TIME_ID IN ('+P_TIMEID+') ';
	  SET BASE_SELECT = '  CASE WHEN D.TIME_ID IS NOT NULL THEN D.TIME_ID ELSE 0 END AS TIME_ID '
							 + '                ,CASE WHEN CAST(B.SALES_CNT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.SALES_CNT AS DECIMAL(16,0)) ELSE 0 END AS SALES_CNT '
							 + '                ,CASE WHEN CAST(B.SALES_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.SALES_AMT AS DECIMAL(16,0)) ELSE 0 END AS SALES_AMT '
							 + '                ,CASE WHEN CAST((B.SALES_AMT - B.DIS_AMT - B.SUB_AMT) AS DECIMAL(16,0)) IS NOT NULL THEN CAST((B.SALES_AMT - B.DIS_AMT - B.SUB_AMT) AS DECIMAL(16,0)) ELSE 0 END AS AC_SALES_AMT '
							 + '                ,CASE WHEN CAST(B.TSALES_CNT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.TSALES_CNT AS DECIMAL(16,0)) ELSE 0 END AS TM_SALES_CNT '
							 + '                ,CASE WHEN CAST(B.TSALES_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.TSALES_AMT AS DECIMAL(16,0)) ELSE 0 END AS TM_SALES_AMT '
							 + '                ,CASE WHEN CAST(B.AC_TSALES_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.AC_TSALES_AMT AS DECIMAL(16,0)) ELSE 0 END AS TM_AC_SALES_AMT '
							 + '                ,CASE WHEN CAST(B.INPRD_CNT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.INPRD_CNT AS DECIMAL(16,0)) ELSE 0 END AS IN_CNT '
							 + '                ,CASE WHEN CAST(B.INPRD_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.INPRD_AMT AS DECIMAL(16,0)) ELSE 0 END AS IN_AMT '
							 + '                ,CASE WHEN CAST(B.THROW_CNT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.THROW_CNT AS DECIMAL(16,0)) ELSE 0 END AS THROW_CNT '
							 + '                ,CASE WHEN CAST(B.THROW_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.THROW_AMT AS DECIMAL(16,0)) ELSE 0 END AS THROW_AMT ';
	  IF P_TIMETYPE <> 'D' THEN
		  SET BASE_SELECT = ' DISTINCT '+BASE_SELECT;
	  END IF;
	  IF P_ORGTYPE = 0 THEN
	      SET ORGWHERE = ' WHERE PDEPT_ID  = ' + TRIM(P_ORGID);
		  SET SELECT_ORG = ' DEPT_ID ';	  
		  SET FSELECT_ORG = ' PDEPT_ID ';
	  ELSEIF P_ORGTYPE = 1 THEN
	      SET ORGWHERE = ' WHERE DEPT_ID  = ' + TRIM(P_ORGID);
		  SET SELECT_ORG = ' BRANCH_ID ';	  
		  SET FSELECT_ORG = ' DEPT_ID ';
	  ELSEIF P_ORGTYPE = 2 THEN
	      SET ORGWHERE = ' WHERE BRANCH_ID  = ' + TRIM(P_ORGID);
		  SET SELECT_ORG = ' RESPON_ID ';
		  SET FSELECT_ORG = ' BRANCH_ID ';
		  SET OSELECT_ORG = ' ,OSTORE_ID AS S_ID';
		  SET OFSELECT_ORG = ' ,BRANCH_ID AS S_ID';
	  ELSEIF P_ORGTYPE = 3 THEN
	      SET ORGWHERE = ' WHERE RESPON_ID  = ' + TRIM(P_ORGID);
		  SET SELECT_ORG = ' OSTORE_ID ';
		  SET FSELECT_ORG = ' RESPON_ID ';
		  SET OSELECT_ORG = ' ,OSTORE_ID AS S_ID';
		  SET OFSELECT_ORG = ' ,OSTORE_ID AS S_ID';
	  ELSEIF P_ORGTYPE = 4 THEN
	      SET ORGWHERE = ' WHERE OSTORE_ID  = ' + TRIM(P_ORGID);
		  SET SELECT_ORG = ' OSTORE_ID ';
		  SET FSELECT_ORG = ' OSTORE_ID ';
	  ELSE
		  SET SELECT_ORG = ' PDEPT_ID ';
		  SET FSELECT_ORG = ' CAST(-1 AS INTEGER) ';
	  END IF;  
	  IF P_PRDTYPE = 1 THEN
		  SET PRDWHERE = ' WHERE KND_ID = '''  + P_PRDID + ''' ';
		  SET SELECT_PRD = ' GRP_ID ';	  
		  SET FSELECT_PRD = ' KND_ID ';
	  ELSEIF P_PRDTYPE = 2 THEN
		  SET PRDWHERE = ' WHERE GRP_ID = '''  + P_PRDID + ''' ';
		  SET SELECT_PRD = ' PRD_ID ';	  
		  SET FSELECT_PRD = ' GRP_ID ';
		  SET UNION_DETAIL = ' UNION SELECT '+BASE_SELECT+EXTRA_SELECT+' FROM PMART.BASIC_MFACT_DETAIL B INNER JOIN #VT_FACT_SALES_TXDAY D ON D.TIME_ID = B.TIME_ID '+TEMP_JOIN+SELECTWHERE +TIME_SELECT;
	  ELSEIF P_PRDTYPE = 3 THEN
		  SET PRDWHERE = ' WHERE PRD_ID = '''  + P_PRDID + ''' ';
		  SET SELECT_PRD = ' PRD_ID ';	  
		  SET FSELECT_PRD = ' PRD_ID ';
		  SET UNION_DETAIL = ' UNION SELECT '+BASE_SELECT+EXTRA_SELECT+' FROM PMART.BASIC_MFACT_DETAIL B INNER JOIN #VT_FACT_SALES_TXDAY D ON D.TIME_ID = B.TIME_ID '+TEMP_JOIN+SELECTWHERE +TIME_SELECT;
	  ELSE
	      SET SELECT_PRD = ' KND_ID ';	  
		  SET FSELECT_PRD = ' CAST(-1 AS INTEGER) ';
	  END IF;
	  IF P_TIMETYPE = 'M' THEN
	    SET TIMEWHERE_CALCNT = '  AND D.L_MONTH_ID IN ('+P_TIMEID+')';
		SET TIME_CALCNT = '  L_MONTH_ID ';
	  ELSEIF P_TIMETYPE = 'W' THEN
	     SET TIMEWHERE_CALCNT = '  AND D.L_WEEK_ID IN ('+P_TIMEID+')';
		 SET TIME_CALCNT = '  L_WEEK_ID ';		
	  ELSEIF P_TIMETYPE = 'D' THEN
	     SET TIMEWHERE_CALCNT = '  AND D.L_DAY_ID IN ('+P_TIMEID+')';
		 SET TIME_CALCNT = '  L_DAY_ID ';	
	  END IF;
	  CALL PMART.P_DROP_TABLE ('#VT_BASE_ORG');
	  CALL PMART.P_DROP_TABLE ('#VT_BASE_PRD');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_SALES_TEMP');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_SALES');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_SALES_TXDAY');
	  CALL PMART.P_DROP_TABLE ('#VT_BASE_CNT');
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_SALES_TXDAY AS( '
                      +'     SELECT D.'+TIME_CALCNT+'  AS TIME_ID, L_DAY_ID FROM PMART.TIME_D D ' 
	                  +'       WHERE 1=1  ' + TIMEWHERE_CALCNT 
					  + '  ) WITH DATA PRIMARY  CHARINDEX( L_DAY_ID,TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_ORG AS( '
							 + ' SELECT DISTINCT '+SELECT_ORG+' AS ORG_ID '+OSELECT_ORG
							 + ' FROM PMART.LAST_ORG_DIM ' +ORGWHERE 
							 + ' UNION '
							 + ' SELECT DISTINCT '+FSELECT_ORG+' AS ORG_ID '+OFSELECT_ORG
							 + ' FROM PMART.LAST_ORG_DIM ' +ORGWHERE 
							 + ' ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';			
	EXECUTE IMMEDIATE SQLSTR;  
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_PRD AS( '
						 + ' SELECT DISTINCT ' +SELECT_PRD+' AS PRD_ID '
						 + ' FROM PMART.PRD_DIM ' +PRDWHERE 
						 + ' UNION '
						 + ' SELECT DISTINCT ' +FSELECT_PRD+' AS PRD_ID '
						 + ' FROM PMART.PRD_DIM ' +PRDWHERE 
						 + ' ) WITH DATA PRIMARY INDEX(PRD_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
IF P_RPTID = 1  THEN
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_CNT AS( '
							 + ' SELECT TIME_ID,ORG_ID,PRD_ID,SUM(UPLOAD_STORE_NUM) AS UPLOAD_STORE_NUM FROM ( '
							 + ' SELECT T.TIME_ID,D.ORG_ID,A.PRD_ID '
							 + ' ,BIT_EXTRACT(BIT_AND(A.SALES_STORE_NUM,D.MASK)) AS UPLOAD_STORE_NUM '
							 + ' FROM PMART.BASIC_STFACT A '
							 + ' ,(SELECT MASK,ORG_ID FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID IN ( SELECT ORG_ID FROM #VT_BASE_ORG O ))D '
							 + ' ,#VT_FACT_SALES_TXDAY T '
							 + ' WHERE  A.TIME_ID = T.L_DAY_ID AND A.PRD_ID = -1 '
							 + ' UNION ALL '
							 + ' SELECT -1,D.ORG_ID,-1 '
							 + ' ,BIT_EXTRACT(BIT_AND(A.SALES_STORE_NUM,D.MASK)) AS UPLOAD_STORE_NUM '
							 + ' FROM PMART.BASIC_STFACT A '
							 + ' ,(SELECT MASK,ORG_ID FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID IN ( SELECT ORG_ID FROM #VT_BASE_ORG O ))D '
							 + ' ,#VT_FACT_SALES_TXDAY T '
							 + ' WHERE  A.TIME_ID = T.L_DAY_ID AND A.PRD_ID = -1 '
							 + ' )D GROUP BY TIME_ID,ORG_ID,PRD_ID '
							 + ' ) WITH DATA PRIMARY  CHARINDEX(ORG_ID,TIME_ID,PRD_ID) ON COMMIT PRESERVE ROWS;';
	EXECUTE IMMEDIATE SQLSTR;  
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_SALES_TEMP AS( '
							 + ' SELECT TIME_ID,ORG_ID '
							 + ' ,SUM(SALES_CNT) AS SALES_CNT ,SUM(SALES_AMT) AS SALES_AMT ,SUM(AC_SALES_AMT) AS AC_SALES_AMT '
							 + ' ,SUM(TM_SALES_CNT) AS TM_SALES_CNT ,SUM(TM_SALES_AMT) AS TM_SALES_AMT ,SUM(TM_AC_SALES_AMT) AS TM_AC_SALES_AMT '
							 + ' ,SUM(IN_CNT) AS IN_CNT ,SUM(IN_AMT) AS IN_AMT ,SUM(THROW_CNT) AS THROW_CNT ,SUM(THROW_AMT) AS THROW_AMT '
							 + ' FROM ( '
							 + ' SELECT '+ BASE_SELECT+EXTRA_SELECT
							 + '	    FROM PMART.BASIC_MFACT B INNER JOIN #VT_FACT_SALES_TXDAY D ON D.TIME_ID = B.TIME_ID '
							 +TEMP_JOIN+SELECTWHERE +TIME_SELECT+UNION_DETAIL
							 + ' ) D GROUP BY TIME_ID,ORG_ID '
							 + ' ) WITH DATA PRIMARY  CHARINDEX(ORG_ID,TIME_ID) ON COMMIT PRESERVE ROWS;';			
	EXECUTE IMMEDIATE SQLSTR;  
	SET SQLSTR = ' INSERT INTO #VT_FACT_SALES_TEMP '
							 + ' SELECT -1,ORG_ID '
							 + ' ,SUM(SALES_CNT) AS SALES_CNT ,SUM(SALES_AMT) AS SALES_AMT ,SUM(AC_SALES_AMT) AS AC_SALES_AMT '
							 + ' ,SUM(TM_SALES_CNT) AS TM_SALES_CNT ,SUM(TM_SALES_AMT) AS TM_SALES_AMT ,SUM(TM_AC_SALES_AMT) AS TM_AC_SALES_AMT '
							 + ' ,SUM(IN_CNT) AS IN_CNT ,SUM(IN_AMT) AS IN_AMT ,SUM(THROW_CNT) AS THROW_CNT ,SUM(THROW_AMT) AS THROW_AMT '
							 + ' FROM #VT_FACT_SALES_TEMP '
							 + ' GROUP BY ORG_ID;';			
	EXECUTE IMMEDIATE SQLSTR;  
ELSE
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_CNT AS( '
							 + ' SELECT TIME_ID,ORG_ID,PRD_ID,SUM(UPLOAD_STORE_NUM) AS UPLOAD_STORE_NUM FROM ( '
							 + ' SELECT T.TIME_ID,D.ORG_ID,A.PRD_ID '
							 + ' ,BIT_EXTRACT(BIT_AND(A.SALES_STORE_NUM,D.MASK)) AS UPLOAD_STORE_NUM '
							 + ' FROM PMART.BASIC_STFACT A '
							 + ' ,(SELECT MASK,ORG_ID FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID IN ( SELECT ORG_ID FROM #VT_BASE_ORG B WHERE 1 = 1 '+SELECTWHEREO+'))D '
							 + ' ,#VT_FACT_SALES_TXDAY T '
							 + ' WHERE  A.TIME_ID = T.L_DAY_ID  AND A.PRD_ID = -1 '
							 + ' UNION ALL '
							 + ' SELECT -1,D.ORG_ID,-1 '
							 + ' ,BIT_EXTRACT(BIT_AND(A.SALES_STORE_NUM,D.MASK)) AS UPLOAD_STORE_NUM '
							 + ' FROM PMART.BASIC_STFACT A '
							 + ' ,(SELECT MASK,ORG_ID FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID IN ( SELECT ORG_ID FROM #VT_BASE_ORG B WHERE 1 = 1 '+SELECTWHEREO+'))D '
							 + ' ,#VT_FACT_SALES_TXDAY T '
							 + ' WHERE  A.TIME_ID = T.L_DAY_ID  AND A.PRD_ID = -1 '
							 + ' )D GROUP BY TIME_ID,ORG_ID,PRD_ID '
							 + ' ) WITH DATA PRIMARY  CHARINDEX(ORG_ID,TIME_ID,PRD_ID) ON COMMIT PRESERVE ROWS;';
	EXECUTE IMMEDIATE SQLSTR;  
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_SALES_TEMP AS( '
							 + ' SELECT TIME_ID,PRD_ID '
							 + ' ,SUM(SALES_CNT) AS SALES_CNT ,SUM(SALES_AMT) AS SALES_AMT ,SUM(AC_SALES_AMT) AS AC_SALES_AMT '
							 + ' ,SUM(TM_SALES_CNT) AS TM_SALES_CNT ,SUM(TM_SALES_AMT) AS TM_SALES_AMT ,SUM(TM_AC_SALES_AMT) AS TM_AC_SALES_AMT '
							 + ' ,SUM(IN_CNT) AS IN_CNT ,SUM(IN_AMT) AS IN_AMT ,SUM(THROW_CNT) AS THROW_CNT ,SUM(THROW_AMT) AS THROW_AMT '
							 + ' FROM ( '
							 + ' SELECT '+ BASE_SELECT+EXTRA_SELECT
							 + '	    FROM PMART.BASIC_MFACT B INNER JOIN #VT_FACT_SALES_TXDAY D ON D.TIME_ID = B.TIME_ID '
							 +TEMP_JOIN+SELECTWHERE +TIME_SELECT+UNION_DETAIL
							 + ' ) D GROUP BY TIME_ID,PRD_ID '
							 + ' ) WITH DATA PRIMARY INDEX(TIME_ID) ON COMMIT PRESERVE ROWS;';			
	EXECUTE IMMEDIATE SQLSTR;  
	SET SQLSTR = ' INSERT INTO #VT_FACT_SALES_TEMP '
							 + ' SELECT -1,PRD_ID '
							 + ' ,SUM(SALES_CNT) AS SALES_CNT ,SUM(SALES_AMT) AS SALES_AMT ,SUM(AC_SALES_AMT) AS AC_SALES_AMT '
							 + ' ,SUM(TM_SALES_CNT) AS TM_SALES_CNT ,SUM(TM_SALES_AMT) AS TM_SALES_AMT ,SUM(TM_AC_SALES_AMT) AS TM_AC_SALES_AMT '
							 + ' ,SUM(IN_CNT) AS IN_CNT ,SUM(IN_AMT) AS IN_AMT ,SUM(THROW_CNT) AS THROW_CNT ,SUM(THROW_AMT) AS THROW_AMT '
							 + ' FROM #VT_FACT_SALES_TEMP '
							 + ' GROUP BY PRD_ID;';			
	EXECUTE IMMEDIATE SQLSTR;  
END IF;
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_SALES AS( '
						 + ' SELECT  1 AS DATA_TYPE'
						 + '                ,T.TIME_ID '
						 + '                ,' + SELECT_CALCNT + ' AS Y_DIM '
						 + '                ,T.SALES_CNT AS SALES_CNT '
						 + '                ,CAST(T.SALES_CNT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS SALES_CNT_PSD '
						 + '                ,T.SALES_AMT AS SALES_AMT '
						 + '                ,CAST(T.SALES_AMT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS SALES_AMT_PSD '
						 + '                ,T.AC_SALES_AMT AS AC_SALES_AMT '
						 + '                ,CAST(T.AC_SALES_AMT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS AC_SALES_AMT_PSD '
						 + '                ,T.TM_SALES_CNT AS TM_SALES_CNT '
						 + '                ,CAST(T.TM_SALES_CNT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS TM_SALES_CNT_PSD '
						 + '                ,T.TM_SALES_AMT AS TM_SALES_AMT '
						 + '                ,CAST(T.TM_SALES_AMT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS TM_SALES_AMT_PSD '
						 + '                ,T.TM_AC_SALES_AMT AS TM_AC_SALES_AMT '
						 + '                ,CAST(T.TM_AC_SALES_AMT AS DECIMAL(16,2)) / CASE WHEN C.UPLOAD_STORE_NUM = 0 THEN 1 ELSE C.UPLOAD_STORE_NUM END AS TM_AC_SALES_AMT_PSD '
						 + '                ,T.IN_CNT AS IN_CNT '
						 + '                ,T.IN_AMT AS IN_AMT '
						 + '                ,T.THROW_CNT AS THROW_CNT '
						 + '                ,T.THROW_AMT AS THROW_AMT '
						 + '	    FROM #VT_FACT_SALES_TEMP T '
						 + '	    JOIN #VT_BASE_CNT C ON T.TIME_ID = C.TIME_ID '+SELECT_JOIN
						 + ' ) WITH DATA PRIMARY  CHARINDEX(Y_DIM,TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
END SP;