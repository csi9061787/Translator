REPLACE PROCEDURE PMART.FUNC_FACT_PAS
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(1000),
   IN P_TIMETYPE VARCHAR(1),   
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(20),
   IN P_DISTRICTTYPE SMALLINT,
   IN P_DISTRICT VARCHAR(20),
   IN P_PRD_Y SMALLINT,
   IN P_PRDTYPE SMALLINT,
   IN P_PRDID VARCHAR(20),
    IN P_PAS_TYPE VARCHAR(100),
	IN P_ACT_CATEGORY VARCHAR(2)
)
SP:BEGIN
   DECLARE SQLSTR  VARCHAR(20000);
   DECLARE TIME_SELECT VARCHAR(500);
   DECLARE SELECT_CALCNT VARCHAR(200);   
   DECLARE ORGWHERE VARCHAR(2000);
   DECLARE ORG_FSELECT VARCHAR(50);
   DECLARE ORG_SELECT VARCHAR(50);
   DECLARE DISTWHERE VARCHAR(50);
   DECLARE DIST_FSELECT VARCHAR(50);
   DECLARE DIST_SELECT VARCHAR(50);
   DECLARE PRDWHERE VARCHAR(50);
   DECLARE PRD_FSELECT VARCHAR(50);
   DECLARE PRD_SELECT VARCHAR(50);
   DECLARE JOINPRDCOLUMN VARCHAR(50);
   DECLARE SRCWHERE VARCHAR(1000);
   DECLARE SRCTYPE VARCHAR(50);
   DECLARE ACTWHERE VARCHAR(50);
   DECLARE BASETABLE VARCHAR(50);
   DECLARE JOINTABLE VARCHAR(50);
   DECLARE Y_DIM VARCHAR(50);
   DECLARE TIMEWHERE_CALCNT VARCHAR(500);
   DECLARE JOINPRDTABLE VARCHAR(50);
   SET TIME_SELECT = ' AND B.TIME_ID IN ('+P_TIMEID+') ';
   IF P_TIMETYPE = 'Y' THEN
	   SET TIMEWHERE_CALCNT = '  WHERE L_YEAR_ID IN ('+P_TIMEID+')';
   ELSEIF P_TIMETYPE = 'M' THEN
	   SET TIMEWHERE_CALCNT = '  WHERE L_MONTH_ID IN ('+P_TIMEID+')';
   ELSEIF P_TIMETYPE = 'D' THEN
	   SET TIMEWHERE_CALCNT = '  WHERE L_DAY_ID IN ('+P_TIMEID+')';
   ELSEIF  P_TIMETYPE = 'W' THEN	
       SET TIMEWHERE_CALCNT = '  WHERE L_WEEK_ID IN ('+P_TIMEID+')';
   END IF;
   SET ORGWHERE = '  ';
   SET DISTWHERE = '  ';
   SET PRDWHERE = ' WHERE 1=1 ';
   SET JOINTABLE = ' ';
   SET ACTWHERE = ' ';
	IF P_DISTRICTTYPE = -1 THEN
		SET DISTWHERE = DISTWHERE;
		SET DIST_FSELECT = ' CAST(''-1'' AS VARCHAR(2)) ';
		SET DIST_SELECT = ' S.SHOP_DISTTRICT_MAIN ';	  
	ELSEIF P_DISTRICTTYPE = 1 THEN
		SET DISTWHERE = DISTWHERE + ' AND S.SHOP_DISTTRICT_MAIN = '''  + P_DISTRICT + ''' ';
		SET DIST_FSELECT = ' S.SHOP_DISTTRICT_MAIN ';
		SET DIST_SELECT = ' S.SHOP_DISTTRICT_MAIN ';
	END IF;     
	IF P_ORGTYPE = 0 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.PDEPT_ID  = ' + TRIM(P_ORGID); 
		SET ORG_FSELECT = ' S.PDEPT_ID ';
		SET ORG_SELECT = ' S.DEPT_ID ';
	ELSEIF P_ORGTYPE = 1 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.DEPT_ID  = ' + TRIM(P_ORGID); 
		SET ORG_FSELECT = ' S.DEPT_ID ';
		SET ORG_SELECT = ' S.BRANCH_ID ';
	ELSEIF P_ORGTYPE = 2 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.BRANCH_ID = ' + TRIM(P_ORGID);
		SET ORG_FSELECT = ' S.BRANCH_ID ';
		SET ORG_SELECT = ' S.RESPON_ID ';
	ELSEIF P_ORGTYPE = 3 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.RESPON_ID = ' + TRIM(P_ORGID);
		SET ORG_FSELECT = ' S.RESPON_ID ';
		SET ORG_SELECT = ' S.OSTORE_ID ';
	ELSEIF P_ORGTYPE = 4 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.OSTORE_ID = ' + TRIM(P_ORGID);
		SET ORG_FSELECT = ' S.OSTORE_ID ';
		SET ORG_SELECT = ' S.OSTORE_ID ';
	ELSE
		SET ORGWHERE = ORGWHERE;	
		SET ORG_FSELECT = ' CAST(''-1'' AS INTEGER) ';
		SET ORG_SELECT = ' S.PDEPT_ID ';
	END IF; 
	IF P_PRDTYPE = 1 THEN
		SET PRDWHERE = ' AND TRIM(P.KND_ID)  = ''' + TRIM(P_PRDID)+'''';  
		SET PRD_FSELECT = ' CAST(TRIM(P.KND_ID) AS VARCHAR(3)) ';
		SET PRD_SELECT = ' TRIM(P.GRP_ID) ';
	ELSEIF P_PRDTYPE = 2 THEN
		SET PRDWHERE = ' AND TRIM(P.GRP_ID) = ''' + TRIM(P_PRDID)+'''';
		SET PRD_FSELECT = ' CAST(TRIM(P.GRP_ID) AS VARCHAR(7)) ';
		SET PRD_SELECT = ' TRIM(P.PRD_ID) ';
	ELSEIF P_PRDTYPE = 3 THEN
		SET PRDWHERE = ' AND TRIM(P.PRD_ID) = ''' + TRIM(P_PRDID)+'''';
		SET PRD_FSELECT = ' TRIM(P.PRD_ID) ';
		SET PRD_SELECT = ' TRIM(P.PRD_ID) ';
	ELSE
		SET PRDWHERE = PRDWHERE; 	
		SET PRD_FSELECT = 'TRIM(''-1'')';
		SET PRD_SELECT = ' TRIM(P.KND_ID) ';
	END IF;  
	IF P_PRD_Y = 1 THEN
		SET JOINPRDCOLUMN = ' D.PRE_FMCODE ';
	ELSE
		SET JOINPRDCOLUMN = ' D.REP_FMCODE ';
	END IF;
   IF   (P_PAS_TYPE IS NULL  OR TRIM(P_PAS_TYPE)='0'  OR SUBSTRING(TRIM(P_PAS_TYPE),1,1)='0')  THEN  
        SET SRCWHERE = ' AND SRC =''-1'' ';
   ELSE
		 SET SRCWHERE = ' AND SRC IN    (SELECT CODE_NAME FROM PDATA.PBMCODE WHERE CODE_TYPE = ''PAS_SRC'' AND CODE_ID IN ( '+P_PAS_TYPE+'))';
   END IF;
       SET ACTWHERE = ' AND ACT_CATEGORY =  ''' +P_ACT_CATEGORY+'''';  
   IF P_RPTID = 1 THEN
	   SET BASETABLE = ' PMART.FACT_MEMBER_PAS_PRD ';
	   SET Y_DIM = ' B.ORG_ID ';
		IF P_PRDTYPE = -1 THEN
			SET SELECT_CALCNT = ' AND TRIM(B.PRD_ID) = ''-1'' ';
		ELSE
			SET SELECT_CALCNT = ' AND TRIM(B.PRD_ID) = TRIM('''+P_PRDID+''')';
		END IF;
   ELSEIF P_RPTID = 2 THEN
	   SET BASETABLE = ' PMART.FACT_MEMBER_PAS_SHOPDIST ';
	   SET Y_DIM = ' B.SHOP_DIST ';
	   SET JOINTABLE = ' JOIN SYSDBA.#VT_DIST D ON B.SHOP_DIST = D.ORG_ID ';
	   IF P_ORGTYPE = -1 THEN
			SET SELECT_CALCNT = ' AND B.ORG_ID = -1 ';
		ELSE
			SET SELECT_CALCNT = ' AND B.ORG_ID = '+P_ORGID;
		END IF;
   ELSEIF P_RPTID = 3 THEN          
	   IF P_PRD_Y = 1 THEN
		   SET BASETABLE = ' PMART.FACT_MEMBER_PAS_PRD ';
		   SET JOINPRDTABLE = ' PDATA.PAS_PACK_ITEMD ' ;
	   ELSEIF P_PRD_Y = 2 THEN
		   SET BASETABLE = ' PMART.FACT_MEMBER_PAS_REP ';
		   SET JOINPRDTABLE = ' PDATA.PAS_PACK_ITEMD ' ;
	   ELSEIF P_PRD_Y = 3 THEN
		   SET BASETABLE = ' PMART.FACT_MEMBER_PAS_SERIES ';
		   SET JOINPRDTABLE = ' PDATA.PAS_PACK_ITEM_SERIES ' ;
		   SET ACTWHERE = ' AND ACT_CATEGORY IN (''11'',''12'',''61'') ';  
	   END IF;
	   SET Y_DIM = ' B.PRD_ID ';
	   SET JOINTABLE = ' JOIN SYSDBA.#VT_PRD P ON B.PRD_ID = P.PRD_ID ';
	   IF P_ORGTYPE = -1 THEN
			SET SELECT_CALCNT = ' AND B.ORG_ID = -1 ';
		ELSE
			SET SELECT_CALCNT = ' AND B.ORG_ID = '+P_ORGID;
		END IF;
   END IF;
	CALL PMART.P_DROP_TABLE ('#VT_FACT_PAS_TMP');
	CALL PMART.P_DROP_TABLE ('#VT_FACT_PAS');
	CALL PMART.P_DROP_TABLE ('#VT_FACT_PAS_TXDAY');
	CALL PMART.P_DROP_TABLE ('#VT_ORG');
	CALL PMART.P_DROP_TABLE ('#VT_PRD');
	CALL PMART.P_DROP_TABLE ('#VT_DIST');
	CALL PMART.P_DROP_TABLE ('#VT_HEADER');
IF  (TRIM(P_ORGTYPE) =0  AND TRIM(P_ORGID)=9999999 )  OR 
	   (TRIM(P_ORGTYPE) =1  AND TRIM(P_ORGID)=4200120 ) OR
	  (TRIM(P_ORGTYPE) =2  AND TRIM(P_ORGID)=3210201 )  OR 
	  (TRIM(P_ORGTYPE) =3  AND TRIM(P_ORGID)=999 )  OR
	  (TRIM(P_ORGTYPE) =4  AND TRIM(P_ORGID)=18168 )   THEN 
	 IF (TRIM(P_ORGTYPE) =0  AND TRIM(P_ORGID)=9999999 ) THEN 
	    SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '
                      +'     SELECT * FROM (SELECT -1 LEVEL, CAST( -1  AS INT) AS ORG_ID) A '
					  +'     UNION  ALL  '
					  + '    SELECT * FROM (SELECT  0 LEVEL, CAST(9999999 AS INT) AS ORG_ID ) B  '				
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';	
	 END IF;				  
	IF (TRIM(P_ORGTYPE) =1  AND  TRIM(P_ORGID)='4200120' ) THEN
	  SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '
					  +'    SELECT 0 LEVEL, CAST(9999999 AS INT) AS ORG_ID  FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '
			   	      + '     UNION  ALL  '
					  + '   SELECT  1 LEVEL, CAST(4200120 AS INT)  AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '	
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';		
	 END IF;
	 IF  (TRIM( P_ORGTYPE) =2  AND  TRIM(P_ORGID)='3210201' )  THEN 
	   SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '                   		
				     +'    SELECT 1 LEVEL,4200120 AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '
			   	     + '     UNION  ALL  SELECT  2 LEVEL, 3210201 AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '		
					 + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';		
	END IF;
	 IF  (TRIM(P_ORGTYPE) =3  AND  TRIM(P_ORGID)='999' )  THEN 
	         SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '                    	
					  +'    SELECT 2 LEVEL,CAST(3210201 AS INT) AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '
					  + '     UNION  ALL  SELECT  3 LEVEL,CAST( 999 AS INT) AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '		
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';						  
	END IF;
	IF  (TRIM(P_ORGTYPE) =4  AND  TRIM(P_ORGID)='18168' )   THEN 
	            SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '
                      +'      SELECT 3 LEVEL,CAST(999 AS INT) AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989 '
					  + '       UNION  ALL  SELECT  4 LEVEL, CAST(18168 AS INT) AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE OSTORE_ID=5989  '				
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';					  
	END IF;
ELSE 
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '
                      +'     SELECT '+ORG_FSELECT+' AS ORG_ID FROM PMART.LAST_ORG_STORE S WHERE 1=1 ' + ORGWHERE 
					  +'     UNION '
					  +'     SELECT '+ORG_SELECT+' AS ORG_ID FROM PMART.LAST_ORG_STORE S WHERE 1=1 ' + ORGWHERE 					
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';		
END IF;
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_DIST AS( '
                      +'     SELECT '+DIST_FSELECT+' AS ORG_ID ,'+ORG_FSELECT+ 'AS JORG_ID FROM PMART.LAST_ORG_STORE S WHERE 1=1 ' + DISTWHERE +ORGWHERE
					  +'     UNION '
					  +'     SELECT '+DIST_SELECT+' AS ORG_ID ,'+ORG_FSELECT+ 'AS JORG_ID FROM PMART.LAST_ORG_STORE S WHERE 1=1 ' + DISTWHERE +ORGWHERE
					  + '  ) WITH DATA PRIMARY INDEX(ORG_ID) ON COMMIT PRESERVE ROWS;';			  
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_PRD AS( '
                      +'     SELECT '+PRD_FSELECT+' AS PRD_ID FROM  ( '
					  +'             SELECT DISTINCT  A.FM_CODE AS PRD_ID,  '
     				  +'                                              C.KND+C.GRP AS GRP_ID, '
      				  +'                                              C.KND AS KND_ID '
                      +'             FROM PDATA.PBMCMDT A,   ('
                      +'                                     SELECT K.KIND_CODE AS KND, K.KIND_NAME AS KNDNM, G.GROUP_CODE AS GRP, G.GROUP_NAME AS GRPNM FROM '
            		  +'                                                    (SELECT DISTINCT KIND_CODE,KIND_NAME FROM PDATA.PBMKGRP WHERE GROUP_CODE=''0'')K,  '
            		  +'													 (SELECT DISTINCT KIND_CODE,GROUP_CODE,GROUP_NAME FROM PDATA.PBMKGRP WHERE GROUP_CODE<>TO_CHAR(0) )G  '
            		  +'										WHERE K.KIND_CODE=G.KIND_CODE   ) C '
      				  +'      WHERE A.GROUP_CODE=C.KND+C.GRP  AND A.FM_NAME IS NOT NULL AND C.GRPNM IS NOT NULL AND C.KNDNM IS NOT NULL  GROUP BY PRD_ID,GRP_ID,KND_ID) P ' 
					  +'     INNER JOIN ' + JOINPRDTABLE + '  D ON P.PRD_ID = '+JOINPRDCOLUMN + PRDWHERE 
					  +'     UNION '
					  +'     SELECT '+PRD_SELECT+' AS PRD_ID FROM ('
					  +'             SELECT DISTINCT  A.FM_CODE AS PRD_ID,  '
     				  +'                                              C.KND+C.GRP AS GRP_ID, '
      				  +'                                              C.KND AS KND_ID '
                      +'             FROM PDATA.PBMCMDT A,   ('
                      +'                                     SELECT K.KIND_CODE AS KND, K.KIND_NAME AS KNDNM, G.GROUP_CODE AS GRP, G.GROUP_NAME AS GRPNM FROM '
            		  +'                                                    (SELECT DISTINCT KIND_CODE,KIND_NAME FROM PDATA.PBMKGRP WHERE GROUP_CODE=''0'')K,  '
            		  +'													 (SELECT DISTINCT KIND_CODE,GROUP_CODE,GROUP_NAME FROM PDATA.PBMKGRP WHERE GROUP_CODE<>TO_CHAR(0))G'
            		  +'										WHERE K.KIND_CODE=G.KIND_CODE   ) C '
      				  +'      WHERE A.GROUP_CODE=C.KND+C.GRP  AND A.FM_NAME IS NOT NULL AND C.GRPNM IS NOT NULL AND C.KNDNM IS NOT NULL  GROUP BY PRD_ID,GRP_ID,KND_ID) P ' 
					  +'     INNER JOIN ' + JOINPRDTABLE + ' D ON P.PRD_ID = '+JOINPRDCOLUMN + PRDWHERE 
					  + '  ) WITH DATA PRIMARY INDEX(PRD_ID) ON COMMIT PRESERVE ROWS;';			  
EXECUTE IMMEDIATE SQLSTR;   	
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE SYSDBA.#VT_FACT_PAS_TMP AS( '
						 + ' SELECT B.TIME_ID ,'+Y_DIM+' AS Y_DIM '
						 + ' ,B.PAS_PAYCNT  ,B.PAS_PAYTXCNT ,B.PAS_PAYQTY ,B.PAS_PAYAMT '
						 + ' ,B.PAS_CHGCNT ,B.PAS_CHGTXCNT ,B.PAS_CHGQTY ,B.PAS_CHGAMT '
						 + ' ,B.PAS_SAMESTORE_QTY ,B.PAS_SAMESTORE_AMT ,B.PAS_DIFSTORE_QTY ,B.PAS_DIFSTORE_AMT '
						 + ' FROM '+BASETABLE+' B '
						 + ' JOIN SYSDBA.#VT_ORG O ON B.ORG_ID = O.ORG_ID '+JOINTABLE+TIME_SELECT+SRCWHERE+SELECT_CALCNT + ACTWHERE
						 + ' ) WITH DATA PRIMARY  CHARINDEX(Y_DIM,TIME_ID) ON COMMIT PRESERVE ROWS;';	
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_PAS AS( '
						 + ' SELECT  '
						 + '          CASE WHEN (TIME_ID<>-1 AND Y_DIM<>CAST(-1 AS VARCHAR(2)))  THEN 4  '
						 + '                      WHEN (TIME_ID=-1 AND Y_DIM<>CAST(-1 AS VARCHAR(2)))  THEN 2 '
						 + '   				   WHEN (TIME_ID<>-1 AND Y_DIM=CAST(-1 AS VARCHAR(2)))  THEN 3 '
						 + '			     	   ELSE  1 END  AS DATA_TYPE ,	'
						 + '           TIME_ID ,Y_DIM	'							
						 + ' ,CASE WHEN (TIME_ID=-1 AND Y_DIM<>CAST(-1 AS VARCHAR(2))) OR (TIME_ID=-1 AND Y_DIM=CAST(-1 AS VARCHAR(2)))  THEN CASE WHEN SUM(PAS_PAYCNT)=0 OR SUM(PAS_PAYCNT) IS NULL THEN NULL ELSE SUM(PAS_PAYCNT) END  ELSE  SUM(PAS_PAYCNT) END AS PAS_PAYCNT , '
						 + '  SUM(PAS_PAYTXCNT) AS PAS_PAYTXCNT '
						 + ' ,SUM(PAS_PAYQTY) AS PAS_PAYQTY ,SUM(CAST(PAS_PAYAMT AS BIGINT)) AS PAS_PAYAMT '
						 + ' ,CASE WHEN (TIME_ID=-1 AND Y_DIM<>CAST(-1 AS VARCHAR(2)))  OR (TIME_ID=-1 AND Y_DIM=CAST(-1 AS VARCHAR(2)))  THEN NULL  ELSE SUM(PAS_CHGCNT)  END AS PAS_CHGCNT  '
						 + ' ,SUM(PAS_CHGTXCNT) AS PAS_CHGTXCNT '				
						 + ' , SUM(PAS_CHGQTY)   AS PAS_CHGQTY ,SUM(CAST(PAS_CHGAMT AS DECIMAL(14,0))) AS PAS_CHGAMT '
						 + ' ,SUM(CAST(PAS_SAMESTORE_QTY AS DECIMAL(14,0))) AS PAS_SAMESTORE_QTY ,SUM(CAST(PAS_SAMESTORE_AMT AS DECIMAL(14,0))) AS PAS_SAMESTORE_AMT '
						 + ' ,SUM(CAST(PAS_DIFSTORE_QTY AS DECIMAL(14,0))) AS PAS_DIFSTORE_QTY ,SUM(CAST(PAS_DIFSTORE_AMT AS DECIMAL(14,0))) AS PAS_DIFSTORE_AMT '
						 + ' FROM ('
						 + ' SELECT TIME_ID ,Y_DIM '
						 + ' , CASE WHEN PAS_PAYCNT IS NULL THEN 0 ELSE PAS_PAYCNT END PAS_PAYCNT  ,CASE WHEN  PAS_PAYTXCNT IS NULL THEN 0 ELSE PAS_PAYTXCNT END PAS_PAYTXCNT ,'
						 + '   CASE WHEN PAS_PAYQTY IS NULL THEN 0 ELSE PAS_PAYQTY END PAS_PAYQTY ,CASE WHEN PAS_PAYAMT IS NULL THEN 0 ELSE PAS_PAYAMT  END PAS_PAYAMT  '
						 + ' ,PAS_CHGCNT  PAS_CHGCNT ,PAS_CHGTXCNT ,PAS_CHGQTY ,PAS_CHGAMT '
						 + ' ,PAS_SAMESTORE_QTY ,PAS_SAMESTORE_AMT ,PAS_DIFSTORE_QTY ,PAS_DIFSTORE_AMT '
						 + ' FROM SYSDBA.#VT_FACT_PAS_TMP '
						 + ' UNION ALL '
						 + ' SELECT -1 AS TIME_ID,Y_DIM '
						 + ' ,0 AS PAS_PAYCNT  ,CASE WHEN PAS_PAYTXCNT IS NULL THEN 0 ELSE PAS_PAYTXCNT END PAS_PAYTXCNT , '
						 + '  CASE WHEN PAS_PAYQTY IS NULL THEN 0 ELSE PAS_PAYQTY END PAS_PAYQTY , '
						 + '  CASE WHEN PAS_PAYAMT IS NULL THEN 0 ELSE PAS_PAYAMT END PAS_PAYAMT '
						 + ' ,PAS_CHGCNT ,PAS_CHGTXCNT ,PAS_CHGQTY ,PAS_CHGAMT '
						 + ' ,PAS_SAMESTORE_QTY ,PAS_SAMESTORE_AMT ,PAS_DIFSTORE_QTY ,PAS_DIFSTORE_AMT '
						 + ' FROM SYSDBA.#VT_FACT_PAS_TMP '
						 + ' ) DAT GROUP BY TIME_ID ,Y_DIM '
						 + ' ) WITH DATA PRIMARY  CHARINDEX(Y_DIM,TIME_ID) ON COMMIT PRESERVE ROWS;';	
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_HEADER AS( '
                      +'     SELECT M.TIME_ID ,M.MEMBER_PAYCNT ,M.MEMBER_CHGCNT ' 
	                  +'       FROM PMART.FACT_MEMBER_PAS_CNT M '
					  +'       JOIN (SELECT L_DAY_ID AS L_DAY_ID FROM PMART.TIME_D '+TIMEWHERE_CALCNT
					  +' ) D ON M.TIME_ID = D.L_DAY_ID '
					  + '  ) WITH DATA PRIMARY INDEX(TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
	IF P_RPTID = 2 THEN
	CALL PMART.P_DROP_TABLE ('#VT_DIST_YDIM');
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_DIST_YDIM AS( '
	                      +'     SELECT DISTINCT V.Y_DIM AS SHOPDIST_ID,S.SHOPDIST_NAME AS SHOPDIST_NAME ' 
		                  +'       FROM #VT_FACT_PAS V  '
						  +'       JOIN PMART.VW_SHOPDIST_DIM S ON V.Y_DIM = S.SHOPDIST_ID '
						  + '  ) WITH DATA PRIMARY INDEX(SHOPDIST_ID) ON COMMIT PRESERVE ROWS;';			
	EXECUTE IMMEDIATE SQLSTR;   
	END IF;
END SP;