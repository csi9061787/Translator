REPLACE PROCEDURE PMART.BAK_MEMBER_TRSCNT ()
SQL SECURITY INVOKER
SP:BEGIN
  DECLARE SQLSTR  VARCHAR(4000) DEFAULT '';
  DECLARE P_TIME_ID INTEGER;
  DECLARE STORE_CS CURSOR FOR STORE_SQL;    
  SET SQLSTR =' SELECT DISTINCT  A.TIME_ID               ' +
              '   FROM PTEMP.BAK_TP202_FACT_MEMBER_TRSCNT A  ' +
              '  ' ;   
  PREPARE STORE_SQL FROM SQLSTR;
  OPEN STORE_CS;  
  L1:
  WHILE (SQLCODE =0) 
  DO    
     L1_1:
        BEGIN 
         FETCH STORE_CS INTO P_TIME_ID;
         IF SQLSTATE <> '00000' THEN LEAVE L1; END IF; 	   
         INSERT INTO PTEMP.BAK_TP203_FACT_MEMBER_TRSCNT  
         (TIME_ID
         ,ORG_ID
         ,ACCU_TRSCNT
         ,ACCU_ADDCNT
         ,ACCU_EXGCNT
         )
     SELECT A.TIME_ID,A.ORG_ID,A.TRSCNT,B.ADDCNT,C.EXGCNT
 FROM
 (
		 SELECT 
          P_TIME_ID AS TIME_ID
         ,CAST(COALESCE(B.OSTORE_ID,B.RESPON_ID,B.BRANCH_ID,B.DEPT_ID,COALESCE(B.PDEPT_ID, -1)) AS INTEGER) AS ORG_ID
         ,COUNT(DISTINCT A.MEMBER_ID)      AS TRSCNT
         FROM (
                SELECT 
                 AA.TIME_ID,AA.ORG_ID,AA.TX_SEQ,AA.MEMBER_ID
                FROM (
                      SELECT TIME_ID,ORG_ID,MAX(TX_SEQ) AS TX_SEQ,MEMBER_ID,'1' AS TTYPE FROM (
						SELECT TIME_ID,ORG_ID,TX_SEQ,MEMBER_ID,
						CASE WHEN SALE_TYPE = 'Z0' THEN 1 ELSE -1 END AS TRANSCNT
						FROM PTEMP.BAK_TP115_FACT_MEMBER_TRANS 
						WHERE SUBSTRING(MEMBER_ID,1,1) = '1' 
						) A GROUP BY TIME_ID,ORG_ID,MEMBER_ID HAVING SUM(TRANSCNT) >0
                     ) AA  
              ) A INNER JOIN (SELECT OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                                FROM PMART.LATEST_ORG_DIM 
                               GROUP BY OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                             ) B
            ON A.ORG_ID = B.OSTORE_ID  
         WHERE A.TIME_ID >= P_TIME_ID/100*100+1
           AND A.TIME_ID <= P_TIME_ID
         GROUP BY ROLLUP(B.PDEPT_ID,B.DEPT_ID,B.BRANCH_ID, B.RESPON_ID,B.OSTORE_ID)
)A
INNER JOIN 
(
		 SELECT 
          P_TIME_ID AS TIME_ID
         ,CAST(COALESCE(B.OSTORE_ID,B.RESPON_ID,B.BRANCH_ID,B.DEPT_ID,COALESCE(B.PDEPT_ID, -1)) AS INTEGER) AS ORG_ID
		  ,COUNT(DISTINCT A.ADD_MEMBER_ID)  AS ADDCNT
         FROM (
                SELECT 
                 AA.TIME_ID,AA.ORG_ID,AA.TX_SEQ
                ,CASE WHEN AA.TTYPE ='2' THEN  AA.MEMBER_ID ELSE NULL END AS ADD_MEMBER_ID
                FROM (
                      SELECT TIME_ID,ORG_ID,TX_SEQ,MEMBER_ID,'2' AS TTYPE FROM PTEMP.BAK_TP113_FACT_MEMBER_TRANS_ADD WHERE DWH_FG_ADD <> 0
                             ) AA  
              ) A INNER JOIN (SELECT OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                                FROM PMART.LATEST_ORG_DIM 
                               GROUP BY OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                             ) B
            ON A.ORG_ID = B.OSTORE_ID  
         WHERE A.TIME_ID >= P_TIME_ID/100*100+1
           AND A.TIME_ID <= P_TIME_ID
         GROUP BY ROLLUP(B.PDEPT_ID,B.DEPT_ID,B.BRANCH_ID, B.RESPON_ID,B.OSTORE_ID)
)B
ON A.TIME_ID = B.TIME_ID AND A.ORG_ID = B.ORG_ID 
INNER JOIN 
(
		 SELECT 
          P_TIME_ID AS TIME_ID
         ,CAST(COALESCE(B.OSTORE_ID,B.RESPON_ID,B.BRANCH_ID,B.DEPT_ID,COALESCE(B.PDEPT_ID, -1)) AS INTEGER) AS ORG_ID
         ,COUNT(DISTINCT A.EXG_MEMBER_ID)  AS EXGCNT   
         FROM (
                SELECT 
                 AA.TIME_ID,AA.ORG_ID,AA.TX_SEQ
                ,CASE WHEN AA.TTYPE ='3' THEN  AA.MEMBER_ID ELSE NULL END AS EXG_MEMBER_ID
                FROM (
                      SELECT TIME_ID,ORG_ID,TX_SEQ,MEMBER_ID,'3' AS TTYPE FROM PTEMP.BAK_TP114_FACT_MEMBER_TRANS_EXG WHERE DWH_FG_EXG <> 0
                     ) AA  
              ) A INNER JOIN (SELECT OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                                FROM PMART.LATEST_ORG_DIM 
                               GROUP BY OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID 
                             ) B
            ON A.ORG_ID = B.OSTORE_ID  
         WHERE A.TIME_ID >= P_TIME_ID/100*100+1
           AND A.TIME_ID <= P_TIME_ID
         GROUP BY ROLLUP(B.PDEPT_ID,B.DEPT_ID,B.BRANCH_ID, B.RESPON_ID,B.OSTORE_ID)
)C
ON A.TIME_ID = C.TIME_ID AND A.ORG_ID = C.ORG_ID 
         ;
     END L1_1;
  END WHILE L1;      
  CLOSE STORE_CS;
END SP;