REPLACE PROCEDURE PMART.REMD_IMM_HR
(
	P_INST_DATE VARCHAR(8),P_AUTH_LEVEL NUMBER,
 	P_DEPT_NO1 VARCHAR(10),P_DEPT_NO2 VARCHAR(10),
 	P_DEPT_NO3 VARCHAR(10),P_EMP_NO VARCHAR(10)
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE V_STNUM NUMBER;
	DECLARE V_SQL VARCHAR(4000) DEFAULT '';
	DECLARE V_INST_DATE VARCHAR(8);
	DECLARE V_YESTERDAY VARCHAR(8);
	DECLARE V_LW_DATE VARCHAR(8);
	DECLARE V_COND VARCHAR(1000);
	SET V_INST_DATE = P_INST_DATE;
	SELECT SUM(PLAN_STNUM) INTO V_STNUM FROM PMART.TSC_REMD_FACT_ALL WHERE L_DAY_ID= P_INST_DATE;
	IF V_STNUM = 0 OR V_STNUM IS NULL THEN
		SET V_INST_DATE = TO_CHAR(TO_DATE(P_INST_DATE, 'YYYYMMDD') - 1,'YYYYMMDD');
	END IF;
	SET V_YESTERDAY = TO_CHAR(TO_DATE(V_INST_DATE, 'YYYYMMDD') - 1,'YYYYMMDD');
	SELECT TO_CHAR(L_DAY_LAST_WEEK,'FM00000000') INTO V_LW_DATE 
	FROM PMART.YMWD_TIME WHERE L_DAY_ID=V_INST_DATE;
	SET V_COND = (
		CASE P_AUTH_LEVEL 
			WHEN -1 THEN ''
			WHEN 0 THEN ' AND O.PDEPT_NO=''' + P_DEPT_NO1 + ''''
			WHEN 1 THEN ' AND O.DEPT_NO=''' + P_DEPT_NO2 + ''''
			WHEN 2 THEN ' AND O.BRANCH_NO=''' + P_DEPT_NO3 + ''''
			WHEN 3 THEN ' AND O.RESPON_NO=''' + P_EMP_NO + ''''
		END);
	CALL PMART.P_DROP_TABLE ('#VT_REMD_IMM_HR');
	CALL PMART.P_DROP_TABLE ('#VT_REMD_IMM_HR_TMP');
	SET V_SQL =
		'CREATE MULTISET VOLATILE TABLE #VT_REMD_IMM_HR_TMP AS (
			SELECT MAX(L_DAY_ID_HR) L_DAY_ID_HR,
				SUM(CAST(AMT AS BIGINT)) AS AMT, SUM(PLAN_STNUM) PLAN_STNUM,
				SUM(CAST(LW_AMT AS BIGINT)) AS LW_AMT, SUM(LW_PLAN_STNUM) AS LW_PLAN_STNUM,
				SUM(CAST(LD_AMT AS BIGINT)) AS LD_AMT, SUM(LD_PLAN_STNUM) AS LD_PLAN_STNUM
			FROM PMART.TSC_REMD_FACT_ALL R
				INNER JOIN PMART.LAST_ORG_DIM O ON O.OSTORE_ID=R.OSTORE_ID
			WHERE L_DAY_ID=' + V_INST_DATE + V_COND +
			') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS';
	EXECUTE IMMEDIATE V_SQL; 		
	SET V_SQL =
		'UPDATE #VT_REMD_IMM_HR_TMP
		SET LD_PLAN_STNUM = (
			SELECT COUNT(DISTINCT R.OSTORE_ID)
			FROM PMART.TSC_REMD_FACT_IMM R
				INNER JOIN PMART.LAST_ORG_DIM O ON O.OSTORE_ID=R.OSTORE_ID
			WHERE L_DAY_ID=CAST(TO_CHAR(CURRENT_DATE -1 ,''YYYYMMDD'') AS INTEGER )' + V_COND +') 
		WHERE CAST(TO_CHAR(CURRENT_TIMESTAMP(0) ,''HH24'') AS INTEGER )<=8';
	EXECUTE IMMEDIATE V_SQL; 			
	SET V_SQL =
		'CREATE MULTISET VOLATILE TABLE #VT_REMD_IMM_HR AS (
		SELECT 1 AS DATA_FLAG, L_DAY_ID_HR, 
			CASE WHEN PLAN_STNUM = 0 THEN 0 ELSE AMT/ PLAN_STNUM END AS DAYAMT
		FROM #VT_REMD_IMM_HR_TMP
		WHERE L_DAY_ID_HR IS NOT NULL
		UNION ALL
		SELECT 2 AS DATA_FLAG, CAST(''' + V_YESTERDAY + ''' + TO_CHAR(L_DAY_ID_HR, ''HH24MI'') AS TIMESTAMP(0) FORMAT ''Y4MMDDHHMI'') AS L_DAY_ID_HR, 
			CASE WHEN LD_PLAN_STNUM = 0 THEN 0 ELSE LD_AMT / LD_PLAN_STNUM END AS DAYAMT
		FROM #VT_REMD_IMM_HR_TMP
		WHERE L_DAY_ID_HR IS NOT NULL
		UNION ALL
		SELECT 3 AS DATA_FLAG, CAST(''' + V_LW_DATE + ''' + TO_CHAR(L_DAY_ID_HR, ''HH24MI'') AS TIMESTAMP(0) FORMAT ''Y4MMDDHHMI'') AS L_DAY_ID_HR, 
			CASE WHEN LW_PLAN_STNUM=0 THEN 0 ELSE LW_AMT/ LW_PLAN_STNUM END AS DAYAMT
		FROM #VT_REMD_IMM_HR_TMP
		WHERE L_DAY_ID_HR IS NOT NULL
		) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS';
	EXECUTE IMMEDIATE V_SQL; 		
END SP;