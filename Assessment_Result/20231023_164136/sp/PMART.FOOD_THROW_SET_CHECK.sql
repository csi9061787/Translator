REPLACE PROCEDURE PMART.FOOD_THROW_SET_CHECK
(
	OUT DATA_CNT INTEGER,
	OUT ERR_CNT INTEGER
)
SQL SECURITY INVOKER
SP:BEGIN
	CALL PMART.P_DROP_TABLE ('#TMP_FOOD_THROW_SET_CHECK');
	CREATE MULTISET VOLATILE TABLE #TMP_FOOD_THROW_SET_CHECK AS 
	(
	SELECT DISTINCT TYPE_NAME, KND_NO, '品番代號不存在於主檔' AS ERR_MSG 
	FROM PDATA.FOOD_THROW_SET_IF
	WHERE KND_NO NOT IN (SELECT DISTINCT KND_NO FROM PMART.PRD_DIM)
	)
	WITH  DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;
	UPDATE PDATA.FOOD_THROW_SET_IF
	FROM  #TMP_FOOD_THROW_SET_CHECK B
	SET ERR_MSG = NVL(FOOD_THROW_SET_IF.ERR_MSG,'')+','+ B.ERR_MSG
	WHERE FOOD_THROW_SET_IF.TYPE_NAME = B.TYPE_NAME
	AND FOOD_THROW_SET_IF.KND_NO = B.KND_NO
	;
	CALL PMART.P_DROP_TABLE ('#TMP_FOOD_THROW_SET_CHECK');
	CREATE MULTISET VOLATILE TABLE #TMP_FOOD_THROW_SET_CHECK AS 
	(
	SELECT DISTINCT TYPE_NAME, KND_NO, '品番代號重複設定' AS ERR_MSG 
	FROM PDATA.FOOD_THROW_SET_IF A
	WHERE EXISTS (SELECT KND_NO, COUNT(1) FROM PDATA.FOOD_THROW_SET_IF B WHERE A.KND_NO = B.KND_NO GROUP BY KND_NO HAVING COUNT(1) > 1)
	)
	WITH  DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;
	UPDATE PDATA.FOOD_THROW_SET_IF
	FROM  #TMP_FOOD_THROW_SET_CHECK B
	SET ERR_MSG = NVL(FOOD_THROW_SET_IF.ERR_MSG,'')+','+ B.ERR_MSG
	WHERE FOOD_THROW_SET_IF.TYPE_NAME = B.TYPE_NAME
	AND FOOD_THROW_SET_IF.KND_NO = B.KND_NO
	;
	CALL PMART.P_DROP_TABLE ('#TMP_FOOD_THROW_SET_CHECK');
	UPDATE PDATA.FOOD_THROW_SET_IF
	SET ERR_MSG = NVL(ERR_MSG,'')+','+ '分類未設定'
	WHERE TYPE_NAME IS NULL OR TRIM(TYPE_NAME) = ''
	;
	UPDATE PDATA.FOOD_THROW_SET_IF
	SET ERR_MSG = NVL(ERR_MSG,'')+','+ '品番代號未設定'
	WHERE KND_NO IS NULL OR TRIM(KND_NO) = ''
	;
	SET DATA_CNT = (SELECT COUNT(*) FROM PDATA.FOOD_THROW_SET_IF );
	SET ERR_CNT = (SELECT COUNT(*) FROM PDATA.FOOD_THROW_SET_IF  WHERE ERR_MSG IS NOT NULL);
END SP;