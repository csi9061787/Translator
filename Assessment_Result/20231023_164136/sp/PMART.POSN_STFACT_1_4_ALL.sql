REPLACE PROCEDURE PMART.POSN_STFACT_1_4_ALL(
FP_TIME_TYPE CHAR,         
FP_TIME_LIST VARCHAR(400), 
FP_MMA_LEVEL NUMBER,       
FP_MMA_ID    VARCHAR(400), 
FP_PRD_LIST  VARCHAR(400)  
)
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE V_MMA       VARCHAR(400); 
   DECLARE V_MMA_WHERE VARCHAR(400); 
   DECLARE SQLSTR      VARCHAR(4000);
   CALL PMART.P_DROP_TABLE ('#VT_POSN_STFACT_1_4_ALL');
  IF FP_MMA_LEVEL = 1 THEN 
     SET V_MMA = 'MMA_ID';
     SET V_MMA_WHERE = 'GROUP BY MMA_ID';
  END IF;
  IF FP_MMA_LEVEL = 2 THEN
     SET V_MMA = 'SUB_MMA_ID';
     SET V_MMA_WHERE = 'AND MMA_ID = '+ FP_MMA_ID +' GROUP BY SUB_MMA_ID';
  END IF;
  IF FP_MMA_LEVEL = 0 THEN 
   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSN_STFACT_1_4_ALL  AS('+
      'SELECT '+
      'B.TIME_ID AS TIME_ID,    '+
      '0 AS ORG_ID,    '+
      '0 AS PRD_ID,   '+
      '0 AS MMA_ID, '+
      '0 AS MAST_STORE_NUM,   '+  
      '0 AS STNUM_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.RETPRD_STORE_NUM,Y.MASK)) AS RETPRD_STORE_NUM,  '+ 
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_STORE_NUM,Y.MASK)) AS TRANSPRD_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_IN_STORE_NUM,Y.MASK)) AS TRANSPRD_IN_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+  
      'BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.RETPRD_STORE_NUM,Y.MASK)) AS RETPRD_STNUM,  '+ 
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_STORE_NUM,Y.MASK)) AS TRANSPRD_STNUM,  '+ 
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_IN_STORE_NUM,Y.MASK)) AS TRANSPRD_IN_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STNUM  '+ 
      ' FROM'+
      '( '+
      'SELECT '+
      'B.TIME_ID AS TIME_ID,  '+
      'B.PRD_ID AS PRD_ID,  '+
      'B.SALES_STORE_NUM AS SALES_STORE_NUM,  '+
      'B.ORDER_STORE_NUM AS ORDER_STORE_NUM,  '+
      'B.THROW_STORE_NUM AS THROW_STORE_NUM,  '+
      'B.INPRD_STORE_NUM AS INPRD_STORE_NUM,  '+
      'B.RETPRD_STORE_NUM AS RETPRD_STORE_NUM,  '+
      'B.TRANSPRD_STORE_NUM AS TRANSPRD_STORE_NUM,  '+
      'B.TRANSPRD_IN_STORE_NUM AS TRANSPRD_IN_STORE_NUM,  '+
      'B.Y_ORDER_STORE_NUM AS Y_ORDER_STORE_NUM,   '+
      'BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM) AS SALES_STNUM,  '+
      'BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM) AS ORDER_STNUM,  '+
      'BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM) AS THROW_STNUM,  '+
      'BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM) AS INPRD_STNUM,  '+
      'BIT_AND(B.RETPRD_STORE_NUM,A.STNUM_STORE_NUM) AS RETPRD_STNUM,  '+
      'BIT_AND(B.TRANSPRD_STORE_NUM,A.STNUM_STORE_NUM) AS TRANSPRD_STNUM,  '+
      'BIT_AND(B.TRANSPRD_IN_STORE_NUM,A.STNUM_STORE_NUM) AS TRANSPRD_IN_STNUM,  '+
      'BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM) AS Y_ORDER_STNUM  '+
      ' FROM PMART.BASIC_STFACT B , PMART.BASIC_MAST_FACT A  '+
      ' WHERE A.TIME_ID = B.TIME_ID '+
      ' AND B.TIME_ID IN ('+ FP_TIME_LIST +') '+
      ' AND B.PRD_ID IN ('+ FP_PRD_LIST +') '+
      ') B, PMART.LAST_ORG_DIM_MASK Y WHERE Y.ORG_ID = -1 '+
      ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';    
  ELSE
   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSN_STFACT_1_4_ALL  AS('+
      'SELECT '+
      'B.TIME_ID AS TIME_ID,    '+
      '0 AS ORG_ID,    '+
      '0 AS PRD_ID,   '+
      'Y.MMA_ID AS MMA_ID, '+
      '0 AS MAST_STORE_NUM,   '+  
      '0 AS STNUM_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.RETPRD_STORE_NUM,Y.MASK)) AS RETPRD_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_STORE_NUM,Y.MASK)) AS TRANSPRD_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_IN_STORE_NUM,Y.MASK)) AS TRANSPRD_IN_STORE_NUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+ 
      'BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.RETPRD_STORE_NUM,Y.MASK)) AS RETPRD_STNUM,  '+
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_STORE_NUM,Y.MASK)) AS TRANSPRD_STNUM,  '+ 
      'BIT_EXTRACT(BIT_AND(B.TRANSPRD_IN_STORE_NUM,Y.MASK)) AS TRANSPRD_IN_STNUM,  '+  
      'BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STNUM  '+  
      ' FROM'+
      '( '+
      'SELECT '+
      'B.TIME_ID AS TIME_ID,  '+
      'B.PRD_ID AS PRD_ID,  '+
      'B.SALES_STORE_NUM AS SALES_STORE_NUM,  '+
      'B.ORDER_STORE_NUM AS ORDER_STORE_NUM,  '+
      'B.THROW_STORE_NUM AS THROW_STORE_NUM,  '+
      'B.INPRD_STORE_NUM AS INPRD_STORE_NUM,  '+
      'B.RETPRD_STORE_NUM AS RETPRD_STORE_NUM,  '+
      'B.TRANSPRD_STORE_NUM AS TRANSPRD_STORE_NUM,  '+
      'B.TRANSPRD_IN_STORE_NUM AS TRANSPRD_IN_STORE_NUM,  '+
      'B.Y_ORDER_STORE_NUM AS Y_ORDER_STORE_NUM,   '+
      'BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM) AS SALES_STNUM,  '+
      'BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM) AS ORDER_STNUM,  '+
      'BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM) AS THROW_STNUM,  '+
      'BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM) AS INPRD_STNUM,  '+
      'BIT_AND(B.RETPRD_STORE_NUM,A.STNUM_STORE_NUM) AS RETPRD_STNUM,  '+
      'BIT_AND(B.TRANSPRD_STORE_NUM,A.STNUM_STORE_NUM) AS TRANSPRD_STNUM,  '+
      'BIT_AND(B.TRANSPRD_IN_STORE_NUM,A.STNUM_STORE_NUM) AS TRANSPRD_IN_STNUM,  '+
      'BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM) AS Y_ORDER_STNUM  '+
      ' FROM PMART.BASIC_STFACT B , PMART.BASIC_MAST_FACT A  '+
      ' WHERE A.TIME_ID = B.TIME_ID '+
      ' AND B.TIME_ID IN ('+ FP_TIME_LIST +') '+
      ' AND B.PRD_ID IN ('+ FP_PRD_LIST +') '+
      ') B, '+
      ' ( SELECT '+V_MMA+' AS MMA_ID,BIT_GEN_AGGT(T2.OSTORE_BIT_SEQ) AS MASK FROM PMART.POSN_1_4V_MMA T1, PMART.ORG_BIT_MAPPING T2 '+
      ' WHERE T1.ORG_ID = T2.OSTORE_ID '+V_MMA_WHERE+' '+
      ' ) Y '+
      ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';    
  END IF;
  EXECUTE IMMEDIATE SQLSTR;
END SP;