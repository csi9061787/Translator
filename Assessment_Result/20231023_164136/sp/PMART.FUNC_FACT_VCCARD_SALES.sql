REPLACE PROCEDURE PMART.FUNC_FACT_VCCARD_SALES
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(1000),
   IN P_TIMETYPE VARCHAR(1),   
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(20),
   IN P_PRDTYPE SMALLINT,
   IN P_PRDID VARCHAR(20),
   IN P_AUTH_LEVEL SMALLINT,
   IN P_AUTH_LEVEL_ID VARCHAR(20)
)
SP:BEGIN
   DECLARE SQLSTR  VARCHAR(20000);
   DECLARE ORGWHERE VARCHAR(2000);
   DECLARE PRDWHERE VARCHAR(2000);
   DECLARE SELECTWHERE VARCHAR(500);
   DECLARE SELECT_CALCNT VARCHAR(200);
   DECLARE FSELECT_CALCNT VARCHAR(200); 
   DECLARE JOINCOLUMN VARCHAR(200);
   DECLARE TIME_CALCNT VARCHAR(500);  	 	 
   DECLARE TIMEWHERE_CALCNT VARCHAR(500);
   DECLARE BASETABLE VARCHAR(200);
   DECLARE BASETABLEJOINTIME VARCHAR(200);
   DECLARE BASETABLEJOINPRD VARCHAR(200);
   DECLARE SELECT_PRD VARCHAR(50);
	 SET ORGWHERE = ' WHERE 1=1 ';
	 SET PRDWHERE = ' WHERE 1=1 ';
	 SET SELECTWHERE = ' ';
      IF P_RPTID = 1  THEN
		  IF P_ORGTYPE = 0 THEN
		      SET ORGWHERE = ' WHERE PDEPT_ID  = ' + TRIM(P_ORGID);
			  SET SELECT_CALCNT = ' T.DEPT_ID ';	  
			  SET FSELECT_CALCNT = ' T.PDEPT_ID ';	  
		  ELSEIF P_ORGTYPE = 1 THEN
		      SET ORGWHERE = ' WHERE DEPT_ID  = ' + TRIM(P_ORGID);
			  SET SELECT_CALCNT = ' T.BRANCH_ID ';	  
			  SET FSELECT_CALCNT = ' T.DEPT_ID ';	  
		  ELSEIF P_ORGTYPE = 2 THEN
		      SET ORGWHERE = ' WHERE BRANCH_ID  = ' + TRIM(P_ORGID);
			  SET SELECT_CALCNT = ' T.RESPON_ID ';
			  SET FSELECT_CALCNT = ' T.BRANCH_ID ';
		  ELSEIF P_ORGTYPE = 3 THEN
		      SET ORGWHERE = ' WHERE RESPON_ID  = ' + TRIM(P_ORGID);
			  SET SELECT_CALCNT = ' T.OSTORE_ID ';
			  SET FSELECT_CALCNT = ' T.RESPON_ID ';
		  ELSEIF P_ORGTYPE = 4 THEN
		      SET ORGWHERE = ' WHERE OSTORE_ID  = ' + TRIM(P_ORGID);
			  SET SELECT_CALCNT = ' T.OSTORE_ID ';
			  SET FSELECT_CALCNT = ' T.OSTORE_ID ';
		  ELSE
			  SET SELECT_CALCNT = ' T.PDEPT_ID ';
			  SET FSELECT_CALCNT = ' CAST(-1 AS INTEGER) ';	
		  END IF;  
		  IF P_PRDTYPE <> -1 THEN
			  SET SELECTWHERE = ' AND B.PRD_ID = '''  + P_PRDID + ''' ';
		  ELSE
			  SET SELECTWHERE = ' AND B.PRD_ID = -1 ';
		  END IF;
	  ELSE
		  IF P_PRDTYPE = 1 THEN
			  SET PRDWHERE = ' WHERE KND_ID = '''  + P_PRDID + ''' ';
			  SET SELECT_CALCNT = ' T.GRP_ID ';	  
			  SET FSELECT_CALCNT = ' T.KND_ID ';
			  SET SELECT_PRD = ' GRP_ID,KND_ID ';
			  SET BASETABLEJOINPRD = ' P.GRP_ID = B.PRD_ID ';
		  ELSEIF P_PRDTYPE = 2 THEN
			  SET PRDWHERE = ' WHERE GRP_ID = '''  + P_PRDID + ''' ';
			  SET SELECT_CALCNT = ' T.PRD_ID ';	  
			  SET FSELECT_CALCNT = ' T.GRP_ID ';
			  SET SELECT_PRD = ' PRD_ID,GRP_ID ';
			  SET BASETABLEJOINPRD = ' P.PRD_ID = B.PRD_ID ';
		  ELSEIF P_PRDTYPE = 3 THEN
			  SET PRDWHERE = ' WHERE PRD_ID = '''  + P_PRDID + ''' ';
			  SET SELECT_CALCNT = ' T.PRD_ID ';	  
			  SET FSELECT_CALCNT = ' T.PRD_ID ';
			  SET SELECT_PRD = ' PRD_ID ';
			  SET BASETABLEJOINPRD = ' P.PRD_ID = B.PRD_ID ';
		  ELSE
		      SET SELECT_CALCNT = ' T.KND_ID ';	  
			  SET FSELECT_CALCNT = ' CAST(-1 AS INTEGER) ';
			  SET SELECT_PRD = ' KND_ID ';
			  SET BASETABLEJOINPRD = ' P.KND_ID = B.PRD_ID ';
			  IF P_AUTH_LEVEL = 6 OR P_AUTH_LEVEL = 7 THEN
				  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE DEPT_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
			  ELSEIF P_AUTH_LEVEL = 8 THEN
				  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE BRANCH_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
			  ELSEIF P_AUTH_LEVEL = 9 THEN
				  SET PRDWHERE = ' WHERE KND_ID IN (SELECT DISTINCT KND_ID FROM PMART.ORG_DIM_POSI1 WHERE RESPON_NO = ''' + P_AUTH_LEVEL_ID + ''' ) ';
			  END IF;
		  END IF;
		  IF P_ORGTYPE = 0 THEN
			  SET SELECTWHERE = ' AND O.PDEPT_ID = '''  + P_ORGID + ''' ';
		  ELSEIF P_ORGTYPE = 1 THEN
			  SET SELECTWHERE = ' AND O.DEPT_ID = '''  + P_ORGID + ''' ';
		  ELSEIF P_ORGTYPE = 2 THEN
			  SET SELECTWHERE = ' AND O.BRANCH_ID = '''  + P_ORGID + ''' ';
		  ELSEIF P_ORGTYPE = 3 THEN
			  SET SELECTWHERE = ' AND O.RESPON_ID = '''  + P_ORGID + ''' ';
		  ELSEIF P_ORGTYPE = 4 THEN
			  SET SELECTWHERE = ' AND O.OSTORE_ID = '''  + P_ORGID + ''' ';
		  ELSE
			  SET SELECTWHERE = SELECTWHERE;
		  END IF;
	  END IF;
	  IF P_TIMETYPE = 'M' THEN
	    SET TIMEWHERE_CALCNT = '  AND D.L_MONTH_ID IN ('+P_TIMEID+')';
		SET TIME_CALCNT = '  L_MONTH_ID ';
	  ELSEIF P_TIMETYPE = 'W' THEN
	     SET TIMEWHERE_CALCNT = '  AND D.L_WEEK_ID IN ('+P_TIMEID+')';
		 SET TIME_CALCNT = '  L_WEEK_ID ';		
	  ELSEIF P_TIMETYPE = 'D' THEN
	     SET TIMEWHERE_CALCNT = '  AND D.L_DAY_ID IN ('+P_TIMEID+')';
		 SET TIME_CALCNT = '  L_DAY_ID ';	
	  END IF;
	  IF P_PRDTYPE = 3 OR P_PRDTYPE = 2 THEN
		  SET BASETABLE = ' PMART.FACT_VCCARD_SALES ';
		  SET BASETABLEJOINTIME = ' INNER JOIN SYSDBA.#VT_FACT_VCCARD_SALES_TXDAY D ON D.L_DAY_ID = B.TIME_ID ';
	  ELSE
		  SET BASETABLE = ' PMART.FACT_VCCARD_SALES ';
		  SET BASETABLEJOINTIME = ' ';
	  END IF;
	  CALL PMART.P_DROP_TABLE ('#VT_BASE_VCCARD_ORG');
	  CALL PMART.P_DROP_TABLE ('#VT_BASE_VCCARD_PRD');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_VCCARD_SALES_TEMP');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_VCCARD_SALES');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_VCCARD_SALES_TXDAY');
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_VCCARD_SALES_TXDAY AS( '
                      +'     SELECT D.'+TIME_CALCNT+'  AS TIME_ID, L_DAY_ID FROM PMART.TIME_D D ' 
	                  +'       WHERE 1=1  ' + TIMEWHERE_CALCNT 
					  + '  ) WITH DATA PRIMARY  CHARINDEX( L_DAY_ID,TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_VCCARD_ORG AS( '
						 + ' SELECT OSTORE_ID,RESPON_ID,BRANCH_ID,DEPT_ID,PDEPT_ID '
						 + ' FROM PMART.LAST_ORG_STORE ' +ORGWHERE 
						 + ' ) WITH DATA PRIMARY INDEX(OSTORE_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_BASE_VCCARD_PRD AS( '
						 + ' SELECT DISTINCT ' +SELECT_PRD
						 + ' FROM PMART.PRD_DIM ' +PRDWHERE 
						 + ' ) WITH DATA PRIMARY INDEX('+SELECT_PRD+') ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
IF P_RPTID = 1  THEN
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_VCCARD_SALES_TEMP AS( '
						 + ' SELECT  CASE WHEN B.TIME_ID IS NOT NULL THEN B.TIME_ID ELSE 0 END AS TIME_ID '
						 + '                ,O.* '
						 + '                ,CASE WHEN B.STORE_QTY IS NOT NULL THEN B.STORE_QTY ELSE 0 END AS STORE_QTY '
						 + '                ,CASE WHEN B.DEAL_QTY IS NOT NULL THEN B.DEAL_QTY ELSE 0 END AS DEAL_QTY '
						 + '                ,CASE WHEN B.VC_S_QTY IS NOT NULL THEN B.VC_S_QTY ELSE 0 END AS VC_S_QTY '
						 + '                ,CASE WHEN B.VC_S_AMT IS NOT NULL THEN B.VC_S_AMT ELSE 0 END AS VC_S_AMT '
						 + '                ,CASE WHEN B.VC_RS_AMT IS NOT NULL THEN B.VC_RS_AMT ELSE 0 END AS VC_RS_AMT '
						 + '                ,CASE WHEN B.VC_TS_QTY IS NOT NULL THEN B.VC_TS_QTY ELSE 0 END AS VC_TS_QTY '
						 + '                ,CASE WHEN B.VC_TRS_AMT IS NOT NULL THEN B.VC_TRS_AMT ELSE 0 END AS VC_TRS_AMT '
						 + '	    FROM ' + BASETABLE + ' B ' + BASETABLEJOINTIME
						 + ' 	    JOIN SYSDBA.#VT_BASE_VCCARD_ORG O ON O.OSTORE_ID = B.ORG_ID '
						 + ' 	    WHERE B.TIME_ID IN ('+P_TIMEID+')' +SELECTWHERE 
						 + ' ) WITH DATA PRIMARY  CHARINDEX(OSTORE_ID,TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
ELSE
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_VCCARD_SALES_TEMP AS( '
						 + ' SELECT  CASE WHEN B.TIME_ID IS NOT NULL THEN B.TIME_ID ELSE 0 END AS TIME_ID '
						 + '                ,P.* ,O.* '
						 + '                ,CASE WHEN B.STORE_QTY IS NOT NULL THEN B.STORE_QTY ELSE 0 END AS STORE_QTY '
						 + '                ,CASE WHEN B.DEAL_QTY IS NOT NULL THEN B.DEAL_QTY ELSE 0 END AS DEAL_QTY '
						 + '                ,CASE WHEN B.VC_S_QTY IS NOT NULL THEN B.VC_S_QTY ELSE 0 END AS VC_S_QTY '
						 + '                ,CASE WHEN B.VC_S_AMT IS NOT NULL THEN B.VC_S_AMT ELSE 0 END AS VC_S_AMT '
						 + '                ,CASE WHEN B.VC_RS_AMT IS NOT NULL THEN B.VC_RS_AMT ELSE 0 END AS VC_RS_AMT '
						 + '                ,CASE WHEN B.VC_TS_QTY IS NOT NULL THEN B.VC_TS_QTY ELSE 0 END AS VC_TS_QTY '
						 + '                ,CASE WHEN B.VC_TRS_AMT IS NOT NULL THEN B.VC_TRS_AMT ELSE 0 END AS VC_TRS_AMT '
						 + '	    FROM ' + BASETABLE + ' B ' + BASETABLEJOINTIME
						 + ' 	    INNER JOIN SYSDBA.#VT_BASE_VCCARD_ORG O ON O.OSTORE_ID = B.ORG_ID '
						 + ' 	    JOIN SYSDBA.#VT_BASE_VCCARD_PRD P ON ' +BASETABLEJOINPRD +SELECTWHERE 
						 + ' 	    AND B.TIME_ID IN ('+P_TIMEID+')'
						 + ' ) WITH DATA PRIMARY INDEX(TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
END IF;
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_VCCARD_SALES AS( '
						 + ' SELECT  1 AS DATA_TYPE'
						 + '                ,CAST(-1 AS INTEGER)  AS TIME_ID '
						 + '                ,' + FSELECT_CALCNT + ' AS Y_DIM '
						 + '                ,SUM(T.STORE_QTY) AS STORE_QTY '
						 + '                ,SUM(T.DEAL_QTY) AS DEAL_QTY '
						 + '                ,SUM(T.VC_S_QTY) AS VC_S_QTY '
						 + '                ,SUM(T.VC_S_AMT) AS VC_S_AMT '
						 + '                ,SUM(T.VC_RS_AMT) AS VC_RS_AMT '
						 + '                ,SUM(T.VC_TS_QTY) AS VC_TS_QTY '
						 + '                ,SUM(T.VC_TRS_AMT) AS VC_TRS_AMT '
						 + '	    FROM SYSDBA.#VT_FACT_VCCARD_SALES_TEMP T '
						 + ' 	    GROUP BY ' + FSELECT_CALCNT
						 + ' UNION ALL '
						 + ' SELECT  2 AS DATA_TYPE'
						 + '                ,T.TIME_ID  AS TIME_ID '
						 + '                ,' + FSELECT_CALCNT + ' AS Y_DIM '
						 + '                ,SUM(T.STORE_QTY) AS STORE_QTY '
						 + '                ,SUM(T.DEAL_QTY) AS DEAL_QTY '
						 + '                ,SUM(T.VC_S_QTY) AS VC_S_QTY '
						 + '                ,SUM(T.VC_S_AMT) AS VC_S_AMT '
						 + '                ,SUM(T.VC_RS_AMT) AS VC_RS_AMT '
						 + '                ,SUM(T.VC_TS_QTY) AS VC_TS_QTY '
						 + '                ,SUM(T.VC_TRS_AMT) AS VC_TRS_AMT '
						 + '	    FROM SYSDBA.#VT_FACT_VCCARD_SALES_TEMP T '
						 + ' 	    GROUP BY T.TIME_ID,' + FSELECT_CALCNT
						 + ' UNION ALL '
						 + ' SELECT  3 AS DATA_TYPE'
						 + '                ,CAST(-1 AS INTEGER)  AS TIME_ID '
						 + '                ,' + SELECT_CALCNT + ' AS Y_DIM '
						 + '                ,SUM(T.STORE_QTY) AS STORE_QTY '
						 + '                ,SUM(T.DEAL_QTY) AS DEAL_QTY '
						 + '                ,SUM(T.VC_S_QTY) AS VC_S_QTY '
						 + '                ,SUM(T.VC_S_AMT) AS VC_S_AMT '
						 + '                ,SUM(T.VC_RS_AMT) AS VC_RS_AMT '
						 + '                ,SUM(T.VC_TS_QTY) AS VC_TS_QTY '
						 + '                ,SUM(T.VC_TRS_AMT) AS VC_TRS_AMT '
						 + '	    FROM SYSDBA.#VT_FACT_VCCARD_SALES_TEMP T '
						 + ' 	    GROUP BY ' + SELECT_CALCNT
						 + ' UNION ALL '
						 + ' SELECT  4 AS DATA_TYPE'
						 + '                ,T.TIME_ID  AS TIME_ID '
						 + '                ,' + SELECT_CALCNT + ' AS Y_DIM '
						 + '                ,SUM(T.STORE_QTY) AS STORE_QTY '
						 + '                ,SUM(T.DEAL_QTY) AS DEAL_QTY '
						 + '                ,SUM(T.VC_S_QTY) AS VC_S_QTY '
						 + '                ,SUM(T.VC_S_AMT) AS VC_S_AMT '
						 + '                ,SUM(T.VC_RS_AMT) AS VC_RS_AMT '
						 + '                ,SUM(T.VC_TS_QTY) AS VC_TS_QTY '
						 + '                ,SUM(T.VC_TRS_AMT) AS VC_TRS_AMT '
						 + '	    FROM SYSDBA.#VT_FACT_VCCARD_SALES_TEMP T '
						 + ' 	    GROUP BY T.TIME_ID,' + SELECT_CALCNT
						 + ' ) WITH DATA PRIMARY  CHARINDEX(Y_DIM,TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
END SP;