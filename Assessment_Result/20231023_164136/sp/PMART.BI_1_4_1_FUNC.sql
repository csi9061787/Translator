REPLACE PROCEDURE PMART.BI_1_4_1_FUNC
(
   I_TIME_ID NUMBER,
   I_LEVEL NUMBER,
   I_ORG_ID NUMBER,
   I_PRD_LIST VARCHAR(200),
   I_SELECT_PRD_DIM_VALUE NUMBER
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(10000);
	DECLARE V_SQLSTR VARCHAR(400);
	CALL PMART.P_DROP_TABLE ('#VT_BI_1_4_1_FUNC');
	CALL PMART.BI_1_4_1_S_FUNC(I_TIME_ID, I_LEVEL, I_ORG_ID, I_PRD_LIST, I_SELECT_PRD_DIM_VALUE);
	CALL PMART.BI_1_4_1_ST_FUNC(I_LEVEL, I_ORG_ID);
	CALL PMART.BI_1_4_1_S0_FUNC(I_TIME_ID);
	IF I_SELECT_PRD_DIM_VALUE = 1 THEN
		SET V_SQLSTR = ' INNER JOIN PMART.PRD_DIM P ON P.PRD_ID = A.PRD_ID ';
	ELSE
		SET V_SQLSTR = ' INNER JOIN PMART.PRD_LINK_DIM P ON P.LINK_ID = A.PRD_ID ';
	END IF;
	SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_BI_1_4_1_FUNC  AS( ' 
				+ 'SELECT A.TIME_ID, A.ORG_ID, S.STORE_NM, S.MMA_NM, A.PRD_ID, P.PRD_NM, '
				+ '(CASE WHEN F.STNUM <> 0 THEN CAST(A.ORDER_CNT AS DECIMAL(11, 1)) / CAST(F.STNUM AS DECIMAL(11, 1)) ELSE A.ORDER_CNT END) C_ORDER_CNT , '
			    + '(CASE WHEN F.STNUM <> 0 THEN CAST(A.SALES_CNT AS DECIMAL(11, 1)) / CAST(F.STNUM AS DECIMAL(11, 1)) ELSE A.SALES_CNT END) C_SALES_CNT , '
				+ '(CASE WHEN F.STNUM <> 0 THEN CAST(A.THROW_CNT AS DECIMAL(11, 1)) / CAST(F.STNUM AS DECIMAL(11, 1)) ELSE A.THROW_CNT END) C_THROW_CNT, '
			    + '(CASE WHEN A.ORDER_CNT IS NULL OR A.ORDER_CNT = 0 THEN 0 ELSE CAST(A.SALES_CNT AS DECIMAL(14, 4)) / CAST(A.ORDER_CNT AS DECIMAL(14, 4))*100 END) AS C_RATE, '
			    + 'S.RESPON_NM, S.BRANCH_NM, S.DEPT_NM, S.PDEPT_NM, S.PDEPT_ID, S.DEPT_ID, S.BRANCH_ID, S.RESPON_ID '
				+ 'FROM #VT_BI_1_4_1_S_FUNC A '
			    + 'INNER JOIN #VT_BI_1_4_1_ST_FUNC S ON A.ORG_ID = S.STORE_ID  '
			    + V_SQLSTR
				+ 'INNER JOIN #VT_BI_1_4_1_S0_FUNC F ON A.ORG_ID = F.OSTORE_ID '
				+ ' ) WITH DATA PRIMARY  CHARINDEX( ORG_ID,PRD_ID) ON COMMIT PRESERVE ROWS;'; 
	EXECUTE IMMEDIATE SQLSTR;  
END SP;