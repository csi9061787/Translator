REPLACE PROCEDURE PMART.SHOP_PRD_RANK_FUNC
(
	IN I_L_MONTH_ID INT,
	IN I_ORG_ID INT,
	IN I_PRD_TYPE VARCHAR(1),
	IN I_KGRP1_ID VARCHAR(10),
	IN I_KGRP2_ID VARCHAR(10)
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(30000) Collate Chinese_Taiwan_Stroke_CI_AS;
	DECLARE V_KGRP_COL VARCHAR(10);
	DECLARE V_TIME_STR VARCHAR(400);
	CALL PMART.P_DROP_TABLE ('#VT_SHOP_PRD_RANK_FUNC'); 
	IF UPPER(I_PRD_TYPE)='P' THEN
		IF     LENGTH(I_KGRP1_ID)=2 THEN 
			SET V_KGRP_COL = 'KND_ID';
		ELSEIF LENGTH(I_KGRP1_ID)=3 THEN 
			SET V_KGRP_COL = 'GRP_ID';
		ELSEIF LENGTH(I_KGRP1_ID)=7 THEN 
			SET V_KGRP_COL = 'PRD_ID';
		END IF;
		SET SQLSTR = 
'
CREATE MULTISET VOLATILE TABLE #VT_SHOP_PRD_RANK_FUNC  AS(
	WITH PRD_INFO_LS AS ( 
		SELECT
			P.KND_ID, P.GRP_ID, P.KND_NO, P.GRP_NO, P.PRD_SLUNT,
			P.PRD_ID, P.PRD_NO, P.PRD_NM, P.PRD_CMBND, P.PRD_SPC,
			L.PRD_LEVL, U.MARKET_NAME
		FROM PMART.PRD_DIM P
		LEFT JOIN (
			SELECT L.PRD_ID, M.PRD_LEVL FROM PMART.PRD_ABC_LEVL L 
			LEFT JOIN PMART.PRD_ABC_LEVL_M1 M
			ON L.YYYYMM=M.YYYYMM AND L.PRD_ID=M.PRD_ID
			WHERE L.YYYYMM={YYYYMM}
		) L ON P.PRD_ID=L.PRD_ID
		LEFT JOIN (
			SELECT FM_CODE, FM_USAGE, MARKET_NAME 
			FROM PDATA.PBMCMDT P
			LEFT JOIN (SELECT CODE_ID, CODE_NAME AS MARKET_NAME FROM PDATA.PBMCODE WHERE CODE_TYPE=''FM_USAGE'') M
			ON P.FM_USAGE=M.CODE_ID
		) U ON P.PRD_ID=U.FM_CODE
		WHERE {PRD_COL} BETWEEN ''{CODE_S}'' AND ''{CODE_E}''
	),
	SALES_INFO AS (
		SELECT PRD_ID, SALES_CNT, SALES_AMT
		FROM PMART.BASIC_MFACT
		WHERE TIME_ID={YYYYMM} AND ORG_ID={ORG_CODE}
	),
	SALES_INFO_ALLSTORE AS (
		SELECT PRD_ID, SALES_CNT, SALES_AMT
		FROM PMART.BASIC_MFACT
		WHERE TIME_ID={YYYYMM} AND ORG_ID=-1
	),
	SALES_STORE_NUM AS (
		SELECT 
			LPAD(TRIM(E1.PRD_ID),7,''0'') AS PRD_ID,
			BIT_EXTRACT(BIT_AND(E1.SALES_STORE_NUM, E2.MASK)) AS SALES_STORE_NUM,
			BIT_EXTRACT(BIT_AND(BIT_AND(BIT_REVERSE(E1.SALES_STORE_NUM), E3.MAST_STORE_NUM), E2.MASK)) AS UNSALES_STORE_NUM,
			BIT_EXTRACT(BIT_AND(BIT_OR(E1.SALES_STORE_NUM, E1.ORDER_STORE_NUM), E2.MASK)) AS SALES_ORDER_STORE_NUM
		FROM 
			(SELECT PRD_ID, SALES_STORE_NUM, ORDER_STORE_NUM FROM PMART.BASIC_STFACT WHERE TIME_ID={YYYYMM}) E1,
			(SELECT MASK FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID={ORG_CODE}) E2,
			(SELECT MAST_STORE_NUM FROM PMART.BASIC_OST_FACT WHERE TIME_ID={YYYYMM}) E3
	),
	SAELS_SHOPDIST AS (
		SELECT M.MMA_ID, P.KND_ID, P.GRP_ID, M.PRD_ID, M.SALES_CNT, M.SALES_AMT,
		SUM(M.SALES_CNT) OVER (PARTITION BY M.MMA_ID, P.{PRD_COL}) AS GRP_CNT,
		SUM(M.SALES_AMT) OVER (PARTITION BY M.MMA_ID, P.{PRD_COL}) AS GRP_AMT
		FROM PMART.BASIC_MFACT_SHOP M 
		INNER JOIN PMART.PRD_DIM P ON M.PRD_ID = P.PRD_ID
		WHERE M.TIME_ID={YYYYMM}
		AND M.ORG_ID = {ORG_CODE}
		AND P.{PRD_COL} BETWEEN ''{CODE_S}'' AND ''{CODE_E}''
	)
	SELECT
		A.KND_ID,    
		A.GRP_ID,    
		A.KND_NO,    
		A.GRP_NO,    
		A.PRD_ID,    
		A.PRD_NO,    
		A.PRD_NM,    
		A.PRD_CMBND, 
		A.PRD_SPC,   
		A.PRD_SLUNT, 
		A.PRD_LEVL,  
		RANK() OVER(PARTITION BY A.GRP_ID ORDER BY DECODE(H.SALES_CNT, NULL, 0, H.SALES_CNT) DESC NULLS LAST) AS TOT_RANK, 
		RANK() OVER(PARTITION BY A.GRP_ID ORDER BY DECODE(B.SALES_CNT, NULL, 0, B.SALES_CNT) DESC NULLS LAST) AS LEVEL_RANK, 
		B.SALES_CNT, 
		B.SALES_AMT, 
		G.SALES_CNT AS GRP_CNT, 
		G.SALES_AMT AS GRP_AMT, 
		H.SALES_CNT AS TOT_CNT, 
		H.SALES_AMT AS TOT_AMT, 
		E.SALES_STORE_NUM AS SL_STNUM, 
		E.UNSALES_STORE_NUM AS NOSL_STNUM, 
		S1.SALES_CNT AS SHOP_SALES_CNT1, S1.SALES_AMT AS SHOP_SALES_AMT1, S1.GRP_CNT AS SHOP_GRP_CNT1, S1.GRP_AMT AS SHOP_GRP_AMT1,
		S2.SALES_CNT AS SHOP_SALES_CNT2, S2.SALES_AMT AS SHOP_SALES_AMT2, S2.GRP_CNT AS SHOP_GRP_CNT2, S2.GRP_AMT AS SHOP_GRP_AMT2,
		S3.SALES_CNT AS SHOP_SALES_CNT3, S3.SALES_AMT AS SHOP_SALES_AMT3, S3.GRP_CNT AS SHOP_GRP_CNT3, S3.GRP_AMT AS SHOP_GRP_AMT3,
		S4.SALES_CNT AS SHOP_SALES_CNT4, S4.SALES_AMT AS SHOP_SALES_AMT4, S4.GRP_CNT AS SHOP_GRP_CNT4, S4.GRP_AMT AS SHOP_GRP_AMT4,
		S5.SALES_CNT AS SHOP_SALES_CNT5, S5.SALES_AMT AS SHOP_SALES_AMT5, S5.GRP_CNT AS SHOP_GRP_CNT5, S5.GRP_AMT AS SHOP_GRP_AMT5,
		S6.SALES_CNT AS SHOP_SALES_CNT6, S6.SALES_AMT AS SHOP_SALES_AMT6, S6.GRP_CNT AS SHOP_GRP_CNT6, S6.GRP_AMT AS SHOP_GRP_AMT6,
		S7.SALES_CNT AS SHOP_SALES_CNT7, S7.SALES_AMT AS SHOP_SALES_AMT7, S7.GRP_CNT AS SHOP_GRP_CNT7, S7.GRP_AMT AS SHOP_GRP_AMT7,
		S8.SALES_CNT AS SHOP_SALES_CNT8, S8.SALES_AMT AS SHOP_SALES_AMT8, S8.GRP_CNT AS SHOP_GRP_CNT8, S8.GRP_AMT AS SHOP_GRP_AMT8,
		S9.SALES_CNT AS SHOP_SALES_CNT9, S9.SALES_AMT AS SHOP_SALES_AMT9, S9.GRP_CNT AS SHOP_GRP_CNT9, S9.GRP_AMT AS SHOP_GRP_AMT9,
		S10.SALES_CNT AS SHOP_SALES_CNT10, S10.SALES_AMT AS SHOP_SALES_AMT10, S10.GRP_CNT AS SHOP_GRP_CNT10, S10.GRP_AMT AS SHOP_GRP_AMT10,
		A.MARKET_NAME  
	FROM PRD_INFO_LS A
	LEFT JOIN SALES_INFO B ON A.PRD_ID=B.PRD_ID 
	LEFT JOIN SALES_INFO G ON A.{PRD_COL}=G.PRD_ID  
	LEFT JOIN SALES_INFO_ALLSTORE H ON A.PRD_ID=H.PRD_ID 
	LEFT JOIN SALES_STORE_NUM E ON A.PRD_ID=E.PRD_ID 
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000001) S1 ON A.PRD_ID=S1.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000002) S2 ON A.PRD_ID=S2.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000003) S3 ON A.PRD_ID=S3.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000004) S4 ON A.PRD_ID=S4.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000005) S5 ON A.PRD_ID=S5.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000006) S6 ON A.PRD_ID=S6.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000007) S7 ON A.PRD_ID=S7.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000008) S8 ON A.PRD_ID=S8.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000009) S9 ON A.PRD_ID=S9.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000010) S10 ON A.PRD_ID=S10.PRD_ID
) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;
'
;
		SET SQLSTR = Replace(SQLSTR, '{YYYYMM}', TO_CHAR(I_L_MONTH_ID));
		SET SQLSTR = Replace(SQLSTR, '{ORG_CODE}', TO_CHAR(I_ORG_ID));
		SET SQLSTR = Replace(SQLSTR, '{PRD_COL}', V_KGRP_COL);
		SET SQLSTR = Replace(SQLSTR, '{CODE_S}', I_KGRP1_ID);
		SET SQLSTR = Replace(SQLSTR, '{CODE_E}', I_KGRP2_ID);
	END IF;
	IF UPPER(I_PRD_TYPE)='L' THEN
		SET SQLSTR =
'
CREATE MULTISET VOLATILE TABLE #VT_SHOP_PRD_RANK_FUNC  AS(
	WITH PRD_INFO_LS AS ( 
		SELECT
			P.LINK_KND_ID AS KND_ID, P.LINK_KND_ID AS GRP_ID, P.LINK_KND_NO AS KND_NO, P.LINK_KND_NO AS GRP_NO, P.LINK_SLUNT AS PRD_SLUNT,
			P.PRD_ID, P.PRD_NO, P.PRD_NM, P.LINK_CMBND AS PRD_CMBND, P.LINK_SPC AS PRD_SPC,
			L.PRD_LEVL, U.MARKET_NAME
		FROM PMART.PRD_LINK_DIM P
		LEFT JOIN (
			SELECT L.PRD_ID, M.PRD_LEVL FROM PMART.PRD_ABC_LEVL L 
			LEFT JOIN PMART.PRD_ABC_LEVL_M1 M
			ON L.YYYYMM=M.YYYYMM AND L.PRD_ID=M.PRD_ID
			WHERE L.YYYYMM={YYYYMM}
		) L ON P.PRD_ID=L.PRD_ID
		LEFT JOIN (
			SELECT FM_CODE, FM_USAGE, MARKET_NAME 
			FROM PDATA.PBMCMDT P
			LEFT JOIN (SELECT CODE_ID, CODE_NAME AS MARKET_NAME FROM PDATA.PBMCODE WHERE CODE_TYPE=''FM_USAGE'') M
			ON P.FM_USAGE=M.CODE_ID
		) U ON P.PRD_ID=U.FM_CODE
		WHERE P.LINK_KND_ID=''{CODE_S}''
	),
	SALES_INFO AS (
		SELECT PRD_ID, SALES_CNT, SALES_AMT
		FROM PMART.BASIC_MLFACT
		WHERE TIME_ID={YYYYMM} AND ORG_ID={ORG_CODE}
	),
	SALES_INFO_ALLSTORE AS (
		SELECT PRD_ID, SALES_CNT, SALES_AMT
		FROM PMART.BASIC_MLFACT
		WHERE TIME_ID={YYYYMM} AND ORG_ID=-1
	),
	SALES_STORE_NUM AS (
		SELECT 
			LPAD(TRIM(E1.PRD_ID),7,''0'') AS PRD_ID,
			BIT_EXTRACT(BIT_AND(E1.SALES_STORE_NUM, E2.MASK)) AS SALES_STORE_NUM,
			BIT_EXTRACT(BIT_AND(BIT_AND(BIT_REVERSE(E1.SALES_STORE_NUM), E3.MAST_STORE_NUM), E2.MASK)) AS UNSALES_STORE_NUM,
			BIT_EXTRACT(BIT_AND(BIT_OR(E1.SALES_STORE_NUM, E1.ORDER_STORE_NUM), E2.MASK)) AS SALES_ORDER_STORE_NUM
		FROM 
			(SELECT PRD_ID, SALES_STORE_NUM, ORDER_STORE_NUM FROM PMART.BASIC_STLFACT WHERE TIME_ID  = {YYYYMM}) E1,
			(SELECT MASK FROM PMART.LAST_ORG_DIM_MASK WHERE ORG_ID = {ORG_CODE}) E2,
			(SELECT MAST_STORE_NUM FROM PMART.BASIC_OST_FACT WHERE TIME_ID = {YYYYMM}) E3
	),
	SAELS_SHOPDIST AS (
		SELECT 
		M.MMA_ID, P.LINK_KND_ID AS KND_ID, P.LINK_KND_ID AS GRP_ID,
		M.PRD_ID, M.SALES_CNT, M.SALES_AMT,
		SUM(M.SALES_CNT) OVER (PARTITION BY M.MMA_ID, P.LINK_KND_ID) AS GRP_CNT,
		SUM(M.SALES_AMT) OVER (PARTITION BY M.MMA_ID, P.LINK_KND_ID) AS GRP_AMT
		FROM PMART.BASIC_MLFACT_SHOP M 
		INNER JOIN PMART.PRD_LINK_DIM P ON M.PRD_ID = P.PRD_ID
		WHERE M.TIME_ID = {YYYYMM}
		AND M.ORG_ID = {ORG_CODE}
		AND P.LINK_KND_ID=''{CODE_S}''
	)
	SELECT
		A.KND_ID,    
		A.GRP_ID,    
		A.KND_NO,    
		A.GRP_NO,    
		A.PRD_ID,    
		A.PRD_NO,    
		A.PRD_NM,    
		A.PRD_CMBND, 
		A.PRD_SPC,   
		A.PRD_SLUNT, 
		A.PRD_LEVL,  
		RANK() OVER(PARTITION BY A.GRP_ID ORDER BY DECODE(H.SALES_CNT, NULL, 0, H.SALES_CNT) DESC NULLS LAST) AS TOT_RANK, 
		RANK() OVER(PARTITION BY A.GRP_ID ORDER BY DECODE(B.SALES_CNT, NULL, 0, B.SALES_CNT) DESC NULLS LAST) AS LEVEL_RANK, 
		B.SALES_CNT, 
		B.SALES_AMT, 
		G.SALES_CNT AS GRP_CNT, 
		G.SALES_AMT AS GRP_AMT, 
		H.SALES_CNT AS TOT_CNT, 
		H.SALES_AMT AS TOT_AMT, 
		E.SALES_STORE_NUM AS SL_STNUM, 
		E.UNSALES_STORE_NUM AS NOSL_STNUM, 
		S1.SALES_CNT AS SHOP_SALES_CNT1, S1.SALES_AMT AS SHOP_SALES_AMT1, S1.GRP_CNT AS SHOP_GRP_CNT1, S1.GRP_AMT AS SHOP_GRP_AMT1,
		S2.SALES_CNT AS SHOP_SALES_CNT2, S2.SALES_AMT AS SHOP_SALES_AMT2, S2.GRP_CNT AS SHOP_GRP_CNT2, S2.GRP_AMT AS SHOP_GRP_AMT2,
		S3.SALES_CNT AS SHOP_SALES_CNT3, S3.SALES_AMT AS SHOP_SALES_AMT3, S3.GRP_CNT AS SHOP_GRP_CNT3, S3.GRP_AMT AS SHOP_GRP_AMT3,
		S4.SALES_CNT AS SHOP_SALES_CNT4, S4.SALES_AMT AS SHOP_SALES_AMT4, S4.GRP_CNT AS SHOP_GRP_CNT4, S4.GRP_AMT AS SHOP_GRP_AMT4,
		S5.SALES_CNT AS SHOP_SALES_CNT5, S5.SALES_AMT AS SHOP_SALES_AMT5, S5.GRP_CNT AS SHOP_GRP_CNT5, S5.GRP_AMT AS SHOP_GRP_AMT5,
		S6.SALES_CNT AS SHOP_SALES_CNT6, S6.SALES_AMT AS SHOP_SALES_AMT6, S6.GRP_CNT AS SHOP_GRP_CNT6, S6.GRP_AMT AS SHOP_GRP_AMT6,
		S7.SALES_CNT AS SHOP_SALES_CNT7, S7.SALES_AMT AS SHOP_SALES_AMT7, S7.GRP_CNT AS SHOP_GRP_CNT7, S7.GRP_AMT AS SHOP_GRP_AMT7,
		S8.SALES_CNT AS SHOP_SALES_CNT8, S8.SALES_AMT AS SHOP_SALES_AMT8, S8.GRP_CNT AS SHOP_GRP_CNT8, S8.GRP_AMT AS SHOP_GRP_AMT8,
		S9.SALES_CNT AS SHOP_SALES_CNT9, S9.SALES_AMT AS SHOP_SALES_AMT9, S9.GRP_CNT AS SHOP_GRP_CNT9, S9.GRP_AMT AS SHOP_GRP_AMT9,
		S10.SALES_CNT AS SHOP_SALES_CNT10, S10.SALES_AMT AS SHOP_SALES_AMT10, S10.GRP_CNT AS SHOP_GRP_CNT10, S10.GRP_AMT AS SHOP_GRP_AMT10,
		A.MARKET_NAME  
	FROM PRD_INFO_LS A
	LEFT JOIN SALES_INFO B ON A.PRD_ID=B.PRD_ID 
	LEFT JOIN SALES_INFO G ON A.GRP_ID=G.PRD_ID  
	LEFT JOIN SALES_INFO_ALLSTORE H ON A.PRD_ID=H.PRD_ID 
	LEFT JOIN SALES_STORE_NUM E ON A.PRD_ID=E.PRD_ID 
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000001) S1 ON A.PRD_ID=S1.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000002) S2 ON A.PRD_ID=S2.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000003) S3 ON A.PRD_ID=S3.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000004) S4 ON A.PRD_ID=S4.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000005) S5 ON A.PRD_ID=S5.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000006) S6 ON A.PRD_ID=S6.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000007) S7 ON A.PRD_ID=S7.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000008) S8 ON A.PRD_ID=S8.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000009) S9 ON A.PRD_ID=S9.PRD_ID
	LEFT JOIN (SELECT * FROM SAELS_SHOPDIST WHERE MMA_ID=10000010) S10 ON A.PRD_ID=S10.PRD_ID
) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;
'
;
		SET SQLSTR = Replace(SQLSTR, '{YYYYMM}', TO_CHAR(I_L_MONTH_ID));
		SET SQLSTR = Replace(SQLSTR, '{ORG_CODE}', TO_CHAR(I_ORG_ID));
		SET SQLSTR = Replace(SQLSTR, '{CODE_S}', I_KGRP1_ID);
	END IF;
	EXECUTE IMMEDIATE SQLSTR;
END SP;