REPLACE PROCEDURE PMART.FUNC_SHELF_DAY
(  IN P_TIME_ID INTEGER
)
SP:BEGIN
DECLARE SQLSTR  VARCHAR(1000);    
CALL PMART.P_DROP_TABLE ('#VT_FUNC_SHELF_DAY_AVG');
CALL PMART.P_DROP_TABLE ('#VT_FUNC_SHELF_DAY');
SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_FUNC_SHELF_DAY_AVG  
                (    
                  AVG_ID INTEGER
                 ,AVG_CHINESE VARCHAR(20) Collate Chinese_Taiwan_Stroke_CI_AS
                )
                NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
  EXECUTE IMMEDIATE SQLSTR;
INSERT INTO #VT_FUNC_SHELF_DAY_AVG(AVG_ID,AVG_CHINESE) SELECT -1,'合計';
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FUNC_SHELF_DAY AS('                          										   
						   + 'SELECT X.L_DAY_ID,'
						   + '  CAST(TO_CHAR(C.CALENDAR_DATE, ''YYYYMMDD'') AS INTEGER) AS X_DAY,'
						   + '   T.L_DAY_NAME AS X_DAY_NAME'
  						   + ' FROM SYS_CALENDAR.CALENDAR C '
  						   + 'JOIN (SELECT DISTINCT L_DAY_ID, TIME_ID_S, TIME_ID_E FROM PMART.SHELF_DIM WHERE L_DAY_ID = '+P_TIME_ID+') X '
    					   + 'ON CAST(TO_CHAR(C.CALENDAR_DATE, ''YYYYMMDD'') AS INTEGER) >= X.TIME_ID_S '
   						   + 'AND CAST(TO_CHAR(C.CALENDAR_DATE, ''YYYYMMDD'') AS INTEGER) <= X.TIME_ID_E '
  						   + 'JOIN PMART.YMWD_TIME T ON CAST(TO_CHAR(C.CALENDAR_DATE, ''YYYYMMDD'') AS INTEGER) = T.L_DAY_ID '
						   +' UNION SELECT DISTINCT CAST('+P_TIME_ID+' AS INTEGER) AS L_DAY_ID,CAST(-1 AS INTEGER) AS X_DAY,V.AVG_CHINESE  AS X_DAY_NAME FROM PMART.SHELF_DAY JOIN #VT_FUNC_SHELF_DAY_AVG V ON V.AVG_ID=-1 '
                           + ' ) WITH DATA PRIMARY  CHARINDEX( X_DAY,L_DAY_ID) ON COMMIT PRESERVE ROWS;';
		EXECUTE IMMEDIATE SQLSTR;   
END SP;