REPLACE  PROCEDURE PDATA.FAMI_BOOK_0200
(
)
SP:BEGIN
DECLARE PBATCH_DTTM INTEGER;
SELECT TO_NUMBER(TO_CHAR(BATCH_DTTM, 'YYYYMMDD')) INTO PBATCH_DTTM
FROM PSTAGE.DWH_CTL WHERE TABLENAME = 'FAMI_BOOK';
CALL PDATA.P_DROP_TABLE('PTEMP.TP0_FAMI_BOOK');
CREATE SET TABLE PTEMP.TP0_FAMI_BOOK  ,
,
,
,
     DEFAULT MERGEBLOCKRATIO
     (
      L_DAY_ID INTEGER,
      OSTORE_ID INTEGER,
      MMK_ID VARCHAR(3),
      TRAN_NO VARCHAR(20),      
      TICKET_COUNT INTEGER,
      TOTAL_PRICE INTEGER,
      ORDER_DATE TIMESTAMP(0),
      ITEM_NAME VARCHAR(100) Collate Chinese_Taiwan_Stroke_CI_AS,
      STATUS VARCHAR(2),
      DATA_CNT INTEGER
     );
CALL PDATA.P_DROP_TABLE('PTEMP.TP1_FAMI_BOOK');
CREATE MULTISET TABLE PTEMP.TP1_FAMI_BOOK  ,
,
,
,
     DEFAULT MERGEBLOCKRATIO
     (
      L_DAY_ID INTEGER,
      OSTORE_ID INTEGER,
      MMK_ID VARCHAR(3),
      TRAN_NO VARCHAR(20),      
      TICKET_COUNT INTEGER,
      TOTAL_PRICE INTEGER,
      ORDER_DATE TIMESTAMP(0),
      ITEM_NAME VARCHAR(100) Collate Chinese_Taiwan_Stroke_CI_AS,
      STATUS VARCHAR(2),
	  DATA_CNT INTEGER
	  )
UNIQUE PRIMARY INDEX ( OSTORE_ID ,MMK_ID ,TRAN_NO ,ORDER_DATE );
INSERT INTO PTEMP.TP1_FAMI_BOOK
SELECT TO_CHAR(ORDER_DATE,'YYYYMMDD') AS L_DAY_ID,
               CAST(ST.OSTORE_NO AS INTEGER) OSTORE_ID,
               FAMI.MMK_ID, TRAN_NO, TICKET_COUNT, TOTAL_PRICE, ORDER_DATE,
               CASE WHEN FAMI.ITEM_NAME IS NULL THEN D.MMK_ID+D.MMK_NAME ELSE FAMI.ITEM_NAME END AS ITEM_NAME, 
			   STATUS, 1 AS DATA_CNT
  FROM PSTAGE.ST_FAMI_BOOK FAMI
  INNER JOIN PDATA.PBMSTOR ST ON FAMI.NO_STORE = ST.STORE_NO
  LEFT JOIN PDATA.MMK_PRD_M D ON FAMI.MMK_ID = D.MMK_ID
  WHERE BATCH_DTTM = PBATCH_DTTM;
INSERT INTO PTEMP.TP0_FAMI_BOOK
SELECT  L_DAY_ID , OSTORE_ID , MMK_ID , TRAN_NO ,  TICKET_COUNT ,
TOTAL_PRICE , ORDER_DATE , ITEM_NAME , STATUS , DATA_CNT
FROM PTEMP.TP1_FAMI_BOOK;
FOR LOOPVAR AS CUR1 CURSOR FOR
SELECT DISTINCT L_DAY_ID FROM PTEMP.TP1_FAMI_BOOK ORDER BY L_DAY_ID
DO 
INSERT INTO PTEMP.TP0_FAMI_BOOK
SELECT B. L_DAY_ID,
               B.OSTORE_ID,
               B.MMK_ID, B.TRAN_NO, 
			   -1 * B.TICKET_COUNT, 
			   -1 * B.TOTAL_PRICE, 
			   B.ORDER_DATE,  
			   B.ITEM_NAME, 
			   B.STATUS, 
			   -1 AS DATA_CNT
   FROM PTEMP.TP1_FAMI_BOOK A
   JOIN (SELECT * FROM PDATA.FAMI_BOOK 
              WHERE L_DAY_ID = LOOPVAR.L_DAY_ID
   ) B ON A.OSTORE_ID=B.OSTORE_ID AND A.MMK_ID=B.MMK_ID 
         AND A.TRAN_NO=B.TRAN_NO AND A.ORDER_DATE=B.ORDER_DATE 
         AND A.L_DAY_ID = B.L_DAY_ID;
END FOR;
INSERT INTO PDATA.MMK_PRD_D
SELECT SYS_ID, CLASS_ID, MMK_ID,
(TRIM(MMK_ID)+TRIM(YYY)+TRIM(SUBSTRING('0000',1,4-LENGTH(TO_CHAR(NEWSEQ MOD 10000))))+TRIM(NEWSEQ MOD 10000)) ITEM_ID,
ITEM_NAME, DATE
FROM (
SELECT A.* , CASE WHEN B.SYS_ID IS NULL THEN 'Y' ELSE 'N' END AS NEWITEM,
 CAST(TO_CHAR(DATE,'YYYY') - 1911 AS INTEGER)  AS YYY,
(ROW_NUMBER() OVER (PARTITION BY A.SYS_ID, A.CLASS_ID, A.MMK_ID ORDER BY A.MMK_ID, A.ITEM_NAME) + NVL(C.ITEM_CNT,0)) AS NEWSEQ
FROM
(
SELECT DISTINCT '2' SYS_ID, '03' CLASS_ID, MMK_ID, ITEM_NAME FROM PTEMP.TP1_FAMI_BOOK
) A
LEFT JOIN PDATA.MMK_PRD_D B ON A.SYS_ID = B.SYS_ID AND A.CLASS_ID = B.CLASS_ID AND A.MMK_ID = B.MMK_ID AND A.ITEM_NAME = B.ITEM_NAME
LEFT JOIN (
SELECT SYS_ID, CLASS_ID, MMK_ID, COUNT(ITEM_ID) ITEM_CNT
FROM PDATA.MMK_PRD_D
GROUP BY SYS_ID, CLASS_ID, MMK_ID
) C  ON A.SYS_ID = C.SYS_ID AND A.CLASS_ID = C.CLASS_ID AND A.MMK_ID = C.MMK_ID
WHERE NEWITEM = 'Y'
) AS T;
MERGE INTO PDATA.FAMI_BOOK A
USING PTEMP.TP1_FAMI_BOOK B
ON A.L_DAY_ID=B.L_DAY_ID AND A.OSTORE_ID=B.OSTORE_ID AND A.MMK_ID=B.MMK_ID AND A.TRAN_NO=B.TRAN_NO AND A.ORDER_DATE=B.ORDER_DATE
WHEN MATCHED THEN UPDATE SET         
            TICKET_COUNT           = B.TICKET_COUNT,
            TOTAL_PRICE               = B.TOTAL_PRICE,
            ITEM_NAME                   = B.ITEM_NAME,
            STATUS                          = B.STATUS
WHEN NOT MATCHED THEN INSERT(
           L_DAY_ID,
           OSTORE_ID,
           MMK_ID,
           TRAN_NO,           
	   TICKET_COUNT,
	   TOTAL_PRICE,
	   ORDER_DATE,
	   ITEM_NAME,
	   STATUS
)
VALUES (
           B.L_DAY_ID,
           B.OSTORE_ID,
           B.MMK_ID,
           B.TRAN_NO,           
	   B.TICKET_COUNT,
	   B.TOTAL_PRICE,
	   B.ORDER_DATE,
	   B.ITEM_NAME,
	   B.STATUS
);
DROP TABLE PTEMP.TP1_FAMI_BOOK;
END SP;