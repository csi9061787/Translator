REPLACE PROCEDURE PMART.WDWH_4_1_FUNC(P_L_DAY_ID VARCHAR(400),P_DAY_TYPE VARCHAR(1), P_LEVEL VARCHAR(1), P_PRD_ID VARCHAR(400), P_DEPT_ID INTEGER, P_KND VARCHAR(2))
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR  VARCHAR(8000); 	
   DECLARE V_TABLE_NAME VARCHAR(30);
   DECLARE LDAY NUMBER;
   DECLARE V_SELECT VARCHAR(3000); 
   DECLARE V_WHERE1 VARCHAR(100); 	
   DECLARE V_WHERE2 VARCHAR(100); 	
   DECLARE SQLSTR_UNION  VARCHAR(8000); 	
   DECLARE V_C_DATE  INTEGER;     
   DECLARE V_D_FLAG  VARCHAR(1) DEFAULT 'T';   
   DECLARE V_S_DATE  DATE;   
   IF CURRENT_TIME <= CAST('07:00:00' AS TIME  ) THEN
      SET V_S_DATE = CURRENT_DATE -1;
   ELSE
      SET V_S_DATE = CURRENT_DATE;
   END IF;
   CALL PMART.P_DROP_TABLE ('#VT_WDWH_4_1_FUNC');    
   CALL PMART.P_DROP_TABLE ('#VT_WDWH_4_1_FUNC_1');    
   CALL PMART.P_DROP_TABLE ('#VT_WDWH_4_1_FUNC_2');    
   CALL PMART.P_DROP_TABLE ('#VT_WDWH_4_1_FUNC_3');    
   IF P_L_DAY_ID <> CAST(CAST(V_S_DATE AS INTEGER)+19000000 AS VARCHAR(8)) OR (P_L_DAY_ID<>CAST(CAST(V_S_DATE AS INTEGER)+19000000 AS VARCHAR(8)))THEN 
		SET V_C_DATE = CAST(P_L_DAY_ID AS INTEGER);
		SET V_D_FLAG = 'F';
   ELSE
		SET V_C_DATE = CAST(CAST(CAST(P_L_DAY_ID AS INTEGER)-19000000 AS DATE)-1 AS INTEGER)+19000000;
		SET V_D_FLAG = 'T';
	    SET SQLSTR = '  CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_3 AS 	(		'
		                        + ' SELECT COUNT(DISTINCT OSTORE_ID) AS STORE_NUM '
								+ '       FROM PDATA.TRANS '
								+ '	   WHERE TX_DTTM  BETWEEN TO_CHAR(CAST('+P_L_DAY_ID+'-19000000 AS DATE) ,''YYYY-MM-DD'')+ '' 00:00:00'' AND TO_CHAR(CAST('+P_L_DAY_ID+'-19000000 AS DATE) ,''YYYY-MM-DD'')+ '' 23:59:59''  '
								+'        AND OSTORE_ID IN (SELECT OSTORE_ID FROM  PMART.ORG_DIM)  '
								+ '	 ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; ';
		LOCKING TABLE PDATA.TRANS_PRODUCT_DETAIL FOR ACCESS;
		 EXECUTE IMMEDIATE SQLSTR;
		 SET SQLSTR = '';
   END IF;
   SET V_SELECT  =  ' ISNULL(SUM(T.DIS_AMT+T.SUB_AMT)) AS DIS_AMT, '+
				    ' ISNULL(SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)) AS REAL_SALES_AMT, '+
					' CASE WHEN MAX(T.UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/MAX(CAST(T.UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_PSD, '+
					' ISNULL(SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)) AS LSALES_AMT, '+
					' CASE WHEN MAX(TL.UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)/MAX(CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS LSALES_AMT_PSD, '+
					' ISNULL(SUM(T.BUDGET_AMT)) AS BUDGET_AMT, '+
					' ISNULL(SUM(T.BUDGET_PSD)) AS BUDGET_AMT_PSD, '+
					' CASE WHEN SUM(T.BUDGET_AMT) > 0 THEN  ISNULL(SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/SUM(CAST(T.BUDGET_AMT AS DECIMAL(16,6))))*100 ELSE 0 END AS BUDGET_SALES_RATE, '+
					' CASE WHEN (SUM(T.BUDGET_PSD)) > 0 THEN  (CASE WHEN MAX(T.UPLOAD_STNUM) > 0 THEN  SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/MAX(T.UPLOAD_STNUM) ELSE 0 END)/(SUM(CAST(T.BUDGET_PSD AS DECIMAL(16,6))))*100 ELSE 0 END AS BUDGET_SALES_PSD_RATE, '+
					' (CASE WHEN MAX(T.UPLOAD_STNUM) > 0 THEN ISNULL(SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/MAX(CAST(T.UPLOAD_STNUM AS DECIMAL(18,8)))) ELSE 0 END)-(CASE WHEN MAX(T.UPLOAD_STNUM) > 0 THEN ISNULL(SUM(T.BUDGET_PSD)) ELSE 0 END) AS PSD_DIFF, '+
					' CASE WHEN SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT) = 0 THEN 0 ELSE ISNULL(SUM(CAST(T.SALES_AMT AS DECIMAL(16,6))-T.DIS_AMT-T.SUB_AMT)/SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)*100) END AS LSALES_RATE, '+
					' CASE WHEN SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT) = 0 OR MAX(T.UPLOAD_STNUM)=0 OR MAX(TL.UPLOAD_STNUM)=0 THEN 0 ELSE ISNULL((SUM(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/MAX(CAST(T.UPLOAD_STNUM AS DECIMAL(16,6))))/(SUM(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)/MAX(CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6))))*100) END AS L_YEAR_PSD_DIFF ';
	 SET V_SELECT  =  V_SELECT  
					+ ', CASE WHEN SUM(TL.SALES_CNT) = 0 OR MAX(T.UPLOAD_STNUM)=0 OR MAX(TL.UPLOAD_STNUM)=0 THEN 0 ELSE ISNULL((SUM(CAST(T.SALES_CNT AS DECIMAL(16,6)))/MAX(CAST(T.UPLOAD_STNUM AS DECIMAL(16,6))))/(SUM(TL.SALES_CNT)/MAX(CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6))))*100) END AS LSALES_CNT_RATE '   
					+ ' ,CASE WHEN MAX(T.UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(T.SALES_CNT)/MAX(CAST(T.UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT ';
   IF   P_DEPT_ID  = 0 THEN
	     SET V_WHERE1 = '';
   ELSE
	     IF P_LEVEL = '0' THEN
	         SET V_WHERE1 = '';
		 ELSEIF P_LEVEL = '1' THEN
		 	 SET V_WHERE1 = ' AND P.DEPT_ID = '+P_DEPT_ID+' ';
		 ELSEIF P_LEVEL = '2' THEN
			 SET V_WHERE1 = ' AND P.BRANCH_ID = '+P_DEPT_ID+' ';
		 ELSEIF P_LEVEL = '3' THEN
		     SET V_WHERE1 = ' AND P.RESPON_ID = '+P_DEPT_ID+' ';
		 ELSEIF P_LEVEL = '4' THEN
		     SET V_WHERE1 = ' AND B.RESPON_ID = '+P_DEPT_ID+' ' ;
		END IF;
   END IF ;
   SET V_WHERE2 = V_WHERE1;
   IF (P_DAY_TYPE='D') THEN  
        SET LDAY =10000;
   ELSEIF (P_DAY_TYPE='W') THEN 
        SET LDAY =100;
   ELSEIF (P_DAY_TYPE='M') THEN 
        SET LDAY =100;
   ELSE 
         SET LDAY =0;
   END IF; 
   CASE P_LEVEL
         WHEN '4' THEN 
		   IF V_D_FLAG = 'F'  THEN
			    SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS  '
								+ ' (  '
								+ '  	  SELECT  ''2'' AS FLAG, CAST(P.GRP_ID AS VARCHAR(20)) AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
								+ ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
								+ ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE  
								+ ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
								+ ' 		WHERE B.RESPON_ID = ' + P_DEPT_ID + ' AND P.KND_NO =''' + P_KND + ''''
								+ ' 	    GROUP BY FLAG,PRD_ID_1	 '
								+ ' 		UNION ALL '
								+ '  		SELECT  ''1'' AS FLAG, CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
								+ ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
								+ ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE   
								+ ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
								+ ' 		WHERE B.RESPON_ID = ' +P_DEPT_ID 
								+ ' 	     GROUP BY FLAG,PRD_ID_1 '						 
								+ '  ) WITH DATA PRIMARY INDEX(PRD_ID_1) ON COMMIT PRESERVE ROWS; ';				
				EXECUTE IMMEDIATE SQLSTR;
		   ELSE
		         LOCKING TABLE PDATA.TRANS_PRODUCT_DETAIL FOR ACCESS;
				 SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS	'
				 				+  ' ( '
				 				+  ' 		SELECT  ''2'' AS FLAG, CAST(P.GRP_ID AS VARCHAR(20)) AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
								+  ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
                 				+  '        LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
								+  ' 		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
								+  ' 		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1   '
								+  ' 		WHERE B.RESPON_ID = ' +P_DEPT_ID +'   AND P.KND_NO = '''+P_KND+''''
								+  ' 		  AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')   '
								+  ' 	    GROUP BY FLAG,PRD_ID_1,S.STORE_NUM '
								+  ' 		UNION ALL '
				 				+  ' 		SELECT  ''1'' AS FLAG, CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
								+  ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
                 				+  '        LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
								+  ' 		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE '
								+  '       AND Z.TX_DTTM  BETWEEN  TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 00:00:00''  AND TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 23:59:59''  '
								+  ' 		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	 '
								+  ' 		WHERE B.RESPON_ID = ' +P_DEPT_ID 
								+  ' 		  AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')	'
								+  ' 		GROUP BY FLAG,PRD_ID_1,S.STORE_NUM		 '		 
				 				+  ' ) WITH DATA PRIMARY CHARINDEX( '
										+',PRD_ID_1) ON COMMIT PRESERVE ROWS  ;   ' ;							
				EXECUTE IMMEDIATE SQLSTR;				
		   END IF;	
			    SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_2 AS ( '
			 							+' 		SELECT  B.RESPON_ID AS PRD_ID_2 		                CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_AMT-DIS_AMT-SUB_AMT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_M_PSD, '
										+' 						CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_CNT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT_M_PSD '
										+' 		FROM PMART.BASIC_MFACT_BUDGET T '
										+' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
										+' 		INNER JOIN (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID	 '			 
										+' 		WHERE T.TIME_ID = CAST(CAST('''+P_L_DAY_ID+''' AS VARCHAR(6))  AS INTEGER) '
										+' 			  AND B.RESPON_ID =  ' +P_DEPT_ID 
										+' 	     GROUP BY PRD_ID_2 '
			 							+' ) WITH DATA PRIMARY INDEX(PRD_ID_2) ON COMMIT PRESERVE ROWS; ';																		
				EXECUTE IMMEDIATE SQLSTR;											
		 SET SQLSTR_UNION = ' UNION ' +
					                     '  SELECT T.TIME_ID,B.GRP_ID AS PRD_ID_N, '+
										 ' P.GRP_NAME AS PRD_NM, ' + 
										 ' ''2'' AS FLAG, '+	
										 '  P.GRP_NO AS ORG_ID, B.RESPON_ID AS U_DEPT_ID  ' 		
									  + ' , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
									  + ' , 0 AS REAL_SALES_AMT_M_PSD  , 0 AS REAL_SALES_CNT_M_PSD,  '  
					                     '  ISNULL(T.DIS_AMT+T.SUB_AMT) AS DIS_AMT, '+
					                     '  ISNULL(T.SALES_AMT-T.DIS_AMT-T.SUB_AMT) AS REAL_SALES_AMT, '+
					                     '  CASE WHEN T.UPLOAD_STNUM > 0 THEN  ISNULL((T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/CAST(T.UPLOAD_STNUM AS DECIMAL(16,6))) ELSE 0 END AS REAL_SALES_AMT_PSD, '+
					                     '  ISNULL(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT) AS LSALES_AMT, '+
					                     '  CASE WHEN TL.UPLOAD_STNUM > 0 THEN  ISNULL((TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)/CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6))) ELSE 0 END AS LSALES_AMT_PSD, '+
					                     '  ISNULL(T.BUDGET_AMT) AS BUDGET_AMT, '+
					                     '  ISNULL(T.BUDGET_PSD) AS BUDGET_AMT_PSD, '+
					                     '  CASE WHEN T.BUDGET_AMT > 0 THEN  ISNULL((T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/CAST(T.BUDGET_AMT AS DECIMAL(16,6))*100) ELSE 0 END AS BUDGET_SALES_RATE, '+
					                     '  CASE WHEN T.BUDGET_PSD > 0 THEN  ISNULL((CASE WHEN T.UPLOAD_STNUM > 0 THEN  (T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/T.UPLOAD_STNUM ELSE 0 END)/(T.BUDGET_PSD)*100) ELSE 0 END AS BUDGET_SALES_PSD_RATE, '+
					                     '  (CASE WHEN T.UPLOAD_STNUM > 0 THEN ISNULL((T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/CAST(T.UPLOAD_STNUM AS DECIMAL(18,8))) ELSE 0 END)-ISNULL(T.BUDGET_PSD) AS PSD_DIFF, '+
					                     '  CASE WHEN (TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT) = 0 THEN 0 ELSE ISNULL((CAST(T.SALES_AMT AS DECIMAL(16,6))-T.DIS_AMT-T.SUB_AMT)/(TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)*100) END AS LSALES_RATE, '+
					                     '  CASE WHEN (TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)  = 0 OR T.UPLOAD_STNUM=0 OR TL.UPLOAD_STNUM=0 THEN 0 ELSE ISNULL(((T.SALES_AMT-T.DIS_AMT-T.SUB_AMT)/(CAST(T.UPLOAD_STNUM AS DECIMAL(16,6))))/((TL.SALES_AMT-TL.DIS_AMT-TL.SUB_AMT)/(CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6))))*100) END AS L_YEAR_PSD_DIFF '+			 
                                         ', CASE WHEN TL.SALES_CNT = 0 OR T.UPLOAD_STNUM=0 OR TL.UPLOAD_STNUM=0 THEN 0 ELSE ISNULL((CAST(T.SALES_CNT AS DECIMAL(16,6))/CAST(T.UPLOAD_STNUM AS DECIMAL(16,6)))/(TL.SALES_CNT/CAST(TL.UPLOAD_STNUM AS DECIMAL(16,6)))*100) END AS LSALES_CNT_RATE '  +  
									     ', CASE WHEN T.UPLOAD_STNUM > 0 THEN  ISNULL((T.SALES_CNT)/CAST(T.UPLOAD_STNUM AS DECIMAL(16,6))) ELSE 0 END AS REAL_SALES_CNT ' 
									  + '  FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '  
									  + '  LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  A1.PRD_ID_1=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +')   AND T.PRD_ID  IN('+ P_PRD_ID +') '
									  + '  LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '
				                         '  INNER JOIN (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID '+ 	
                                         '  LEFT JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '+  
									     '  WHERE A1.FLAG = ''2'' AND T.TIME_ID IS NOT NULL ' +  V_WHERE1 +
										 ' AND P.KND_NO = '''+P_KND+''''
										 '    ';	
         SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC  AS('+
			          ' SELECT T.TIME_ID,CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_N, '+
					  ' P.RESPON_NM AS PRD_NM,  ' +  
					  ' ''1'' AS FLAG, '+	
					  ' P.RESPON_NO AS ORG_ID , P.BRANCH_ID AS U_DEPT_ID  ' 		
					+' ,  ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
					+' ,  ISNULL(A2.REAL_SALES_AMT_M_PSD) AS  REAL_SALES_AMT_M_PSD , ISNULL(A2.REAL_SALES_CNT_M_PSD) AS REAL_SALES_CNT_M_PSD ,  '  
			          ' '+V_SELECT+' '
					+'FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
					+'LEFT JOIN  #VT_WDWH_4_1_FUNC_2  AS  A2 ON A1.PRD_ID_1=A2.PRD_ID_2 '
					+'INNER JOIN (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON A1.PRD_ID_1  = B.RESPON_ID   '
					+'LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID  AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
					+'LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '							 
					  ' LEFT JOIN (SELECT DISTINCT RESPON_ID,RESPON_NM,BRANCH_ID, RESPON_NO FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1 ) AS P ON P.RESPON_ID=B.RESPON_ID '+  
					  ' WHERE A1.FLAG = ''1'' AND T.TIME_ID IS NOT NULL '+	  V_WHERE1 +       
					  ' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' +
					  ' ' + SQLSTR_UNION +  ' '
					  ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';         
         WHEN '3' THEN 
		   IF V_D_FLAG = 'F'  THEN
			SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
				 					  + ' ( '
				 					  + '  	SELECT ''2'' AS FLAG, CAST(P.KND_ID AS VARCHAR(20)) AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
				 					  + ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
				 					  + ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = '+ V_C_DATE  
				 					  + ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
				 					  + ' 		WHERE B.RESPON_ID = '+P_DEPT_ID 
				 					  + ' 	    GROUP BY FLAG,PRD_ID_1	 '
				 					  + ' 		UNION '
				 					  + '  	SELECT  ''1'' AS FLAG, CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
				 					  + ' 		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
				 					  + ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = '+ V_C_DATE  
				 					  + ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
				 					  + ' 		WHERE B.RESPON_ID = '+P_DEPT_ID 
				 					  + ' 	    GROUP BY FLAG,PRD_ID_1	 '					  
				 					  + '  ) WITH DATA PRIMARY INDEX(PRD_ID_1) ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;											  
		   ELSE
			SET SQLSTR =' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
									  + ' ( '
									  + ' 		SELECT  ''2'' AS FLAG, CAST(P.KND_ID AS VARCHAR(20)) AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
									  + '		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
                					  + '      LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
									  + '		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
									  + '		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	'
									  + '		WHERE B.RESPON_ID =  '+P_DEPT_ID 
									  + '		AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')  '
									  + '	    GROUP BY FLAG,PRD_ID_1,S.STORE_NUM	'	
									  + '		UNION '
									  + ' 		SELECT  ''1'' AS FLAG, CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
									  + '		FROM  (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
                					  + '      LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
									  + '		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
									  + '		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	'
									  + '		WHERE B.RESPON_ID =  '+P_DEPT_ID 
									  + '		AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')   '
									  + '		GROUP BY FLAG,PRD_ID_1,S.STORE_NUM	 '							
									  + ' ) WITH DATA PRIMARY CHARINDEX( '
										+',PRD_ID_1) ON COMMIT PRESERVE ROWS;	';	 
				EXECUTE IMMEDIATE SQLSTR;			   
		   END IF;	
			   SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_2 AS ( '
			 							+'	 SELECT  B.RESPON_ID AS PRD_ID_2	 CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_AMT-DIS_AMT-SUB_AMT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_M_PSD, '
										+'	 CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_CNT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT_M_PSD '
										+'	 FROM PMART.BASIC_MFACT_BUDGET T '
										+'	 INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
										+'	 INNER JOIN (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID				 '
										+'	 WHERE T.TIME_ID = CAST(CAST('''+P_L_DAY_ID+''' AS VARCHAR(6))  AS INTEGER) '
										+'	 AND B.RESPON_ID =  '+P_DEPT_ID 
										+'  GROUP BY PRD_ID_2 '
			 							+'  ) WITH DATA PRIMARY INDEX(PRD_ID_2) ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;
		 SET SQLSTR_UNION = ' UNION ' +
						    ' SELECT T.TIME_ID,P.KND_ID AS PRD_ID_N, '+
							'    P1.KND_NAME AS PRD_NM,  ' +  
							'    ''2'' AS FLAG, '+	
							'    P1.KND_NO AS ORG_ID , P.RESPON_ID AS U_DEPT_ID ' 	
						 + ' ,  ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + ' ,  0 AS REAL_SALES_AMT_M_PSD  , 0 AS REAL_SALES_CNT_M_PSD,  '  
						    ' '+V_SELECT+' '				 
						 + ' FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + ' LEFT JOIN (SELECT DISTINCT RESPON_ID, KND_ID, GRP_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO = 1) AS P ON P.KND_ID=A1.PRD_ID_1  '  
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON P.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET TL ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID AND T.PRD_ID = TL.PRD_ID ' 
							' LEFT JOIN PMART.PRD_KND AS P1 ON P.KND_ID=P1.KND_ID  '+  
						    ' WHERE  T.TIME_ID IS NOT NULL '+  V_WHERE1	+
							' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' ;
         SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC  AS('+
			                ' SELECT T.TIME_ID,CAST(B.RESPON_ID AS VARCHAR(20)) AS PRD_ID_N, '+
							'    P.RESPON_NM AS PRD_NM,  ' +  
							'    ''1'' AS FLAG, '+	
							'    P.RESPON_NO AS ORG_ID ,  P.BRANCH_ID AS U_DEPT_ID ' 			
						 + ' ,  ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + ' ,  ISNULL(A2.REAL_SALES_AMT_M_PSD) AS  REAL_SALES_AMT_M_PSD , ISNULL(A2.REAL_SALES_CNT_M_PSD) AS REAL_SALES_CNT_M_PSD ,  '  
			                ' '+V_SELECT+' '								 
						 + ' FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + ' LEFT JOIN  #VT_WDWH_4_1_FUNC_2  AS  A2 ON A1.PRD_ID_1=A2.PRD_ID_2 '
						 + ' INNER JOIN (SELECT DISTINCT RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON A1.PRD_ID_1  = B.RESPON_ID   '
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '				
							' LEFT JOIN (SELECT DISTINCT RESPON_ID,RESPON_NM,BRANCH_ID, RESPON_NO FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1 ) AS P ON P.RESPON_ID=B.RESPON_ID '+  
			                ' WHERE  T.TIME_ID IS NOT NULL '+    V_WHERE1 +         
							' AND A1.FLAG = ''1'' ' +
							' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' +
							' ' + SQLSTR_UNION +  ' '
					        ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';         
         WHEN '2' THEN 
		   IF V_D_FLAG = 'F'  THEN
			    SET SQLSTR= ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
										+  ' ( '
										+  '  	  SELECT  ''2'' AS FLAG, B.RESPON_ID AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										+  ' 		FROM  (SELECT DISTINCT BRANCH_ID,RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
										+  ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID  =  ' + V_C_DATE  
										+  ' 		WHERE B.BRANCH_ID = '+P_DEPT_ID 
										+  ' 	    GROUP BY FLAG,PRD_ID_1	 '
										+  ' 		UNION  '
										+  '  		SELECT  ''1'' AS FLAG, B.BRANCH_ID AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										+  ' 		FROM  (SELECT DISTINCT BRANCH_ID,RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
										+  ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE  
										+  ' 		WHERE B.BRANCH_ID = '+P_DEPT_ID 
										+  ' 	     GROUP BY FLAG,PRD_ID_1	 '				 
										+  '  ) WITH DATA PRIMARY INDEX(PRD_ID_1) ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;													
		   ELSE
		   		LOCKING TABLE PDATA.TRANS_PRODUCT_DETAIL FOR ACCESS;
				 SET SQLSTR= 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
										+   ' ( '
										+   ' 		SELECT  ''2'' AS FLAG, B.RESPON_ID AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
										+   ' 		FROM  (SELECT DISTINCT BRANCH_ID,RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
                						+   '      LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
										+   ' 		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
										+   ' 		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	'
										+   ' 		WHERE B.BRANCH_ID = '+P_DEPT_ID  + '   AND  P.PRD_ID IS NOT NULL '
										+   ' 		AND Z.FG_SALETYPE NOT IN (''S0'',''S1'') '
										+   ' 	    GROUP BY FLAG,PRD_ID_1,S.STORE_NUM	'	 
										+   ' 		UNION '
										+   ' 		SELECT  ''1'' AS FLAG, B.BRANCH_ID AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT  '
										+   ' 		FROM  (SELECT DISTINCT BRANCH_ID,RESPON_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
                						+   '      LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
										+   ' 		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE '
										+   '      AND Z.TX_DTTM  BETWEEN  TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 00:00:00''  AND TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 23:59:59''   '
										+   ' 		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1  '
										+   ' 		WHERE B.BRANCH_ID = '+P_DEPT_ID 
										+   ' 		AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')  '
										+   ' 		GROUP BY FLAG,PRD_ID_1,S.STORE_NUM	'	 						
										+   ' ) WITH DATA PRIMARY CHARINDEX( '
								  	+   ',PRD_ID_1) ON COMMIT PRESERVE ROWS;  ' ;
				EXECUTE IMMEDIATE SQLSTR;										
		   END IF;		   
			 SET SQLSTR= 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_2 AS ( '
			 					  	+   '  		SELECT  B.BRANCH_ID AS PRD_ID_2  		        CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN ISNULL(SUM(SALES_AMT-DIS_AMT-SUB_AMT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_M_PSD,  '
								  	+   '  				CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN ISNULL(SUM(SALES_CNT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT_M_PSD  '
								  	+   '  		FROM PMART.BASIC_MFACT_BUDGET T   '
								  	+   '  		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID  '
								  	+   '  		INNER JOIN (SELECT DISTINCT BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID	 '		 	
								  	+   '  		WHERE T.TIME_ID = CAST(CAST('''+P_L_DAY_ID+''' AS VARCHAR(6))  AS INTEGER)  '
								  	+   '  		AND B.BRANCH_ID =  '+P_DEPT_ID 
								  	+   '  	    GROUP BY PRD_ID_2  '
			 					  	+   '  ) WITH DATA PRIMARY INDEX(PRD_ID_2) ON COMMIT PRESERVE ROWS;  ';
				EXECUTE IMMEDIATE SQLSTR;										
		 SET SQLSTR_UNION = ' UNION ' +
					        ' SELECT T.TIME_ID,B.RESPON_ID AS PRD_ID_N, '+
							'    P.RESPON_NM AS PRD_NM,  ' +  
							'    ''2'' AS FLAG, '+	
							'    P.RESPON_NO AS ORG_ID , P.BRANCH_ID AS U_DEPT_ID ' 
						 + '  , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + '  , 0 AS REAL_SALES_AMT_M_PSD  , 0 AS REAL_SALES_CNT_M_PSD,  '  
					        ' '+V_SELECT+' '		 
						 + ' FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + ' LEFT JOIN (SELECT DISTINCT RESPON_ID, GRP_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO = 1) AS B ON B.RESPON_ID=A1.PRD_ID_1  '  
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '
						    ' LEFT JOIN (SELECT DISTINCT RESPON_ID,RESPON_NM,BRANCH_ID, RESPON_NO FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1 ) AS P ON P.RESPON_ID=B.RESPON_ID '+  
					        ' WHERE  T.TIME_ID IS NOT NULL '+ V_WHERE1 +
							' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID ,NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' ;
		SET SQLSTR =  ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC  AS('+
				      '   SELECT T.TIME_ID,B.BRANCH_ID AS PRD_ID_N, '+
					  '      P.BRANCH_NM AS PRD_NM,  ' +  
					  '      ''1'' AS FLAG, '+	
					  '      P.BRANCH_NO AS ORG_ID , P.DEPT_ID AS U_DEPT_ID ' 
				   + ' , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
				   + ' , ISNULL(A2.REAL_SALES_AMT_M_PSD) AS REAL_SALES_AMT_M_PSD , ISNULL(A2.REAL_SALES_CNT_M_PSD) AS REAL_SALES_CNT_M_PSD ,  '  
				      ' '+V_SELECT+' '				 
				   + '   FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
				   + '   LEFT JOIN  #VT_WDWH_4_1_FUNC_2  AS  A2 ON A1.PRD_ID_1=A2.PRD_ID_2 '
				   + '   INNER JOIN (SELECT DISTINCT BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON A1.PRD_ID_1  = B.BRANCH_ID   '
				   + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
				   + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '				
				      '   LEFT JOIN (SELECT DISTINCT BRANCH_ID,BRANCH_NM,DEPT_ID, BRANCH_NO FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1) AS P ON P.BRANCH_ID=B.BRANCH_ID  '+  
				      '   WHERE  T.TIME_ID IS NOT NULL '+  V_WHERE1 + 
					  '   AND A1.FLAG = ''1'' ' +
					  '   GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' +
					  ' ' + SQLSTR_UNION +  ' '
				      ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';         
         WHEN '1' THEN 
		   IF V_D_FLAG = 'F'  THEN
			    SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS  '
										+   '  (  '
										+   '   	  SELECT  ''2'' AS FLAG, B.BRANCH_ID AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										+   '  		FROM  (SELECT DISTINCT DEPT_ID,BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
										+   '  		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE  
										+   '  		WHERE B.DEPT_ID = '+P_DEPT_ID 
										+   '  	    GROUP BY FLAG,PRD_ID_1	 '
										+   '  		UNION  '
										+   '   		SELECT  ''1'' AS FLAG, B.DEPT_ID AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										+   '  		FROM  (SELECT DISTINCT DEPT_ID,BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
										+   '  		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE  
										+   '  		WHERE B.DEPT_ID = '+P_DEPT_ID 
										+   '  	     GROUP BY FLAG,PRD_ID_1		 '				 
										+   '   ) WITH DATA PRIMARY INDEX(PRD_ID_1) ON COMMIT PRESERVE ROWS;  ';
				EXECUTE IMMEDIATE SQLSTR;											
		   ELSE
		   		  LOCKING TABLE PDATA.TRANS_PRODUCT_DETAIL FOR ACCESS;
				 SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS  '
				 						+    '  (  '
				 						+    '  		SELECT  ''2'' AS FLAG, B.BRANCH_ID AS PRD_ID_1, ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
										+    '  		FROM  (SELECT DISTINCT DEPT_ID,BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
                 						+    '         LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID   '
										+    '  		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE '
										+    '			AND Z.TX_DTTM  BETWEEN  TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 00:00:00''  AND TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 23:59:59''  '
										+    '  		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1  '
										+    '  		WHERE B.DEPT_ID =  '+P_DEPT_ID +'  AND  P.PRD_ID IS NOT NULL '
										+    '  		  AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')  '
										+    '  	    GROUP BY FLAG,PRD_ID_1,S.STORE_NUM		 '
										+    '  		UNION  '
				 						+    '  		SELECT  ''1'' AS FLAG, B.DEPT_ID AS PRD_ID_1,  ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
										+    '  		FROM  (SELECT DISTINCT DEPT_ID,BRANCH_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  '
                 						+    '         LEFT JOIN PMART.PRD_DIM P ON P.GRP_ID = B.GRP_ID  '
										+    '  		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.PRD_ID = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
										+    '  		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	 '
										+    '  		WHERE B.DEPT_ID =  '+P_DEPT_ID 
										+    '  		  AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')  '
										+    '  		GROUP BY FLAG,PRD_ID_1	,S.STORE_NUM	'						
				 						+    '  ) WITH DATA PRIMARY CHARINDEX(  '
									+    ',PRD_ID_1) ON COMMIT PRESERVE ROWS;	';
				EXECUTE IMMEDIATE SQLSTR;											
		   END IF;		   
			 SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_2 AS ( '
			 						+    ' 		SELECT  B.DEPT_ID AS PRD_ID_2 		        CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_AMT-DIS_AMT-SUB_AMT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_M_PSD,  '
									+    ' 				CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN  ISNULL(SUM(SALES_CNT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT_M_PSD  '
									+    ' 		FROM PMART.BASIC_MFACT_BUDGET T  '
									+    ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID  '
									+    ' 		INNER JOIN (SELECT DISTINCT DEPT_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID		'		
									+    ' 		WHERE T.TIME_ID = CAST(CAST('''+P_L_DAY_ID+''' AS VARCHAR(6)) AS INTEGER) '
									+    ' 		  AND B.DEPT_ID =  '+P_DEPT_ID 
									+    ' 	    GROUP BY PRD_ID_2  '
			 						+    ' ) WITH DATA PRIMARY INDEX(PRD_ID_2)  ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;											
		 SET SQLSTR_UNION = ' UNION ' +
					        ' SELECT T.TIME_ID,B.BRANCH_ID AS PRD_ID_N, '+
							'    P.BRANCH_NM AS PRD_NM,  ' +  
							'    ''2'' AS FLAG, '+	
							'    P.BRANCH_NO AS ORG_ID, P.DEPT_ID AS U_DEPT_ID ' 
						 + '  , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + '  , 0 AS REAL_SALES_AMT_M_PSD  , 0 AS REAL_SALES_CNT_M_PSD,  '  
					        ' '+V_SELECT+' '
						 + ' FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + ' LEFT JOIN (SELECT DISTINCT BRANCH_ID, GRP_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO = 1) AS B ON B.BRANCH_ID=A1.PRD_ID_1  '  
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '									 
						    ' LEFT JOIN (SELECT DISTINCT BRANCH_ID,BRANCH_NM,DEPT_ID, BRANCH_NO FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1) AS P ON P.BRANCH_ID=B.BRANCH_ID  '+  
					        ' WHERE  T.TIME_ID IS NOT NULL '+  V_WHERE1 +
							' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' ;
         SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC  AS('+
				                     ' SELECT T.TIME_ID, B.DEPT_ID AS PRD_ID_N, '+
									 '    P.DEPT_NM AS PRD_NM,  ' +  
									 '    ''1'' AS FLAG, '+	
									 '    P.DEPT_NO AS ORG_ID , P.TOT_ID AS U_DEPT_ID ' 
								  + '  , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
								  + '  , ISNULL(A2.REAL_SALES_AMT_M_PSD) AS  REAL_SALES_AMT_M_PSD , ISNULL(A2.REAL_SALES_CNT_M_PSD) AS REAL_SALES_CNT_M_PSD ,  '  
				                     ' '+V_SELECT+' '
								 + '   FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
								 + '   LEFT JOIN  #VT_WDWH_4_1_FUNC_2  AS  A2 ON A1.PRD_ID_1=A2.PRD_ID_2 '
								 + '  INNER JOIN (SELECT DISTINCT DEPT_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON A1.PRD_ID_1  = B.DEPT_ID   '
								 + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
								 + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '				
								     '   LEFT JOIN (SELECT DISTINCT DEPT_ID,DEPT_NO,DEPT_NM, TOT_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1) AS P ON P.DEPT_ID=B.DEPT_ID '+  
				                     '  WHERE T.TIME_ID IS NOT NULL  '+  V_WHERE1 +          
									 '   AND A1.FLAG = ''1'' ' +
									'  GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID, U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' +
									' ' + SQLSTR_UNION +  ' '
				                ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
	  WHEN '0' THEN 
		   IF V_D_FLAG = 'F'  THEN
			    SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
										 +  ' ( '
										 +  '  	SELECT  ''2'' AS FLAG, B.DEPT_ID AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										 +  ' 		FROM  (SELECT DISTINCT DEPT_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
										 +  ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' + V_C_DATE  
										 +  ' 	    GROUP BY FLAG,PRD_ID_1	 '
										 +  ' 		UNION '
										 +  '  	SELECT  ''1'' AS FLAG, -999999999 AS PRD_ID_1, ISNULL(SUM(T.SALES_AMT)) AS NOW_SALES_AMT, ISNULL(SUM(T.SALES_CNT)) AS NOW_SALES_CNT '
										 +  ' 		FROM  (SELECT DISTINCT GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
										 +  ' 		LEFT JOIN  PMART.BASIC_MFACT_BUDGET T ON T.PRD_ID  = B.GRP_ID AND T.TIME_ID = ' +V_C_DATE   
										 +  ' 	     GROUP BY FLAG,PRD_ID_1	 '					 
										 +  '  ) WITH DATA PRIMARY INDEX(PRD_ID_1) ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;											 
		   ELSE
		   		LOCKING TABLE PDATA.TRANS_PRODUCT_DETAIL FOR ACCESS;
				 SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_1 AS '
				 						+  '(  '
				 						+  '		SELECT  ''2'' AS FLAG, B.DEPT_ID AS PRD_ID_1, ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
										+  '		FROM  (SELECT DISTINCT DEPT_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
										+  '		LEFT JOIN  PMART.PRD_PRD  P ON P.GRP_ID = B.GRP_ID '
										+  '		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL  Z ON P.FM_CODE = Z.CD_FMCODE AND CAST(Z.TX_DTTM AS DATE) = CURRENT_DATE '
										+  '		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	'
										+  '		WHERE  P.FM_CODE IS NOT NULL'
										+  '		  AND Z.FG_SALETYPE NOT IN (''S0'',''S1'')   '
										+  '	    GROUP BY FLAG,PRD_ID_1,S.STORE_NUM	 '	
										+  '		UNION '
				 						+  '		SELECT  ''1'' AS FLAG, -999999999 AS PRD_ID_1, ISNULL(CAST(SUM((Z.AM_ITEM-Z.AM_DIS_SUB-Z.AM_SUB_SUB)*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_AMT, ISNULL(CAST(SUM(Z.QT_ITEM*DWH_FG)AS DECIMAL(16,6))/S.STORE_NUM) AS NOW_SALES_CNT '
										+  '		FROM  (SELECT DISTINCT GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B '
										+  '		LEFT JOIN  PMART.PRD_PRD  P ON P.GRP_ID = B.GRP_ID  '
										+  '		LEFT JOIN  PDATA.TRANS_PRODUCT_DETAIL Z ON P.FM_CODE = Z.CD_FMCODE  '
										+  '       AND Z.TX_DTTM  BETWEEN  TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 00:00:00''  AND TO_CHAR(CURRENT_DATE,''YYYY-MM-DD'')+'' 23:59:59'' '
										+  '		LEFT JOIN #VT_WDWH_4_1_FUNC_3 AS S ON 1=1	 '
										+  '		WHERE Z.FG_SALETYPE NOT IN (''S0'',''S1'')   '
										+  '		GROUP BY FLAG,PRD_ID_1	,S.STORE_NUM	 '	
				 						+  ') WITH DATA PRIMARY CHARINDEX( '
									+    ',PRD_ID_1) ON COMMIT PRESERVE ROWS;	 ';
				EXECUTE IMMEDIATE SQLSTR;											
		   END IF;		   
			 SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC_2 AS ( '
									+    '  		SELECT  -999999999 AS PRD_ID_2 		CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN ISNULL(SUM(SALES_AMT-DIS_AMT-SUB_AMT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_AMT_M_PSD, '
									+    ' 		CASE WHEN MAX(UPLOAD_STNUM) > 0 THEN ISNULL(SUM(SALES_CNT)/MAX(CAST(UPLOAD_STNUM AS DECIMAL(16,6)))) ELSE 0 END AS REAL_SALES_CNT_M_PSD '
									+    ' 		FROM PMART.BASIC_MFACT_BUDGET T '
									+    ' 		INNER JOIN PMART.PRD_GRP AS P ON P.GRP_ID=T.PRD_ID '
									+    ' 		INNER JOIN (SELECT DISTINCT GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON T.PRD_ID  = B.GRP_ID	 '
									+    ' 		WHERE T.TIME_ID = CAST(CAST('''+P_L_DAY_ID+''' AS VARCHAR(6))  AS INTEGER) '
									+    ' 	    GROUP BY PRD_ID_2 '
									+    '  ) WITH DATA PRIMARY INDEX(PRD_ID_2) ON COMMIT PRESERVE ROWS; ';
				EXECUTE IMMEDIATE SQLSTR;											
		 SET SQLSTR_UNION = ' UNION ' +
					        ' SELECT T.TIME_ID,B.DEPT_ID AS PRD_ID_N, '+
							'    P.DEPT_NM AS PRD_NM,  ' +  
							'    ''2'' AS FLAG, '+	
							'  P.DEPT_NO AS ORG_ID , P.TOT_ID AS U_DEPT_ID  ' 
						 + ' ,  ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + ' ,  0 AS REAL_SALES_AMT_M_PSD  , 0 AS REAL_SALES_CNT_M_PSD,  '  
					        ' '+V_SELECT+' '		 
						 + '   FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + '   LEFT JOIN (SELECT DISTINCT DEPT_ID, GRP_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO = 1) AS B ON B.DEPT_ID=A1.PRD_ID_1  '  
						 + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET T ON  B.GRP_ID=T.PRD_ID AND  T.TIME_ID IN('+ V_C_DATE +') AND T.PRD_ID  IN('+ P_PRD_ID +') '
						 + '   LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '									 
						    '   LEFT JOIN (SELECT DISTINCT DEPT_ID,DEPT_NO,DEPT_NM,TOT_ID  FROM PMART.ORG_DIM_POSI1 AS P WHERE SEQNO=1) AS P ON P.DEPT_ID=B.DEPT_ID ';  
		SET SQLSTR_UNION = SQLSTR_UNION + ' WHERE  T.TIME_ID IS NOT NULL ' ;
		SET SQLSTR_UNION = SQLSTR_UNION + ' GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID,U_DEPT_ID, NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' ;
         SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_WDWH_4_1_FUNC  AS('
				         +   ' SELECT T.TIME_ID, -999999999 AS PRD_ID_N,  ' 
						 +	'   ''000000000'' AS PRD_NM,  '  
						 +	'   ''1'' AS FLAG , '
						 +	'   ''0000''  AS ORG_ID ,  B.TOT_ID AS U_DEPT_ID   ' 
						 + '   , ISNULL(A1.NOW_SALES_AMT) AS NOW_SALES_AMT , ISNULL(A1.NOW_SALES_CNT) AS NOW_SALES_CNT '  
						 + '   , ISNULL(A2.REAL_SALES_AMT_M_PSD) AS  REAL_SALES_AMT_M_PSD , ISNULL(A2.REAL_SALES_CNT_M_PSD) AS REAL_SALES_CNT_M_PSD ,  '  
				         + V_SELECT
						 + ' FROM #VT_WDWH_4_1_FUNC_1  AS  A1 '
						 + ' LEFT JOIN  #VT_WDWH_4_1_FUNC_2  AS  A2 ON A1.PRD_ID_1=A2.PRD_ID_2 '
						 + ' INNER JOIN (SELECT DISTINCT -999999999 AS TOT_ID,GRP_ID FROM PMART.ORG_DIM_POSI1 WHERE SEQNO=1 ) B  ON A1.PRD_ID_1  = B.TOT_ID   '
						 + ' LEFT JOIN (SELECT * FROM PMART.BASIC_MFACT_BUDGET WHERE TIME_ID IN('+ V_C_DATE +') AND  PRD_ID  IN('+ P_PRD_ID +') )  T ON  B.GRP_ID=T.PRD_ID AND  T.TIME_ID IN('+ V_C_DATE +') AND  T.PRD_ID  IN('+ P_PRD_ID +') '								 
						 + ' LEFT JOIN PMART.BASIC_MFACT_BUDGET TL   ON T.TIME_ID - '+ LDAY +' = TL.TIME_ID   AND T.PRD_ID = TL.PRD_ID '													 
				            ' WHERE    A1.FLAG = ''1'' ' ;
		 SET SQLSTR = SQLSTR +  ' AND T.TIME_ID IS NOT NULL ' ;							 
		 SET SQLSTR = SQLSTR +	 '  GROUP BY T.TIME_ID ,PRD_ID_N, PRD_NM, FLAG , ORG_ID,U_DEPT_ID ,  NOW_SALES_AMT , NOW_SALES_CNT, REAL_SALES_AMT_M_PSD, REAL_SALES_CNT_M_PSD ' +
									' ' + SQLSTR_UNION +  ' ' 
		                ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
      ELSE
	SET SQLSTR ='';                
      END CASE ;      
   DELETE FROM PMART.T1 WHERE F1 = 0;
   INSERT INTO PMART.T1(F1,F2) SELECT 0,SQLSTR;	
	EXECUTE IMMEDIATE SQLSTR;
END SP;