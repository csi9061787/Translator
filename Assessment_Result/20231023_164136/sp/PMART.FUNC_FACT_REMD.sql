REPLACE PROCEDURE PMART.FUNC_FACT_REMD
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(500),
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(10),
   IN P_DISTRICTTYPE SMALLINT,
   IN P_DISTRICT VARCHAR(20),
   IN P_OPENYEAR SMALLINT,
   IN P_STORETYPE VARCHAR(1)
)
SP:BEGIN
     DECLARE SQLSTR  VARCHAR(10000);
	 DECLARE ORGSELECT VARCHAR(2000);
	 DECLARE ORGWHERE VARCHAR(2000);  
	 DECLARE V_GROUP VARCHAR(200);
	 DECLARE V_CAST_TYPE VARCHAR(50);
	 DECLARE V_YDIM_VAL VARCHAR(50);
	  SET V_YDIM_VAL ='-1';
      IF P_RPTID = 1  THEN
	       SET V_GROUP = 'TIME_ID, GROUP_ORG_ID';
		   IF P_ORGTYPE <> -1 THEN
		       SET V_YDIM_VAL = P_ORGID;
		   END IF;
      ELSEIF P_RPTID = 2  THEN
           SET V_GROUP = 'TIME_ID, OPEN_YEAR';
      ELSEIF P_RPTID = 3  THEN
	       IF P_DISTRICTTYPE = -1 THEN 
               SET V_GROUP = 'TIME_ID, SHOP_DISTTRICT';
		   ELSEIF P_DISTRICTTYPE = 1 OR P_DISTRICTTYPE = 2 THEN  
		       SET V_GROUP = 'TIME_ID, SEC_DISTRICT';
			   SET V_YDIM_VAL = P_DISTRICT;
		   END IF ;
      ELSEIF P_RPTID = 4  THEN
	       SET V_GROUP = 'TIME_ID, STORE_TYPE';
      END IF;   
   SET ORGWHERE = ' WHERE 1=1 ';
   IF P_ORGTYPE = 0 THEN
	    SET ORGSELECT = 'DEPT_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
		SET ORGWHERE = ORGWHERE + ' AND PDEPT_ID  = ' + TRIM(P_ORGID); 
   ELSEIF P_ORGTYPE = 1 THEN
	    SET ORGSELECT = 'BRANCH_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
		SET ORGWHERE = ORGWHERE + ' AND DEPT_ID  = ' + TRIM(P_ORGID); 
   ELSEIF P_ORGTYPE = 2 THEN
        SET ORGSELECT = 'RESPON_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
	    SET ORGWHERE = ORGWHERE + ' AND BRANCH_ID = ' + TRIM(P_ORGID);
   ELSEIF P_ORGTYPE = 3 THEN
        SET ORGSELECT = 'S.OSTORE_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
	    SET ORGWHERE = ORGWHERE + ' AND RESPON_ID = ' + P_ORGID;
   ELSEIF P_ORGTYPE = 4 THEN
        SET ORGSELECT = 'S.OSTORE_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
	    SET ORGWHERE = ORGWHERE + ' AND S.OSTORE_ID = ' + P_ORGID;
   ELSE
        SET ORGSELECT = 'PDEPT_ID AS GROUP_ORG_ID, S.OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT,STORE_TYPE,OST.OPEN_YEAR';
   END IF;   
  	  IF P_RPTID = 3  OR P_RPTID = 4 THEN
	      SET V_CAST_TYPE = 'CAST('''+ TRIM(V_YDIM_VAL) +'''  AS VARCHAR(9))';
	  ELSE
	      SET V_CAST_TYPE = 'CAST('''+ TRIM(V_YDIM_VAL) +'''  AS INTEGER )';
	  END IF;
   IF P_DISTRICTTYPE = 1 THEN
	 	SET ORGWHERE = ORGWHERE + ' AND SHOP_DISTTRICT_MAIN = '''  + P_DISTRICT + ''' ';		  
   ELSEIF P_DISTRICTTYPE = 2 THEN
	 	SET ORGWHERE = ORGWHERE + ' AND SEC_DISTRICT = '''  + P_DISTRICT + ''' ';
   END IF;	 
   IF P_OPENYEAR <> -1 THEN
       SET ORGWHERE = ORGWHERE + ' AND OPEN_YEAR =' + P_OPENYEAR;	  
   END IF;
   IF TRIM(P_STORETYPE) <> '' THEN
       SET ORGWHERE = ORGWHERE + ' AND STORE_TYPE =''' + TRIM(P_STORETYPE) + ''' ';	  
   END IF;
CALL PMART.P_DROP_TABLE ('#VT_FACT_REMD_TMP');
CALL PMART.P_DROP_TABLE ('#VT_FACT_REMD');
CALL PMART.P_DROP_TABLE ('#VT_REMD_FACT');
    SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_REMD_FACT AS('
              + '  SELECT '
              + '   T1.OSTORE_ID AS ORG_ID '
              + '  ,COALESCE(T1.L_DAY_ID,T2.L_MONTH_ID,COALESCE(T2.L_YEAR_ID,-1)) AS TIME_ID '
			  + '  ,SUM(CASE WHEN T1.CUST_NUM IS NULL  THEN 0 ELSE CAST(T1.CUST_NUM AS DECIMAL(12,0)) END ) AS TX_CNT  '
			  + '  ,SUM(CASE WHEN T1.AMT IS NULL  THEN 0 ELSE CAST(T1.AMT AS DECIMAL(12,0)) END ) AS TX_AMT  '
			  + '  ,SUM(CASE WHEN T1.PLAN_STNUM =1  THEN 1 ELSE 0 END ) AS REMD_DAY  '
              + '    FROM PMART.REMD_FACT T1 INNER JOIN PMART.TIME_D AS T2 '
              + '      ON T1.L_DAY_ID = T2.L_DAY_ID '
              + '   WHERE T1.L_DAY_ID < CAST(TO_CHAR(CURRENT_DATE ,''YYYYMMDD'')  AS INTEGER) ' 
              + 'GROUP BY T1.OSTORE_ID,ROLLUP(T2.L_YEAR_ID,T2.L_MONTH_ID,T1.L_DAY_ID) '
    	      + ' )  WITH DATA UNIQUE PRIMARY  CHARINDEX(TIME_ID , ORG_ID ) ON COMMIT PRESERVE ROWS;';	
    EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_REMD_TMP AS('		  
						 + ' SELECT ' + V_GROUP + ', '
						 + '               COUNT(T2.OSTORE_ID) AS STORE_CNT,'
						 + '               SUM(T1.TX_CNT) AS TX_CNT,'
						 + '               SUM(T1.TX_AMT) AS TX_AMT, '
						 + '				ROUND((CAST(SUM(T1.TX_AMT) AS DECIMAL(16,2)) /  CASE WHEN SUM(T1.TX_CNT)=0 THEN 1 ELSE SUM(T1.TX_CNT)END   ),2) AS CUST_PRICE, '
						 + '               SUM(T1.REMD_DAY) AS REMD_DAY,'
						 + '               ROUND(SUM(T1.TX_CNT) /CASE WHEN SUM(T1.REMD_DAY)=0 THEN 1 ELSE SUM(T1.REMD_DAY) END,0) AS TX_CNT_AVG,'
						 + '               ROUND(SUM(T1.TX_AMT) /CASE WHEN SUM(T1.REMD_DAY)=0 THEN 1 ELSE SUM(T1.REMD_DAY) END,0) AS TX_AMT_AVG' 		
						 + '	    FROM #VT_REMD_FACT T1 '
						 + '		JOIN ( '
						 + '			SELECT ' + TRIM(ORGSELECT)
						 + '			    FROM PMART.LAST_ORG_STORE S ' 		 
						 + '                       LEFT JOIN  ( SELECT CAST(OSTORE_NO AS INTEGER) AS OSTORE_ID, (CAST(TO_CHAR(OPEN_DATE,''YYYY'') AS INTEGER) - 1911) AS OPEN_YEAR '
                         + '                                                FROM PDATA.PBMSTOR WHERE STORE_NO = OSTORE_NO) AS OST ON S.OSTORE_ID = OST.OSTORE_ID '				 
						 + '			' + TRIM(ORGWHERE)
						 + '		) T2 ON T1.ORG_ID = T2.OSTORE_ID '
						 + '		WHERE T1.TIME_ID IN ('+P_TIMEID+')' 									 
						 + '		 GROUP BY ' + V_GROUP			
			             + ' UNION ALL '
						 + ' SELECT -1 ' + V_GROUP + ', '
						 + '               COUNT(T2.OSTORE_ID) AS STORE_CNT,'
						 + '               SUM(T1.TX_CNT) AS TX_CNT,'
						 + '               SUM(T1.TX_AMT) AS TX_AMT, '
						 + '				ROUND((CAST(SUM(T1.TX_AMT) AS DECIMAL(16,2)) / CASE WHEN SUM(T1.TX_CNT)=0 THEN 1 ELSE SUM(T1.TX_CNT)  END  ),2) AS CUST_PRICE, '
						 + '               SUM(T1.REMD_DAY)  AS REMD_DAY,'
						 + '               ROUND(SUM(T1.TX_CNT) /CASE WHEN SUM(T1.REMD_DAY)=0 THEN 1 ELSE SUM(T1.REMD_DAY) END,0) AS TX_CNT_AVG,'
						 + '               ROUND(SUM(T1.TX_AMT) /CASE WHEN SUM(T1.REMD_DAY)=0 THEN 1 ELSE SUM(T1.REMD_DAY) END,0) AS TX_AMT_AVG' 		
						 + '	    FROM #VT_REMD_FACT T1 '
						 + '		JOIN ( '
						 + '			SELECT ' + TRIM(ORGSELECT)
						 + '			    FROM PMART.LAST_ORG_STORE  S '
						 + '                       LEFT JOIN  ( SELECT CAST(OSTORE_NO AS INTEGER) AS OSTORE_ID, (CAST(TO_CHAR(OPEN_DATE,''YYYY'') AS INTEGER) - 1911) AS OPEN_YEAR '
                         + '                                                FROM PDATA.PBMSTOR WHERE STORE_NO = OSTORE_NO) AS OST ON S.OSTORE_ID = OST.OSTORE_ID '		
						 + '			' + TRIM(ORGWHERE)
						 + '		) T2 ON T1.ORG_ID = T2.OSTORE_ID '
						 + '		WHERE T1.TIME_ID IN ('+P_TIMEID+')'
						 + '		 GROUP BY ' + Replace(V_GROUP,'TIME_ID,','')
			             + ' ) WITH DATA PRIMARY INDEX('+ V_GROUP +') ON COMMIT PRESERVE ROWS;';						  					
        EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_REMD AS('
                      +' SELECT 1 DATA_TYPE, CAST(-1 AS INTEGER)  AS TIME_ID,' + V_CAST_TYPE + ' AS  Y_DIM '
                      +'                ,SUM(STORE_CNT) AS STORE_CNT'
					  +'                ,SUM(TX_CNT)  AS TX_CNT'
					  +'                ,SUM(TX_AMT)  AS TX_AMT'					  
					  +'                ,ROUND((CAST(SUM(TX_AMT) AS DECIMAL(16,3)) /  CASE WHEN SUM(TX_CNT)=0 THEN 1 ELSE SUM(TX_CNT) END   ),2) AS CUST_PRICE '
                      +'                ,SUM(REMD_DAY)  AS REMD_DAY'
					  +'                ,ROUND(SUM(TX_CNT) / CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_CNT_AVG'
					  +'                ,ROUND(SUM(TX_AMT) / CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_AMT_AVG '
                      +'    FROM #VT_FACT_REMD_TMP A '
                      +' WHERE TIME_ID = -1 '
                      +' UNION ALL '
                      +' SELECT 2 DATA_TYPE, CAST(TIME_ID AS INTEGER) AS TIME_ID,' + V_CAST_TYPE + ' AS   Y_DIM '
                      +'                 ,SUM(STORE_CNT) AS STORE_CNT'
					  +'                 ,SUM(TX_CNT)  AS TX_CNT'
					  +'                 ,SUM(TX_AMT)  AS TX_AMT'					  
					  +'                 ,ROUND((CAST(SUM(TX_AMT) AS DECIMAL(16,3)) /  CASE WHEN SUM(TX_CNT)=0 THEN 1 ELSE SUM(TX_CNT) END   ),2) AS CUST_PRICE '
                      +'                 ,SUM(REMD_DAY)  AS REMD_DAY'
					  +'                 ,ROUND(SUM(TX_CNT) /COUNT(DISTINCT TIME_ID) / CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_CNT_AVG'
					  +'                 ,ROUND(SUM(TX_AMT) /COUNT(DISTINCT TIME_ID)/ CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_AMT_AVG '
                      +'      FROM #VT_FACT_REMD_TMP '
                      +'  WHERE TIME_ID <> -1 '
                      +' GROUP BY TIME_ID '
                      +' UNION ALL '
                      +'   SELECT 3 DATA_TYPE, CAST(-1 AS INTEGER)  AS TIME_ID, '+ Replace(V_GROUP,'TIME_ID,','') + ' AS  Y_DIM '
                      +'                  ,SUM(STORE_CNT) AS STORE_CNT'
					  +'                  ,SUM(TX_CNT)  AS TX_CNT'
					  +'                  ,SUM(TX_AMT)  AS TX_AMT'					  
					  +'                  ,ROUND((CAST(SUM(TX_AMT) AS DECIMAL(16,3)) / CASE WHEN SUM(TX_CNT)=0 THEN 1 ELSE SUM(TX_CNT) END  ),2) AS CUST_PRICE '
                      +'                  ,SUM(REMD_DAY) AS REMD_DAY'
					  +'                  ,ROUND(SUM(TX_CNT)/CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_CNT_AVG'
					  +'                  ,ROUND(SUM(TX_AMT)/CASE WHEN SUM(REMD_DAY)=0 THEN 1 ELSE SUM(REMD_DAY) END,0) AS TX_AMT_AVG '
                      +'     FROM #VT_FACT_REMD_TMP '
                      +'    WHERE TIME_ID = -1 '
                      +'   GROUP BY Y_DIM '
                      +' UNION ALL '
                      +' SELECT 4 DATA_TYPE,CAST(TIME_ID AS INTEGER) AS TIME_ID, '+ Replace(V_GROUP,'TIME_ID,','') + '  Y_DIM, '
                      +'                  STORE_CNT'
					  +'                  ,TX_CNT'
					  +'                  ,TX_AMT'					  
					  +'                  ,ROUND((CAST(TX_AMT AS DECIMAL(16,3)) /  CASE WHEN TX_CNT=0 THEN 1 ELSE TX_CNT END  ),2) AS CUST_PRICE '
                      +'                  ,REMD_DAY'
					  +'                  ,ROUND(TX_CNT /CASE WHEN REMD_DAY=0 THEN 1 ELSE REMD_DAY END,0) AS TX_CNT_AVG'
					  +'                  ,ROUND(TX_AMT /CASE WHEN REMD_DAY=0 THEN 1 ELSE REMD_DAY END,0) AS TX_AMT_AVG '
                      +'       FROM #VT_FACT_REMD_TMP '
                      +'  WHERE TIME_ID <> -1  '
			          + ' ) WITH DATA PRIMARY INDEX(DATA_TYPE,TIME_ID,Y_DIM) ON COMMIT PRESERVE ROWS;';						  					
        EXECUTE IMMEDIATE SQLSTR;   		
END SP;