REPLACE PROCEDURE PMART.NEW_TPO_MODULE_21
(FP_AMT_TYPE CHAR(1) CASESPECIFIC,FP_TIME_TYPE CHAR(1) CASESPECIFIC,
FP_TIME_LIST VARCHAR(2000) CASESPECIFIC,FP_LTIME_LIST VARCHAR(2000) CASESPECIFIC,
FP_PRD_TYPE CHAR(1) CASESPECIFIC,FP_PRD_LEVEL NUMBER,FP_PRD_LIST VARCHAR(8000) CASESPECIFIC,
FP_ORG_LEVEL NUMBER,FP_ORG_ID NUMBER)
SQL SECURITY INVOKER
SP:BEGIN
DECLARE SQLSTR  VARCHAR(64000);
   CALL PMART.P_DROP_TABLE ('#VT_NEW_TPO_MODULE_21'); 
   CALL PMART.NEW_TPO_MFACT_21(FP_AMT_TYPE,FP_TIME_TYPE,FP_TIME_LIST,FP_LTIME_LIST,FP_PRD_TYPE,FP_PRD_LEVEL,FP_PRD_LIST,FP_ORG_LEVEL,FP_ORG_ID);
   CALL PMART.NEW_TPO_STFACT_2(FP_TIME_TYPE,FP_TIME_LIST,FP_LTIME_LIST,FP_PRD_TYPE,FP_PRD_LEVEL,FP_PRD_LIST,FP_ORG_LEVEL,FP_ORG_ID);
   SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_NEW_TPO_MODULE_21  AS('+
                 'SELECT '+
                 'A.TIME_ID AS TIME_ID,'+
                 'A.PRD_ID AS PRD_ID,'+
                 'B.ORDER_STORE_NUM AS ORDER_STORE_NUM,'+
                 'CAST(B.ORDER_STORE_NUM AS DECIMAL(18,6))/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM)*100 AS ORDER_STORE_RATE,'+
                 'B.SALES_STORE_NUM AS SALES_STORE_NUM,'+
                 'CAST(B.SALES_STORE_NUM AS DECIMAL(18,6))/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM)*100 AS SALES_STORE_RATE,'+
                 'B.INPRD_STORE_NUM AS INPRD_STORE_NUM,'+
                 'CAST(B.INPRD_STORE_NUM AS DECIMAL(18,6))/DECODE(B.INPRD_STORE_NUM,0,NULL,B.INPRD_STORE_NUM)*100 AS INPRD_STORE_RATE,'+
                 'B.RETPRD_STORE_NUM AS RETPRD_STORE_NUM,'+
                 'B.TRANSPRD_STORE_NUM AS TRANSPRD_STORE_NUM,'+
                 'B.TRANSPRD_IN_STORE_NUM AS TRANSPRD_IN_STORE_NUM,'+
                 'CASE WHEN A.SALES_CNT<=0 THEN NULL '+
                 'ELSE A.CUST_NUM/A.SALES_CNT END AS BUY_RATE,'+
                 'B.SALES_ORDER_STORE_NUM AS LEAD_STORE_NUM,'+
                 'CAST(B.SALES_ORDER_STORE_NUM AS DECIMAL(18,6))/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM)*100 AS LEAD_STORE_RATE,'+
                 'A.ORDER_AMT AS ORDER_AMT,'+
                 'A.ORDER_AMT/DECODE(B.ORDER_STORE_NUM,0,NULL,B.ORDER_STORE_NUM) AS ORDER_AMT_AVG,'+
                 'A.LORDER_AMT AS LORDER_AMT,'+
                 'A.ORDER_AMT-A.LORDER_AMT AS LORDER_AMT_DIFF,'+
                 'CASE WHEN '+
                 '(A.ORDER_AMT/DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT)*100)>=10000 THEN 9999.99 '+
                 'WHEN '+
                 '(A.ORDER_AMT/DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT)*100)<=-10000 THEN -9999.99  '+
                 'ELSE (A.ORDER_AMT/DECODE(A.LORDER_AMT,0,NULL,A.LORDER_AMT)*100) END '+
                 'AS LORDER_AMT_RATE,'+
                 'A.INPRD_AMT AS INPRD_AMT,'+
                 'A.INPRD_AMT/DECODE(B.INPRD_STORE_NUM,0,NULL,B.INPRD_STORE_NUM) AS INPRD_AMT_AVG,'+
                 'A.LINPRD_AMT AS LINPRD_AMT,'+
                 'A.SALES_AMT AS SALES_AMT,'+
                 'A.SALES_AMT/DECODE(B.SALES_STORE_NUM,0,NULL,B.SALES_STORE_NUM) AS SALES_AMT_AVG,'+
                 'A.SALES_AMT/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM) AS SALES_AMT_MAST_AVG,'+
                 'A.LSALES_AMT AS LSALES_AMT,'+
                 'A.SALES_AMT-A.LSALES_AMT AS LSALES_AMT_DIFF,'+
                 'CASE WHEN '+
                 '(A.SALES_AMT/DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT)*100)>=10000 THEN 9999.99 '+
                 'WHEN '+
                 '(A.SALES_AMT/DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT)*100)<=-10000 THEN -9999.99 '+
                 'ELSE (A.SALES_AMT/DECODE(A.LSALES_AMT,0,NULL,A.LSALES_AMT)*100) END '+
                 'AS LSALES_AMT_RATE,'+
                 'A.THROW_AMT AS THROW_AMT,'+
                 'A.THROW_AMT/DECODE(B.THROW_STORE_NUM,0,NULL,B.THROW_STORE_NUM) AS THROW_AMT_AVG,'+
                 'A.LTHROW_AMT AS LTHROW_AMT,'+
                 'A.THROW_AMT/DECODE(A.ORDER_AMT,0,NULL,A.ORDER_AMT)*100 AS THROW_AMT_RATE,'+
                 'A.RETPRD_AMT AS RETPRD_AMT,'+
                 'A.LRETPRD_AMT AS LRETPRD_AMT,'+
                 'A.TRANSPRD_AMT AS TRANSPRD_AMT,'+
                 'A.LTRANSPRD_AMT AS LTRANSPRD_AMT,'+
                 'A.DIS_AMT AS DIS_AMT,'+
                 'A.SUB_AMT AS SUB_AMT,'+
                 'A.DISSUB_AMT AS DISSUB_AMT,'+
                 'A.ORDER_CNT AS ORDER_CNT,'+
                 'A.ORDER_CNT/DECODE(B.ORDER_STORE_NUM,0,NULL,B.ORDER_STORE_NUM) AS ORDER_CNT_AVG,'+
                 'A.LORDER_CNT AS LORDER_CNT,'+
                 'A.ORDER_CNT-A.LORDER_CNT AS LORDER_CNT_DIFF,'+
                 'CASE WHEN '+
                 '(A.ORDER_CNT/DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT)*100)>=10000 THEN 9999.99 '+
                 'WHEN'+
                 '(A.ORDER_CNT/DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT)*100)<=-10000 THEN -9999.99 '+
                 'ELSE (A.ORDER_CNT/DECODE(A.LORDER_CNT,0,NULL,A.LORDER_CNT)*100) END '+
                 'AS LORDER_CNT_RATE,'+
                 'A.INPRD_CNT AS INPRD_CNT,'+
                 'A.INPRD_CNT/DECODE(B.INPRD_STORE_NUM,0,NULL,B.INPRD_STORE_NUM) AS INPRD_CNT_AVG,'+
                 'A.LINPRD_CNT AS LINPRD_CNT, '+
                 'A.SALES_CNT AS SALES_CNT,'+
                 'A.SALES_CNT/DECODE(B.SALES_STORE_NUM,0,NULL,B.SALES_STORE_NUM) AS SALES_CNT_AVG,'+
                 'A.SALES_CNT/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM) AS SALES_CNT_MAST_AVG,'+
                 'A.LSALES_CNT AS LSALES_CNT,'+
                 'A.SALES_CNT-A.LSALES_CNT AS LSALES_CNT_DIFF,'+
                 'CASE WHEN'+
                 '(A.SALES_CNT/DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT)*100)>=10000 THEN 9999.99'+
                 'WHEN '+
                 '(A.SALES_CNT/DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT)*100)<=-10000 THEN -9999.99 '+
                 'ELSE (A.SALES_CNT/DECODE(A.LSALES_CNT,0,NULL,A.LSALES_CNT)*100) END '+
                 'AS LSALES_CNT_RATE,'+
                 'A.THROW_CNT AS THROW_CNT,'+
                 'A.THROW_CNT/DECODE(B.THROW_STORE_NUM,0,NULL,B.THROW_STORE_NUM) AS THROW_CNT_AVG, '+
                 'A.LTHROW_CNT AS LTHROW_CNT, '+
                 'A.THROW_CNT/DECODE(A.ORDER_CNT,0,NULL,A.ORDER_CNT)*100 AS THROW_CNT_RATE, '+
                 'A.RETPRD_CNT AS RETPRD_CNT, '+
                 'A.LRETPRD_CNT AS LRETPRD_CNT, '+
                 'A.TRANSPRD_CNT AS TRANSPRD_CNT, '+
                 'A.LTRANSPRD_CNT AS LTRANSPRD_CNT, '+
                 'A.SALES_DISSUB_AMT AS SALES_DISSUB_AMT,'+
                 'A.SALES_DISSUB_AMT/DECODE(B.SALES_STORE_NUM,0,NULL,B.SALES_STORE_NUM) AS SALES_DISSUB_AMT_AVG,'+
                 'A.SALES_DISSUB_AMT/DECODE(B.MAST_STORE_NUM,0,NULL,B.MAST_STORE_NUM) AS SALES_DISSUB_AMT_MAST_AVG,'+
                 'A.LSALES_DISSUB_AMT AS LSALES_DISSUB_AMT,'+                 
                 'A.SALES_DISSUB_AMT-A.LSALES_DISSUB_AMT AS LSALES_DISSUB_AMT_DIFF,'+
                 'CASE WHEN '+
                 '(A.SALES_DISSUB_AMT/DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT)*100)>=10000 THEN 9999.99 '+
                 'WHEN '+
                 '(A.SALES_DISSUB_AMT/DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT)*100)<=-10000 THEN -9999.99 '+
                 'ELSE (A.SALES_DISSUB_AMT/DECODE(A.LSALES_DISSUB_AMT,0,NULL,A.LSALES_DISSUB_AMT)*100) END '+
                 'AS LSALES_DISSUB_AMT_RATE '+ 
                 'FROM '+
                 '  #VT_NEW_TPO_MFACT_21 A LEFT JOIN '+
                 '  #VT_NEW_TPO_STFACT_2 B '+
                 'ON (A.TIME_ID=B.TIME_ID AND A.PRD_ID=B.PRD_ID)'+
                 ') WITH DATA UNIQUE PRIMARY  CHARINDEX(PRD_ID , TIME_ID) ON COMMIT PRESERVE ROWS;';  
	EXECUTE IMMEDIATE SQLSTR;
END SP;