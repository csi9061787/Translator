REPLACE PROCEDURE PMART.BI_REMD_OSTORE_FUNC(P_WEEK_ID INTEGER, P_RESPON_ID INTEGER)
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(1000);
   DECLARE V_SQLA VARCHAR(3000);
   DECLARE V_SQLB VARCHAR(3000);
   DECLARE V_SQLC VARCHAR(3000);
   DECLARE V_DAY_ID	INTEGER;
   DECLARE V_ORG_ID	INTEGER;
   DECLARE V_WEEK_ID INTEGER;
   DECLARE V_UPLOAD_STNUM DECIMAL(18,6);
   DECLARE V_AMT DECIMAL(18,6);
   DECLARE V_CUST_NUM DECIMAL(18,6);
   DECLARE P_ORG_ID	DECIMAL(18,6);
   DECLARE V_P_UPLOAD_STNUM DECIMAL(18,6);
   DECLARE V_P_AMT DECIMAL(18,6);
   DECLARE V_P_CUST_NUM DECIMAL(18,6);  
   DECLARE V_DAY_ID_C1 INTEGER;
   DECLARE V_ORG_ID_C1 INTEGER;
   DECLARE V_WEEK_ID_C1 INTEGER;
   DECLARE V_AMT_C1 DECIMAL(18,6);
   DECLARE V_CUST_NUM_C1 DECIMAL(18,6);
   DECLARE V_CUST_AMT_C1 DECIMAL(18,6);
   DECLARE V_P_AMT_C1 DECIMAL(18,6);
   DECLARE V_P_CUST_NUM_C1 DECIMAL(18,6);
   DECLARE V_DAY_ID_C2 INTEGER;
   DECLARE V_ORG_ID_C2 INTEGER;
   DECLARE V_WEEK_ID_C2 INTEGER;
   DECLARE V_AMT_C2 DECIMAL(18,6);
   DECLARE V_CUST_NUM_C2 DECIMAL(18,6);
   DECLARE V_CUST_AMT_C2 DECIMAL(18,6);
   DECLARE V_P_AMT_C2 DECIMAL(18,6);
   DECLARE V_P_CUST_NUM_C2 DECIMAL(18,6);
   DECLARE REMD_CS CURSOR FOR REMD_SQL;
   CALL PMART.P_DROP_TABLE ('#VT_BI_REMD_OSTORE_FUNC'); 
   SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_BI_REMD_OSTORE_FUNC  
    (    
      L_DAY_ID INTEGER, ORG_ID INTEGER, L_WEEK_ID INTEGER, AMT DECIMAL(18,6), CUST_NUM DECIMAL(18,6), CUST_AMT DECIMAL(18,6), P_AMT DECIMAL(18,6), P_CUST_NUM DECIMAL(18,6)
    )
   NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
   EXECUTE IMMEDIATE SQLSTR;
   SET SQLSTR = 'SELECT A.L_DAY_ID, B.OSTORE_ID AS ORG_ID, C.L_WEEK_ID AS L_WEEK_ID, '+
       '  DECODE(A.UPLOAD_STNUM, NULL, 0, A.UPLOAD_STNUM) AS UPLOAD_STNUM, A.AMT, '+
       '  A.CUST_NUM AS CUST_NUM, DECODE(D.UPLOAD_STNUM,NULL,0,D.UPLOAD_STNUM) AS P_UPLOAD_STNUM, '+
       '  DECODE(D.AMT,NULL,0,D.AMT) AS P_AMT, '+
       '  DECODE(D.CUST_NUM,NULL,0,D.CUST_NUM) AS P_CUST_NUM  '+
       '  FROM PMART.REMD_FACT A INNER JOIN (SELECT OSTORE_ID FROM PMART.LAST_ORG_DIM WHERE RESPON_ID = '+ P_RESPON_ID + ') B '+
       '  ON A.OSTORE_ID = B.OSTORE_ID '+
       '                             INNER JOIN  PMART.YMWD_TIME C '+
       '  ON A.L_DAY_ID = C.L_DAY_ID '+
       '                             LEFT OUTER JOIN  PMART.REMD_FACT D '+
       '  ON D.L_DAY_ID = C.L_DAY_LAST_YEAR  '+
       ' AND D.OSTORE_ID = A.OSTORE_ID  '+
       '  WHERE C.L_WEEK_ID = '+ P_WEEK_ID + 
       '  ORDER BY B.OSTORE_ID, A.L_DAY_ID; ';
   PREPARE REMD_SQL FROM SQLSTR;
   OPEN REMD_CS; 
   SET P_ORG_ID = 0;
   L1:
   WHILE (SQLCODE=0)	
   DO
    BEGIN 
	FETCH REMD_CS INTO V_DAY_ID, V_ORG_ID, V_WEEK_ID, V_UPLOAD_STNUM, V_AMT, V_CUST_NUM, V_P_UPLOAD_STNUM, V_P_AMT, V_P_CUST_NUM;
		IF SQLSTATE <> '00000' THEN LEAVE L1; END IF;
		IF P_ORG_ID <>  V_ORG_ID THEN
			IF P_ORG_ID <> 0 THEN 
				L2 :
				FOR CUR2 AS BI_REMD_OSTORE_FUNC_C2 CURSOR FOR 				
				SELECT A.L_DAY_ID, A.OSTORE_ID AS ORG_ID, A.L_WEEK_ID, A.AMT, A.CUST_NUM, A.CUST_AMT, 
				 (A.AMT * 100 / B.AMT ) AS P_AMT
				 , (A.CUST_NUM * 100 / B.CUST_NUM ) AS P_CUST_NUM 
				 FROM ( 
				 SELECT 99991231 AS L_DAY_ID, A.OSTORE_ID, B.L_WEEK_ID, 
				 CAST(SUM(A.AMT) AS DECIMAL(18,6)) / SUM(A.UPLOAD_STNUM) AS AMT,  
				 CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS CUST_NUM,  
				 CAST(SUM(A.AMT) AS DECIMAL(18,6))  / SUM(A.CUST_NUM) AS CUST_AMT  
				 FROM PMART.REMD_FACT A, PMART.YMWD_TIME B 
				 WHERE A.OSTORE_ID = P_ORG_ID
				 AND B.L_WEEK_ID = V_WEEK_ID
				 AND A.L_DAY_ID = B.L_DAY_ID GROUP BY A.OSTORE_ID, B.L_WEEK_ID) A  
				 LEFT JOIN (  
				 	SELECT 99991231 AS L_DAY_ID, A.OSTORE_ID, 
                                 CAST(SUM(A.AMT) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS AMT,  
                                 CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS CUST_NUM  
					  FROM PMART.REMD_FACT A, PMART.YMWD_TIME B  
					 WHERE A.OSTORE_ID = P_ORG_ID
					   AND B.L_WEEK_ID = V_WEEK_ID - 100
					   AND A.L_DAY_ID = B.L_DAY_ID 
					 GROUP BY A.OSTORE_ID, B.L_WEEK_ID) B ON A.L_DAY_ID = B.L_DAY_ID AND A.OSTORE_ID = B.OSTORE_ID 
				DO
					SET V_DAY_ID_C2 = CUR2.L_DAY_ID;
					SET V_ORG_ID_C2 = CUR2.ORG_ID;
					SET V_WEEK_ID_C2 = CUR2.L_WEEK_ID;
					SET V_AMT_C2 = CUR2.AMT;
					SET V_CUST_NUM_C2 = CUR2.CUST_NUM;
					SET V_CUST_AMT_C2 = CUR2.CUST_AMT;	
					SET V_P_AMT_C2 = DECODE(CUR2.P_AMT, NULL, 0, CUR2.P_AMT) ;
					SET V_P_CUST_NUM_C2 = DECODE(CUR2.P_CUST_NUM, NULL, 0, CUR2.P_CUST_NUM) ;
				INSERT INTO #VT_BI_REMD_OSTORE_FUNC (L_DAY_ID, ORG_ID, L_WEEK_ID, AMT, CUST_NUM, CUST_AMT, P_AMT ,P_CUST_NUM) VALUES (V_DAY_ID_C2, V_ORG_ID_C2, V_WEEK_ID_C2, V_AMT_C2, V_CUST_NUM_C2, V_CUST_AMT_C2, V_P_AMT_C2, V_P_CUST_NUM_C2);
				END FOR L2;
			END IF;
			SET P_ORG_ID = V_ORG_ID;
		END IF;
		SET V_DAY_ID_C1 = V_DAY_ID;
		SET V_ORG_ID_C1 = V_ORG_ID;
		SET V_WEEK_ID_C1= V_WEEK_ID;
		IF V_UPLOAD_STNUM = 0 THEN 
		   SET V_AMT_C1 = 0 ;
		   SET V_CUST_NUM_C1 = 0 ; 
		ELSE
		   SET V_AMT_C1 = V_AMT/V_UPLOAD_STNUM;
		   SET V_CUST_NUM_C1 = V_CUST_NUM/V_UPLOAD_STNUM;
		END IF ; 
        IF V_CUST_NUM = 0 THEN
		   SET V_CUST_AMT_C1 = 0 ;
	    ELSE
		   SET V_CUST_AMT_C1 = V_AMT/V_CUST_NUM;
		END IF ; 
		IF V_P_UPLOAD_STNUM = 0 THEN 
		   SET V_P_AMT_C1 = 0 ;
	    ELSE
		   IF V_AMT_C1  = 0 THEN
		       SET V_P_AMT_C1 = 0 ;
		   ELSE
		      SET V_P_AMT_C1 = (V_AMT/V_UPLOAD_STNUM)*100/(V_P_AMT/V_P_UPLOAD_STNUM);
		   END IF;	  
		END IF ;   
		IF V_P_UPLOAD_STNUM = 0 THEN 
		   SET V_P_CUST_NUM_C1 = 0 ;
	    ELSE
		   IF V_CUST_NUM_C1  = 0 THEN
		       SET V_P_CUST_NUM_C1 = 0 ;
		   ELSE
		      SET V_P_CUST_NUM_C1 = (V_CUST_NUM/V_UPLOAD_STNUM)*100/(V_P_CUST_NUM/V_P_UPLOAD_STNUM);
		   END IF;	  
		END IF ;   		
		INSERT INTO #VT_BI_REMD_OSTORE_FUNC (L_DAY_ID, ORG_ID, L_WEEK_ID, AMT, CUST_NUM, CUST_AMT, P_AMT ,P_CUST_NUM) VALUES (V_DAY_ID_C1, V_ORG_ID_C1, V_WEEK_ID_C1, V_AMT_C1, V_CUST_NUM_C1, V_CUST_AMT_C1, V_P_AMT_C1, V_P_CUST_NUM_C1);
	END;
   END WHILE L1;
	L3:
	FOR CUR3 AS BI_REMD_OSTORE_FUNC_C3 CURSOR FOR 				
	SELECT A.L_DAY_ID, A.OSTORE_ID AS ORG_ID, A.L_WEEK_ID, A.AMT, A.CUST_NUM, A.CUST_AMT, 
	 (A.AMT * 100 / B.AMT ) AS P_AMT
	 , (A.CUST_NUM * 100 / B.CUST_NUM ) AS P_CUST_NUM 
	 FROM ( 
	 SELECT 99991231 AS L_DAY_ID, A.OSTORE_ID, B.L_WEEK_ID, 
	 CAST(SUM(A.AMT) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS AMT,  
	 CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS CUST_NUM,  
	 CAST(SUM(A.AMT) AS DECIMAL(18,6))  / SUM(A.CUST_NUM) AS CUST_AMT  
	 FROM PMART.REMD_FACT A, PMART.YMWD_TIME B 
	 WHERE A.OSTORE_ID = P_ORG_ID
	 AND B.L_WEEK_ID = V_WEEK_ID
	 AND A.L_DAY_ID = B.L_DAY_ID GROUP BY A.OSTORE_ID, B.L_WEEK_ID) A  
	 LEFT JOIN (  
	 	SELECT 99991231 AS L_DAY_ID, A.OSTORE_ID, 
                       CAST(SUM(A.AMT) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS AMT,  
                       CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6))  / SUM(A.UPLOAD_STNUM) AS CUST_NUM  
		  FROM PMART.REMD_FACT A, PMART.YMWD_TIME B  
		 WHERE A.OSTORE_ID = P_ORG_ID
		   AND B.L_WEEK_ID = V_WEEK_ID - 100
		   AND A.L_DAY_ID = B.L_DAY_ID 
		 GROUP BY A.OSTORE_ID, B.L_WEEK_ID) B ON A.L_DAY_ID = B.L_DAY_ID AND A.OSTORE_ID = B.OSTORE_ID 
	DO
		SET V_DAY_ID_C2 = CUR3.L_DAY_ID;
		SET V_ORG_ID_C2 = CUR3.ORG_ID;
		SET V_WEEK_ID_C2 = CUR3.L_WEEK_ID;
		SET V_AMT_C2 = CUR3.AMT;
		SET V_CUST_NUM_C2 = CUR3.CUST_NUM;
		SET V_CUST_AMT_C2 = CUR3.CUST_AMT;
		SET V_P_AMT_C2 = DECODE(CUR3.P_AMT, NULL, 0, CUR3.P_AMT) ;
		SET V_P_CUST_NUM_C2 = DECODE(CUR3.P_CUST_NUM, NULL, 0, CUR3.P_CUST_NUM) ;
	INSERT INTO #VT_BI_REMD_OSTORE_FUNC (L_DAY_ID, ORG_ID, L_WEEK_ID, AMT, CUST_NUM, CUST_AMT, P_AMT ,P_CUST_NUM) VALUES (V_DAY_ID_C2, V_ORG_ID_C2, V_WEEK_ID_C2, V_AMT_C2, V_CUST_NUM_C2, V_CUST_AMT_C2, V_P_AMT_C2, V_P_CUST_NUM_C2);
	END FOR L3;
   CLOSE REMD_CS;
END SP;