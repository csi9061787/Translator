REPLACE PROCEDURE PMART.BI_1_2_FUNC(FP_TIME_TYPE VARCHAR(2000)
									, FP_TIME_LIST VARCHAR(2000)
									, FP_PRD_TYPE VARCHAR(2000)
									, FP_PRD_LEVEL NUMBER
									, FP_PRD_LIST VARCHAR(2000)
									, FP_ORG_LEVEL NUMBER
									, FP_ORG_ID NUMBER)
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(20000);
   DECLARE V_SELECT VARCHAR(4000);
   DECLARE V_TABLE_NAME VARCHAR(30);
   DECLARE V_PRD_ID_STR VARCHAR(200); 
   CALL PMART.P_DROP_TABLE ('#VT_BI_1_2_FUNC'); 
   IF (FP_TIME_TYPE='D' AND FP_PRD_TYPE='P' AND FP_PRD_LEVEL=2 AND FP_ORG_LEVEL=3) THEN
      SET V_TABLE_NAME = 'PMART.BASIC_MFACT_DETAIL_ORD1';
      SET V_PRD_ID_STR = ' AND PRD_ID IN ('+ PMART.CONVERT_STRING_LIST(FP_PRD_LIST) +') ';
   ELSEIF (FP_TIME_TYPE='D' AND FP_PRD_TYPE='R' AND FP_PRD_LEVEL=1 AND FP_ORG_LEVEL=3) THEN
      SET V_TABLE_NAME = 'PMART.BASIC_MFACT_DETAIL_ORD1';
      SET V_PRD_ID_STR = ' AND PRD_ID IN ('+ PMART.CONVERT_STRING_LIST(FP_PRD_LIST) +') ';
   ELSE
      SET V_TABLE_NAME = 'PMART.BASIC_MFACT_ORD1';
      SET V_PRD_ID_STR = ' AND PRD_ID IN ('+ PMART.CONVERT_STRING_LIST(FP_PRD_LIST) +') ';
   END IF;
   IF FP_TIME_TYPE = 'D' THEN
      IF FP_ORG_LEVEL=3 THEN
	  	SET V_SELECT = ' SELECT A.OSTORE_ID AS ORG_ID, B.L_DAY_ID AS TIME_ID, SUM(UPLOAD_STNUM) AS STNUM '+
								' FROM PMART.REMD_FACT A, '+
     									' (SELECT A.L_DAY_ID L_DAY_ID,B.L_DAY_ID L_DAY_ID1,B.L_MONTH_ID '+
        								' FROM PMART.YMWD_TIME A, PMART.YMWD_TIME B '+
       									' WHERE A.L_DAY_ID IN ('+ FP_TIME_LIST +') '+
         								' AND B.L_DAY_SERIAL= A.L_DAY_SERIAL-1) B '+
								' WHERE A.OSTORE_ID = '+ FP_ORG_ID +' '+
								' AND A.L_DAY_ID = B.L_DAY_ID1 '+
								' GROUP BY A.OSTORE_ID, B.L_DAY_ID ';
	  ELSE
	  	SET V_SELECT = ' SELECT A.ORG_ID, B.L_DAY_ID AS TIME_ID, SUM(UPLOAD_STNUM) AS STNUM '+
								' FROM PMART.REMD_FACT_SUM A, '+
     									' (SELECT A.L_DAY_ID L_DAY_ID,B.L_DAY_ID L_DAY_ID1,B.L_MONTH_ID '+
        								' FROM PMART.YMWD_TIME A, PMART.YMWD_TIME B '+
       									' WHERE A.L_DAY_ID IN ('+ FP_TIME_LIST +') '+
         								' AND B.L_DAY_SERIAL= A.L_DAY_SERIAL-1) B '+
								' WHERE A.ORG_ID = '+ FP_ORG_ID +' '+
								' AND A.L_DAY_ID = B.L_DAY_ID1 '+
								' GROUP BY A.ORG_ID, B.L_DAY_ID ';
	  END IF;
   ELSE
      IF FP_ORG_LEVEL=3 THEN
	  	SET V_SELECT = ' SELECT A.OSTORE_ID AS ORG_ID, B.L_WEEK_ID AS TIME_ID, SUM(UPLOAD_STNUM) AS STNUM '+
								' FROM PMART.REMD_FACT A, '+
     									' (SELECT A.L_WEEK_ID L_WEEK_ID,B.L_DAY_ID L_DAY_ID1,B.L_MONTH_ID '+
        								' FROM PMART.YMWD_TIME A, PMART.YMWD_TIME B '+
       									' WHERE A.L_WEEK_ID IN ('+ FP_TIME_LIST +') '+
         								' AND B.L_DAY_SERIAL= A.L_DAY_SERIAL-1) B '+
								' WHERE A.OSTORE_ID = '+ FP_ORG_ID +' '+
								' AND A.L_DAY_ID = B.L_DAY_ID1 '+
								' GROUP BY A.OSTORE_ID, B.L_WEEK_ID ';
	  ELSE
	  	SET V_SELECT = ' SELECT A.ORG_ID, B.L_WEEK_ID AS TIME_ID, SUM(UPLOAD_STNUM) AS STNUM '+
								' FROM PMART.REMD_FACT_SUM A, '+
     									' (SELECT A.L_WEEK_ID L_WEEK_ID,B.L_DAY_ID L_DAY_ID1,B.L_MONTH_ID '+
        								' FROM PMART.YMWD_TIME A, PMART.YMWD_TIME B '+
       									' WHERE A.L_WEEK_ID IN ('+ FP_TIME_LIST +') '+
         								' AND B.L_DAY_SERIAL= A.L_DAY_SERIAL-1) B '+
								' WHERE A.ORG_ID = '+ FP_ORG_ID +' '+
								' AND A.L_DAY_ID = B.L_DAY_ID1 '+
								' GROUP BY A.ORG_ID, B.L_WEEK_ID ';
	  END IF;
   END IF;
   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_BI_1_2_FUNC  AS( '
        + ' SELECT F1.TIME_ID AS TIME_ID, '
		+ ' F1.PRD_ID AS PRD_ID, '
		+ ' F1.SALES_CNT AS SALES_CNT, '
		+ ' F1.SALES_AMT AS SALES_AMT, '
		+ ' (CASE WHEN F2.STNUM = 0 THEN 0 ELSE CAST(F1.SALES_AMT AS DECIMAL(14,4))/CAST(F2.STNUM AS DECIMAL(14,4)) END) AS SALES_AMT_AVG, '     
		+ ' F1.ORDER_CNT AS ORDER_CNT, '
		+ ' F1.ORDER_AMT AS ORDER_AMT, '
		+ ' F1.BUG_SAL_AMT AS BUG_SAL_AMT '
		+ ' FROM '+ V_TABLE_NAME +' F1 '
		+ ' INNER JOIN ('+ V_SELECT +') F2 '
		+ ' ON F1.ORG_ID = F2.ORG_ID AND F1.TIME_ID = F2.TIME_ID '
		+ ' WHERE F1.TIME_ID IN ('+ FP_TIME_LIST +') '
		+ V_PRD_ID_STR  
		+ ' AND F1.ORG_ID='+ FP_ORG_ID 
		+ ' ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;' ; 
	EXECUTE IMMEDIATE SQLSTR;
END SP;