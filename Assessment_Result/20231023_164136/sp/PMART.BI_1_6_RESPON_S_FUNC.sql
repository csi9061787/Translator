REPLACE PROCEDURE PMART.BI_1_6_RESPON_S_FUNC
(
	P_WEEK_ID NUMBER,
	P_BRANCH_ID NUMBER
)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE SQLSTR VARCHAR(10000);
	CALL PMART.P_DROP_TABLE ('#VT_BI_1_6_RESPON_S_FUNC');
	CALL PMART.BI_1_6_RESPON_S0_FUNC(P_WEEK_ID, P_BRANCH_ID);
	SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_BI_1_6_RESPON_S_FUNC  AS( ' 
				+ ' SELECT X.PRD_ID, X.ORG_ID, X.ORDER_AMT ORD_AMT, X.SALES_AMT, X.BUG_SAL_ALL_AMT, '
				+ ' CAST(X.ORDER_AMT AS DECIMAL(12,2)) / Y.STNUM AS ORDER_AMT_AVG, '
				+ ' CAST(X.SALES_AMT AS DECIMAL(12,2)) / Y.STNUM AS SALES_AMT_AVG, '
				+ ' X.BUG_SAL_ALL_AMT / Y.STNUM AS BUG_SAL_AMT, '
				+ ' (CASE WHEN X.ORDER_AMT = 0 THEN 100 ELSE CAST(X.SALES_AMT AS DECIMAL(12,2)) * 100 / X.ORDER_AMT END) AS ORDSAL_M,'
				+ ' (CASE WHEN X.BUG_SAL_ALL_AMT = 0 THEN 0 ELSE CAST(X.SALES_AMT AS DECIMAL(12,2)) * 100 / X.BUG_SAL_ALL_AMT END) AS ACCU, '
				+ ' X.ORDER_CNT, X.SALES_CNT, '
				+ ' CAST(X.ORDER_CNT AS DECIMAL(12,2)) / Y.STNUM AS ORDER_CNT_AVG, '
				+ ' CAST(X.SALES_CNT AS DECIMAL(12,2)) / Y.STNUM AS SALES_CNT_AVG '
				+ ' FROM '
				+ ' #VT_BI_1_6_RESPON_S0_FUNC X '
				+ ' LEFT JOIN ( '
				+ ' SELECT A.ORG_ID,SUM(UPLOAD_STNUM) AS STNUM '
                + ' FROM PMART.REMD_FACT_SUM A, '
				+ ' (SELECT B.L_DAY_ID,B.L_MONTH_ID FROM PMART.YMWD_TIME A, PMART.YMWD_TIME B '
                + ' WHERE A.L_WEEK_ID='+P_WEEK_ID
				+ ' AND B.L_DAY_SERIAL= A.L_DAY_SERIAL-1) B '
				+ ' WHERE A.L_DAY_ID=B.L_DAY_ID '
				+ ' GROUP BY A.ORG_ID) Y '
                + ' ON (X.ORG_ID=Y.ORG_ID) '
				+ ' ) WITH DATA PRIMARY  CHARINDEX( ORG_ID,PRD_ID) ON COMMIT PRESERVE ROWS;'; 
	EXECUTE IMMEDIATE SQLSTR;  
END SP;