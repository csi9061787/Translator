REPLACE PROCEDURE PMART.FUNC_SHELF_DIM
(
   IN P_SHELF_LEVEL INTEGER,
   IN P_TIME_ID INTEGER,
   IN P_SHELF_ID INTEGER
)
SP:BEGIN
   DECLARE SQLSTR VARCHAR(2000); 
   DECLARE CON1WHERE VARCHAR(100); 
   DECLARE CON2WHERE VARCHAR(100); 
   IF P_SHELF_LEVEL = 0 THEN
		SET CON1WHERE = ' AND SHELF_ID=-1 AND SHELF_LEVEL='+P_SHELF_LEVEL;
		SET CON2WHERE = ' AND P_SHELF_ID=-1 AND SHELF_LEVEL='+P_SHELF_LEVEL+1;
   ELSEIF P_SHELF_LEVEL = 1 THEN
	    SET CON1WHERE = ' AND SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL;
		SET CON2WHERE = ' AND P_SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL+1;
   ELSEIF P_SHELF_LEVEL = 2 THEN
	    SET CON1WHERE = ' AND SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL;
		SET CON2WHERE = ' AND P_SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL+1;
   ELSEIF P_SHELF_LEVEL = 3 THEN
	    SET CON1WHERE = ' AND SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL;
		SET CON2WHERE = ' AND P_SHELF_ID='+P_SHELF_ID+' AND SHELF_LEVEL='+P_SHELF_LEVEL+1;
   ELSE
	    SET CON1WHERE = '';
   END IF;   
CALL PMART.P_DROP_TABLE ('#VT_FUNC_SHELF_DIM');
IF CON1WHERE<> '' THEN
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FUNC_SHELF_DIM AS('                          										   
						   +'SELECT D.*,CASE WHEN SHELF_LEVEL < 4 THEN ''Y'' ELSE ''N''  END AS ALLOW_DRILL_DOWN FROM ( '
						   +'SELECT L_DAY_ID,(CAST(-1  AS INTEGER) ) AS SHELF_ID,SHELF_NAME,SHELF_LEVEL,P_SHELF_ID FROM PMART.VW_SHELF_DIM WHERE STYLE=1 AND L_DAY_ID='+P_TIME_ID+CON1WHERE
						   +' UNION ALL '
						   +'SELECT L_DAY_ID,SHELF_ID,SHELF_NAME,SHELF_LEVEL,P_SHELF_ID FROM PMART.VW_SHELF_DIM WHERE STYLE=1 AND L_DAY_ID='+P_TIME_ID+CON2WHERE+')  D '
                           + ' ) WITH DATA PRIMARY INDEX(L_DAY_ID, SHELF_ID, SHELF_LEVEL) ON COMMIT PRESERVE ROWS;';
		EXECUTE IMMEDIATE SQLSTR;
END IF;
END SP;