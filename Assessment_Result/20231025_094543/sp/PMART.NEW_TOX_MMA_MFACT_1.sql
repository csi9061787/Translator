CREATE PROCEDURE PMART.NEW_TOX_MMA_MFACT_1
(FP_AMT_TYPE CHAR(1),
FP_TIME_TYPE CHAR(1),FP_TIME_LIST VARCHAR(2000),FP_LTIME_LIST VARCHAR(2000),
FP_ORG_LEVEL NUMBER,FP_ORG_LIST VARCHAR(2000),
FP_PRD_TYPE CHAR(1),FP_PRD_LEVEL NUMBER,FP_PRD_ID NUMBER,FP_MMA_LIST VARCHAR(2000))
 SQL SECURITY INVOKER
SP:BEGIN
DECLARE SQLSTR  VARCHAR(64000);     
DECLARE V_TABLE_NAME VARCHAR(30);
DECLARE V_SALES_AMT  VARCHAR(50);
DECLARE V_ORDER_AMT  VARCHAR(50);
 DECLARE V_THROW_AMT  VARCHAR(50);
 DECLARE V_LSALES_AMT  VARCHAR(50);
 DECLARE V_LORDER_AMT VARCHAR(50);
 DECLARE V_LTHROW_AMT VARCHAR(50);
 DECLARE V_ITMRECEIVED_EXTEND_AMT     		VARCHAR(50);
 DECLARE V_ITMRECEIVED_EXTEND_PRE_AMT 	VARCHAR(50);
 DECLARE V_ITMRETURN_EXTEND_AMT       			VARCHAR(50);
 DECLARE V_ITMRETURN_EXTEND_PRE_AMT   		VARCHAR(50);
 DECLARE V_ITMTRANSFER_EXTEND_AMT     			VARCHAR(50);
 DECLARE V_ITMTRANSFER_EXTEND_PRE_AMT 		VARCHAR(50);
 DECLARE V_DISCOUNT_EXTEND_AMT        				VARCHAR(50);
 DECLARE V_LET_EXTEND_AMT             					VARCHAR(50);
 DECLARE V_ITMREFOUND_EXTEND_AMT      			VARCHAR(50);
CALL PMART.P_DROP_TABLE ('#VT_NEW_TOX_MMA_MFACT_1'); 
CASE
      WHEN FP_TIME_TYPE='D' AND FP_ORG_LEVEL=3 AND FP_PRD_TYPE='P' AND FP_PRD_LEVEL=3 THEN   
           SET V_TABLE_NAME = 'PMART.BASIC_MFACT_SHOP';        
      WHEN FP_TIME_TYPE='D' AND FP_ORG_LEVEL=3 AND FP_PRD_TYPE='R' AND FP_PRD_LEVEL=2 THEN 
           SET V_TABLE_NAME = 'PMART.BASIC_MFACT_SHOP';
      WHEN FP_PRD_TYPE='L' THEN         
           SET V_TABLE_NAME = 'PMART.BASIC_MLFACT_SHOP';
      ELSE      
           SET V_TABLE_NAME = 'PMART.BASIC_MFACT_SHOP';
END CASE;   
     IF FP_AMT_TYPE='T' THEN
         SET V_SALES_AMT  =  'CAST(F1.SALES_AMT AS DECIMAL(18,6))/1000';
         SET V_ORDER_AMT  = 'CAST(F1.ORDER_AMT AS DECIMAL(18,6))/1000';
         SET V_THROW_AMT  = 'CAST(F1.THROW_AMT AS DECIMAL(18,6))/1000';
         SET V_LSALES_AMT  = 'CAST(F2.SALES_AMT AS DECIMAL(18,6))/1000';
         SET V_LORDER_AMT = 'CAST(F2.ORDER_AMT AS DECIMAL(18,6))/1000';
         SET V_LTHROW_AMT = 'CAST(F2.THROW_AMT AS DECIMAL(18,6))/1000';
         SET V_ITMRECEIVED_EXTEND_AMT     		= ' CAST(F1.INPRD_AMT AS DECIMAL(18,6)) /1000';
         SET V_ITMRECEIVED_EXTEND_PRE_AMT 	= ' CAST(F2.INPRD_AMT AS DECIMAL(18,6)) /1000';
         SET V_ITMRETURN_EXTEND_AMT       				= ' CAST(F1.RETPRD_AMT AS DECIMAL(18,6))/1000';
         SET V_ITMRETURN_EXTEND_PRE_AMT   		= ' CAST(F2.RETPRD_AMT AS DECIMAL(18,6)) /1000';
         SET V_ITMTRANSFER_EXTEND_AMT     			= ' CAST(F1.TRANSPRD_AMT AS DECIMAL(18,6))/1000';
         SET V_ITMTRANSFER_EXTEND_PRE_AMT 		= ' CAST(F2.TRANSPRD_AMT AS DECIMAL(18,6))/1000';
         SET V_DISCOUNT_EXTEND_AMT        			= ' CAST(F1.DIS_AMT AS DECIMAL(18,6))/1000';
         SET V_LET_EXTEND_AMT             					= ' CAST(F1.SUB_AMT AS DECIMAL(18,6)) /1000';
         SET V_ITMREFOUND_EXTEND_AMT      			= ' CAST((F1.DIS_AMT+F1.SUB_AMT) AS DECIMAL(18,6)) /1000';
	  ELSE
	  	 SET V_SALES_AMT  =  'CAST(F1.SALES_AMT AS DECIMAL(18,6))';
         SET V_ORDER_AMT  = 'CAST(F1.ORDER_AMT AS DECIMAL(18,6))';
         SET V_THROW_AMT  = 'CAST(F1.THROW_AMT AS DECIMAL(18,6))';
         SET V_LSALES_AMT  = 'CAST(F2.SALES_AMT AS DECIMAL(18,6))';
         SET V_LORDER_AMT = 'CAST(F2.ORDER_AMT AS DECIMAL(18,6))';
         SET V_LTHROW_AMT = 'CAST(F2.THROW_AMT AS DECIMAL(18,6))';
         SET V_ITMRECEIVED_EXTEND_AMT     		= ' CAST(F1.INPRD_AMT AS DECIMAL(18,6)) ';
         SET V_ITMRECEIVED_EXTEND_PRE_AMT 	= ' CAST(F2.INPRD_AMT AS DECIMAL(18,6)) ';
         SET V_ITMRETURN_EXTEND_AMT       				= ' CAST(F1.RETPRD_AMT AS DECIMAL(18,6)) ';
         SET V_ITMRETURN_EXTEND_PRE_AMT   		= ' CAST(F2.RETPRD_AMT AS DECIMAL(18,6)) ';		 
         SET V_ITMTRANSFER_EXTEND_AMT     			= ' CAST(F1.TRANSPRD_AMT AS DECIMAL(18,6)) ';
         SET V_ITMTRANSFER_EXTEND_PRE_AMT 		= ' CAST(F2.TRANSPRD_AMT AS DECIMAL(18,6)) ';
         SET V_DISCOUNT_EXTEND_AMT        			= ' CAST(F1.DIS_AMT AS DECIMAL(18,6)) ';
         SET V_LET_EXTEND_AMT             					= ' CAST(F1.SUB_AMT AS DECIMAL(18,6)) ';
         SET V_ITMREFOUND_EXTEND_AMT      			= ' CAST((F1.DIS_AMT+F1.SUB_AMT) AS DECIMAL(18,6)) ';
      END IF;
SET SQLSTR = 'CREATE MULTISET VOLATILE TABLE #VT_NEW_TOX_MMA_MFACT_1  AS('+   
'SELECT '+
'F1.MMA_ID AS MMA_ID, '+
'F1.ORG_ID AS ORG_ID, '+
'F1.TIME_ID AS TIME_ID, '+
'CAST(F1.SALES_CNT AS DECIMAL(18,6)) AS SALES_CNT, '+
V_SALES_AMT + '  AS SALES_AMT, '+  
'CAST(F1.ORDER_CNT AS DECIMAL(18,6))  AS ORDER_CNT, '+
V_ORDER_AMT + ' AS ORDER_AMT, '+
'CAST(F1.THROW_CNT AS DECIMAL(18,6))  AS THROW_CNT, '+
V_THROW_AMT + ' AS THROW_AMT, '+
'CAST(F2.SALES_CNT AS DECIMAL(18,6))  AS LSALES_CNT, '+
V_LSALES_AMT + ' AS LSALES_AMT, '+
'CAST(F2.ORDER_CNT AS DECIMAL(18,6))  AS LORDER_CNT, '+
V_LORDER_AMT + ' AS LORDER_AMT, '+
'CAST(F2.THROW_CNT AS DECIMAL(18,6))  AS LTHROW_CNT, '+
V_LTHROW_AMT + ' AS LTHROW_AMT, '+
'CAST(F3.CUST_NUM  AS DECIMAL(18,6)) AS CUST_NUM, '+
V_ITMRECEIVED_EXTEND_AMT + ' AS ITMRECEIVED_EXTEND_AMT, '+
' NULL AS ITMRECEIVED_EXTEND_AMT_AVG, '+ 
V_ITMRECEIVED_EXTEND_PRE_AMT + ' AS ITMRECEIVED_EXTEND_PRE_AMT, '+
V_ITMRETURN_EXTEND_AMT + ' AS ITMRETURN_EXTEND_AMT, '+
V_ITMRETURN_EXTEND_PRE_AMT + ' AS ITMRETURN_EXTEND_PRE_AMT, '+
V_ITMTRANSFER_EXTEND_AMT + 'AS ITMTRANSFER_EXTEND_AMT, '+
V_ITMTRANSFER_EXTEND_PRE_AMT + ' AS ITMTRANSFER_EXTEND_PRE_AMT, '+
V_DISCOUNT_EXTEND_AMT + ' AS DISCOUNT_EXTEND_AMT, '+
V_LET_EXTEND_AMT + ' AS LET_EXTEND_AMT, '+
V_ITMREFOUND_EXTEND_AMT + ' AS ITMREFOUND_EXTEND_AMT, '+
' CAST(F1.INPRD_CNT  AS DECIMAL(18,6)) AS ITMRECEIVED_EXTEND_NUM, '+
' NULL AS ITMRECEIVED_EXTEND_NUM_AVG, '+ 
' CAST(F2.INPRD_CNT  AS DECIMAL(18,6)) AS ITMRECEIVED_EXTEND_PRE_NUM , '+
' CAST(F1.RETPRD_CNT  AS DECIMAL(18,6)) AS ITMRETURN_EXTEND_NUM, '+
' CAST(F2.RETPRD_CNT  AS DECIMAL(18,6)) AS ITMRETURN_EXTEND_PRE_NUM , '+
' CAST(F1.TRANSPRD_CNT  AS DECIMAL(18,6)) AS ITMTRANSFER_EXTEND_NUM, '+
' CAST(F2.TRANSPRD_CNT  AS DECIMAL(18,6)) AS ITMTRANSFER_EXTEND_PRE_NUM '+
      'FROM '+
      '( '+
      'SELECT '+
      'DENSE_RANK() OVER(ORDER BY TIME_ID) AS JOIN_KEY, '+
      'MMA_ID,ORG_ID,TIME_ID,SALES_CNT,SALES_AMT,ORDER_CNT,ORDER_AMT,'+
      'THROW_CNT,THROW_AMT, '+
      'INPRD_CNT, INPRD_AMT, RETPRD_CNT, RETPRD_AMT, TRANSPRD_CNT, TRANSPRD_AMT, '+
      'DIS_AMT, SUB_AMT  '+
      'FROM '+ V_TABLE_NAME + ' '+
      'WHERE '+
      'TIME_ID IN ('+ FP_TIME_LIST +') '+
      'AND MMA_ID IN ('+ FP_MMA_LIST +') '+
      ' AND ORG_ID IN  ('+ FP_ORG_LIST +') '+
      ' AND PRD_ID='+ FP_PRD_ID +' '+
      ')F1 LEFT JOIN '+
      '( '+
      'SELECT '+
      'DENSE_RANK() OVER(ORDER BY TIME_ID) AS JOIN_KEY, '+
      'MMA_ID,TIME_ID,ORG_ID,PRD_ID,SALES_CNT,SALES_AMT,ORDER_CNT,ORDER_AMT,'+
      'THROW_CNT,THROW_AMT, '+
      'INPRD_CNT, INPRD_AMT, RETPRD_CNT, RETPRD_AMT, TRANSPRD_CNT, TRANSPRD_AMT  '+
      'FROM '+ V_TABLE_NAME + ' '  +
      'WHERE '+
      'TIME_ID IN ('+ FP_LTIME_LIST +') '+
      'AND MMA_ID IN ('+ FP_MMA_LIST +') '+
      ' AND ORG_ID IN  ('+ FP_ORG_LIST +') '+
      ' AND PRD_ID='+ FP_PRD_ID + ' '+
      ') F2 '+
      'ON ' +
      '(F1.JOIN_KEY=F2.JOIN_KEY AND F1.ORG_ID=F2.ORG_ID AND F1.MMA_ID=F2.MMA_ID) '+
      'LEFT JOIN '+
      '( '+
      'SELECT '+
      'TIME_ID,ORG_ID,CUST_NUM '+
      'FROM PMART.BASIC_SFACT '+
      'WHERE TIME_ID IN ('+ FP_TIME_LIST + ') '+
      'AND ORG_ID IN ('+ FP_ORG_LIST + ') '+
      ') F3 ON (F1.TIME_ID=F3.TIME_ID AND F1.ORG_ID=F3.ORG_ID) ' +	  
	   ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
	EXECUTE IMMEDIATE SQLSTR;
END SP;