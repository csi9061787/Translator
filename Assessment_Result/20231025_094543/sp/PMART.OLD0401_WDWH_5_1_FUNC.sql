REPLACE PROCEDURE PMART.OLD0401_WDWH_5_1_FUNC(P_LEVEL INTEGER,P_U_DEPT INTEGER,P_DATE INTEGER,P_KND_ID INTEGER , P_GRP_ID INTEGER)
SQL SECURITY INVOKER
SP:BEGIN
	DECLARE PROCSDATE VARCHAR(10)DEFAULT '';	
	DECLARE PROCEDATE INTEGER;  
	DECLARE MSQLWHERE VARCHAR(100) DEFAULT ''; 
	DECLARE MSQLSTR_51 VARCHAR(2000) DEFAULT ''; 
	DECLARE MSQLSTR_52 VARCHAR(2000) DEFAULT ''; 
	DECLARE MSQLSTR_53 VARCHAR(2000) DEFAULT ''; 
	DECLARE MSQLSTR_50 VARCHAR(2000) DEFAULT ''; 
    CALL PMART.P_DROP_TABLE ('#VT_WDWH_5_1_FUNC');
	CALL PMART.P_DROP_TABLE ('#VT_WDWH_5_1_FUNC_1');	
	CALL PMART.P_DROP_TABLE ('#VT_WDWH_5_1_FUNC_2');
	CALL PMART.P_DROP_TABLE ('#VT_WDWH_5_1_FUNC_3');
	IF P_LEVEL = 1 THEN  
		   CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC AS
			(
				SELECT  DISTINCT DEPT_ID AS U_DEPT_ID,DEPT_NM AS U_DEPT_NM,DEPT_NO AS U_DEPT_NO,BRANCH_ID AS N_DEPT_ID,BRANCH_NM AS N_DEPT_NM,BRANCH_NO AS N_DEPT_NO
				FROM  PMART.ORG_DIM_POSI1 AS A
				INNER JOIN ( SELECT PUBLISH_DATE,KND_ID,GRP_ID,PRD_NO,PRD_NAME,KPI_DAY
				                           FROM  PMART.PCB_V_PRDANTICIPATE AS B1
										   INNER JOIN  PMART.PRD_PRD AS B2 ON B2.FM_CODE = B1.PRD_NO 
										 ) AS B ON A.KND_ID=B.KND_ID AND A.GRP_ID=B.GRP_ID
				WHERE  DEPT_ID = ''+ P_U_DEPT +''
		    ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 
	END IF ;
	IF P_LEVEL = 2 THEN  
		   CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC AS
			(
				SELECT  DISTINCT BRANCH_ID AS U_DEPT_ID,BRANCH_NM AS U_DEPT_NM,BRANCH_NO AS U_DEPT_NO,RESPON_ID AS N_DEPT_ID,RESPON_NM AS N_DEPT_NM,RESPON_NO AS N_DEPT_NO
				FROM  PMART.ORG_DIM_POSI1 AS A
				INNER JOIN ( SELECT PUBLISH_DATE,KND_ID,GRP_ID,PRD_NO,PRD_NAME,KPI_DAY
				                           FROM  PMART.PCB_V_PRDANTICIPATE AS B1
										   INNER JOIN  PMART.PRD_PRD AS B2 ON B2.FM_CODE = B1.PRD_NO 
										 ) AS B ON A.KND_ID=B.KND_ID AND A.GRP_ID=B.GRP_ID
				WHERE  BRANCH_ID = ''+ P_U_DEPT +''
		    ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 	
	END IF ;
	IF P_LEVEL = 3 THEN  
			SET PROCSDATE = CAST(CAST(P_DATE-19000000 AS DATE) AS FORMAT 'YYYY-MM-DD');
			SET PROCEDATE = CAST(CAST(CURRENT_DATE-1 AS FORMAT 'YYYYMMDD') AS INTEGER)+19000000;
			SET MSQLSTR_51 = '	CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_1 AS ( '
			                              + '	     SELECT A.RESPON_ID,A.RESPON_NM,A.RESPON_NO, '
										  + '                    B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,  '
										  + ' 					  B1.PRD_NO+'' ''+B1.PRD_NAME AS PRD_NM,KPI_DAY,  '
										  + '                    CAST(ISNULL(F.UPLOAD_STNUM)AS DECIMAL(16,6)) AS UPLOAD_STNUM,  '
										  + '                    B1.PRD_NO, ISNULL(SUM(B4.SALES_CNT)) AS NOW_SALES_CNT, '
										  + '               	CASE WHEN MAX(F.UPLOAD_STNUM) > 0 THEN  CAST(ISNULL(SUM(B4.SALES_CNT)/MAX(CAST(F.UPLOAD_STNUM AS DECIMAL(16,6))))AS DECIMAL(16,2)) ELSE 0 END AS NOW_SALES_CNT_PSD '
										  + '     	FROM  PMART.PCB_V_PRDANTICIPATE AS B1  '
										  + ' 		INNER JOIN  PMART.PRD_PRD AS B3 ON B3.FM_CODE = B1.PRD_NO  '
										  + '		INNER JOIN PMART.ORG_DIM_POSI1  AS A ON A.KND_ID=B3.KND_ID AND A.GRP_ID=B3.GRP_ID  AND SEQNO=1  '
										  + '  	LEFT  JOIN PMART.BASIC_MFACT_BUDGET AS F ON F.PRD_ID = B3.GRP_ID  AND F.TIME_ID = ' + PROCEDATE
										  + '		LEFT  JOIN PMART.BASIC_MFACT_DETAIL B4 ON B4.PRD_ID = CAST(B1.PRD_NO AS INTEGER)  AND B4.TIME_ID = ' + PROCEDATE
										  + '		WHERE  A.RESPON_ID = ' + P_U_DEPT + ' AND  B1.PUBLISH_DATE_DATE = ' '''' +PROCSDATE +'''' 
										  + ' 		GROUP BY A.RESPON_ID, A.RESPON_NM, A.RESPON_NO, B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,PRD_NM,KPI_DAY,F.UPLOAD_STNUM,B1.PRD_NO '
										  + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; ';	
			EXECUTE IMMEDIATE MSQLSTR_51;  
			SET MSQLSTR_52  = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_2 AS	( '
			                               + ' 		SELECT B1.PRD_NO ,CAST(SUM(F.UPLOAD_STNUM)AS DECIMAL(16,6)) AS W2_UPLOAD_STNUM '
										   + '			FROM  PMART.PCB_V_PRDANTICIPATE AS B1  '
										   + '			INNER JOIN  PMART.PRD_PRD AS B3 ON B3.FM_CODE = B1.PRD_NO  '
										   + ' 		INNER JOIN PMART.ORG_DIM_POSI1  AS A ON A.KND_ID=B3.KND_ID AND A.GRP_ID=B3.GRP_ID AND SEQNO=1   '
										   + '			INNER JOIN PMART.BASIC_MFACT_BUDGET AS F ON F.PRD_ID = B3.GRP_ID  '
										   + '			WHERE F.TIME_ID >= ' + P_DATE + ' AND F.TIME_ID <= '+ PROCEDATE + ' AND  B1.PUBLISH_DATE_DATE =  ' '''' +PROCSDATE +'''' 
										   + '		    GROUP BY B1.PRD_NO  '
										   + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 	';		
			EXECUTE IMMEDIATE MSQLSTR_52;  										   
			SET MSQLSTR_53  = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_3 AS	( '
			                               + ' 		SELECT  PRD_ID, ISNULL(SUM(SALES_CNT)) AS W2_SALES_CNT '
										   + '			FROM PMART.BASIC_MFACT_DETAIL AS A  '
										   + '			INNER JOIN  PMART.PCB_V_PRDANTICIPATE AS B ON B.PUBLISH_DATE_DATE =  ' '''' +PROCSDATE +''''  'AND  A.PRD_ID = CAST(B.PRD_NO AS INTEGER)'
										   + '			WHERE A.TIME_ID >= ' + P_DATE + ' AND A.TIME_ID <= '+ PROCEDATE 
										   + '		    GROUP BY PRD_ID   '
										   + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 	';		
			EXECUTE IMMEDIATE MSQLSTR_53; 
			CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC AS
			(
				SELECT  A.*, C.W2_SALES_CNT,
				                CASE WHEN MAX(W2_UPLOAD_STNUM) > 0 THEN  ISNULL(CAST(((SUM(W2_SALES_CNT)/MAX(W2_UPLOAD_STNUM))/KPI_DAY) AS DECIMAL(16,2))) ELSE 0 END AS RATE
	            FROM #VT_WDWH_5_1_FUNC_1 AS A
				LEFT JOIN #VT_WDWH_5_1_FUNC_2 AS B ON A.PRD_NO = B.PRD_NO
				LEFT JOIN #VT_WDWH_5_1_FUNC_3 AS C ON A.PRD_NO = C.PRD_ID
				GROUP BY RESPON_ID,RESPON_NM,RESPON_NO,PUBLISH_DATE_DATE,KND_ID,GRP_ID,PRD_NM,KPI_DAY,UPLOAD_STNUM,A.PRD_NO,NOW_SALES_CNT,NOW_SALES_CNT_PSD, C.W2_SALES_CNT
		    ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 				
	END IF ;
	IF P_LEVEL = 4 THEN  
			SET PROCSDATE = CAST(CAST(P_DATE-19000000 AS DATE) AS FORMAT 'YYYY-MM-DD');
			SET PROCEDATE = CAST(CAST(CURRENT_DATE-1 AS FORMAT 'YYYYMMDD') AS INTEGER)+19000000;
			IF P_KND_ID <>  0 AND  P_GRP_ID <>  0 THEN
				SET MSQLSTR_51 = '	CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_1 AS ( '
				                              + '	     SELECT B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,  '
											  + ' 					  B1.PRD_NO+'' ''+B1.PRD_NAME AS PRD_NM,KPI_DAY,  '
											  + '                    CAST(ISNULL(F.UPLOAD_STNUM)AS DECIMAL(16,6)) AS UPLOAD_STNUM,  '
											  + '                    B1.PRD_NO, A.RESPON_NM, ISNULL(SUM(B4.SALES_CNT)) AS NOW_SALES_CNT, '
											  + '               	CASE WHEN MAX(F.UPLOAD_STNUM) > 0 THEN  CAST(ISNULL(SUM(B4.SALES_CNT)/MAX(CAST(F.UPLOAD_STNUM AS DECIMAL(16,6))))AS DECIMAL(16,2)) ELSE 0 END AS NOW_SALES_CNT_PSD '
											  + '     	FROM  PMART.PCB_V_PRDANTICIPATE AS B1  '
											  + ' 		INNER JOIN  PMART.PRD_PRD AS B3 ON B3.FM_CODE = B1.PRD_NO  '
											  + '		INNER JOIN PMART.ORG_DIM_POSI1  AS A ON A.KND_ID=B3.KND_ID AND A.GRP_ID=B3.GRP_ID AND SEQNO=1  '
											  + '  	LEFT  JOIN PMART.BASIC_MFACT_BUDGET AS F ON F.PRD_ID = B3.GRP_ID  AND F.TIME_ID = ' + PROCEDATE
											  + '		LEFT  JOIN PMART.BASIC_MFACT_DETAIL B4 ON B4.PRD_ID = CAST(B1.PRD_NO AS INTEGER)  AND B4.TIME_ID = ' + PROCEDATE
											  + '		WHERE  A.KND_ID = '+P_KND_ID+' AND  A.GRP_ID = '+P_GRP_ID+'  AND  B1.PUBLISH_DATE_DATE = ' '''' +PROCSDATE +'''' 
											  + ' 		GROUP BY B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,PRD_NM,KPI_DAY,F.UPLOAD_STNUM,B1.PRD_NO,A.RESPON_NM '
											  + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; ';	
				EXECUTE IMMEDIATE MSQLSTR_51;  	
			END IF ;
			IF P_KND_ID <>  0 AND  P_GRP_ID =  0 THEN
				SET MSQLSTR_51 = '	CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_1 AS ( '
				                              + '	     SELECT B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,  '
											  + ' 					  B1.PRD_NO+'' ''+B1.PRD_NAME AS PRD_NM,KPI_DAY,  '
											  + '                    CAST(ISNULL(F.UPLOAD_STNUM)AS DECIMAL(16,6)) AS UPLOAD_STNUM,  '
											  + '                    B1.PRD_NO, A.RESPON_NM,ISNULL(SUM(B4.SALES_CNT)) AS NOW_SALES_CNT, '
											  + '               	CASE WHEN MAX(F.UPLOAD_STNUM) > 0 THEN  CAST(ISNULL(SUM(B4.SALES_CNT)/MAX(CAST(F.UPLOAD_STNUM AS DECIMAL(16,6))))AS DECIMAL(16,2)) ELSE 0 END AS NOW_SALES_CNT_PSD '
											  + '     	FROM  PMART.PCB_V_PRDANTICIPATE AS B1  '
											  + ' 		INNER JOIN  PMART.PRD_PRD AS B3 ON B3.FM_CODE = B1.PRD_NO  '
											  + '		INNER JOIN PMART.ORG_DIM_POSI1  AS A ON A.KND_ID=B3.KND_ID AND A.GRP_ID=B3.GRP_ID AND SEQNO=1   '
											  + '  	LEFT  JOIN PMART.BASIC_MFACT_BUDGET AS F ON F.PRD_ID = B3.GRP_ID  AND F.TIME_ID = ' + PROCEDATE
											  + '		LEFT  JOIN PMART.BASIC_MFACT_DETAIL B4 ON B4.PRD_ID = CAST(B1.PRD_NO AS INTEGER)  AND B4.TIME_ID = ' + PROCEDATE
											  + '		WHERE  A.KND_ID = ' +P_KND_ID+'  AND  B1.PUBLISH_DATE_DATE = ' '''' +PROCSDATE +'''' 
											  + ' 		GROUP BY B1.PUBLISH_DATE_DATE, A.KND_ID, A.GRP_ID,PRD_NM,KPI_DAY,F.UPLOAD_STNUM,B1.PRD_NO, A.RESPON_NM '
											  + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; ';	
				EXECUTE IMMEDIATE MSQLSTR_51;  	
			END IF;
			SET MSQLSTR_52  = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_2 AS	( '
			                               + ' 		SELECT B1.PRD_NO ,CAST(SUM(F.UPLOAD_STNUM)AS DECIMAL(16,6)) AS W2_UPLOAD_STNUM '
										   + '			FROM  (SELECT DISTINCT PRD_NO FROM #VT_WDWH_5_1_FUNC_1) AS B1   '
										   + '			INNER JOIN  PMART.PRD_PRD AS B3 ON B3.FM_CODE = B1.PRD_NO  '
										   + ' 		INNER JOIN PMART.BASIC_MFACT_BUDGET AS F ON F.PRD_ID = B3.GRP_ID  '
										   + '			WHERE F.TIME_ID >= ' + P_DATE + ' AND F.TIME_ID <= '+ PROCEDATE 
										   + '		    GROUP BY B1.PRD_NO  '
										   + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 	';		
			EXECUTE IMMEDIATE MSQLSTR_52;  	
			SET MSQLSTR_53  = ' CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC_3 AS	( '
			                               + ' 		SELECT  PRD_ID, ISNULL(SUM(SALES_CNT)) AS W2_SALES_CNT '
										   + '			FROM PMART.BASIC_MFACT_DETAIL AS A  '
										   + '			INNER JOIN  (SELECT DISTINCT PRD_NO FROM #VT_WDWH_5_1_FUNC_1 )  AS B ON A.PRD_ID = CAST(B.PRD_NO AS INTEGER) '
										   + '			WHERE A.TIME_ID >= ' + P_DATE + ' AND A.TIME_ID <= '+ PROCEDATE 
										   + '		    GROUP BY PRD_ID   '
										   + '  ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 	';		
			EXECUTE IMMEDIATE MSQLSTR_53; 	
			CREATE MULTISET VOLATILE TABLE #VT_WDWH_5_1_FUNC AS
			(
				SELECT  A.*, C.W2_SALES_CNT,
				                CASE WHEN MAX(W2_UPLOAD_STNUM) > 0 THEN  ISNULL(CAST(((SUM(W2_SALES_CNT)/MAX(W2_UPLOAD_STNUM))/KPI_DAY) AS DECIMAL(16,2))) ELSE 0 END AS RATE
	            FROM #VT_WDWH_5_1_FUNC_1 AS A
				LEFT JOIN #VT_WDWH_5_1_FUNC_2 AS B ON A.PRD_NO = B.PRD_NO
				LEFT JOIN #VT_WDWH_5_1_FUNC_3 AS C ON A.PRD_NO = C.PRD_ID
				GROUP BY PUBLISH_DATE_DATE,KND_ID,GRP_ID,PRD_NM,KPI_DAY,UPLOAD_STNUM,A.PRD_NO,A.RESPON_NM,NOW_SALES_CNT,NOW_SALES_CNT_PSD, C.W2_SALES_CNT
		    ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS; 				
	END IF;
END SP;