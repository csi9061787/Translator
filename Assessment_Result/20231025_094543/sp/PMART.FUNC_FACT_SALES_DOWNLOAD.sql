REPLACE PROCEDURE PMART.FUNC_FACT_SALES_DOWNLOAD
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(500),
   IN P_TIMETYPE VARCHAR(1),
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(10),
   IN P_PRDTYPE SMALLINT,
   IN P_PRDID VARCHAR(20)
)
SP:BEGIN
	DECLARE SQLSTR  VARCHAR(10000);
	DECLARE ORGWHERE VARCHAR(2000);
	DECLARE TIMENAME  VARCHAR(100);
    DECLARE TIMEWHERE  VARCHAR(200); 
	DECLARE DATSELECT  VARCHAR(500);
	DECLARE SDATSELECT  VARCHAR(500);
	DECLARE TIMESELECT  VARCHAR(50);
	DECLARE BASESELECT  VARCHAR(2000);
	DECLARE PRDWHERE  VARCHAR(50);
	DECLARE BASETABLE VARCHAR(50);
	DECLARE PI VARCHAR(50);
	SET ORGWHERE = ' WHERE 1=1 ';  
	IF P_RPTID = 1 THEN
		SET TIMESELECT = ' ';
		SET DATSELECT = ' ,DAT.THROW_CNT ,DAT.THROW_AMT ,DAT.INPRD_CNT ,DAT.INPRD_AMT ';
		SET SDATSELECT = ' ,SUM(DAT.THROW_CNT) AS THROW_CNT ,SUM(DAT.THROW_AMT) AS THROW_AMT ,SUM(DAT.INPRD_CNT) AS INPRD_CNT ,SUM(DAT.INPRD_AMT) AS INPRD_AMT ';
		SET BASESELECT = ' ,B.SALES_CNT ,B.SALES_AMT '
		+' ,CASE WHEN CAST((B.SALES_AMT - B.DIS_AMT - B.SUB_AMT) AS DECIMAL(16,0)) IS NOT NULL THEN CAST((B.SALES_AMT - B.DIS_AMT - B.SUB_AMT) AS DECIMAL(16,0)) ELSE 0 END AS AC_SALES_AMT '
		+' ,CASE WHEN CAST(B.TSALES_CNT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.TSALES_CNT AS DECIMAL(16,0)) ELSE 0 END AS TM_SALES_CNT '
		+' ,CASE WHEN CAST(B.TSALES_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.TSALES_AMT AS DECIMAL(16,0)) ELSE 0 END AS TM_SALES_AMT '
		+' ,CASE WHEN CAST(B.AC_TSALES_AMT AS DECIMAL(16,0)) IS NOT NULL THEN CAST(B.AC_TSALES_AMT AS DECIMAL(16,0)) ELSE 0 END AS TM_AC_SALES_AMT '
		+' ,B.THROW_CNT ,B.THROW_AMT ,B.INPRD_CNT ,B.INPRD_AMT ';
		SET PI = ' ';
		IF P_PRDTYPE = 3 THEN
			SET BASETABLE = ' PMART.BASIC_MFACT_DETAIL ';
		ELSE
			SET BASETABLE = ' PMART.BASIC_MFACT ';
		END IF;
	ELSEIF P_RPTID = 2 THEN
		SET TIMESELECT = ' ,DAT.TIME_RANGE ';
		SET DATSELECT = ' ';
		SET SDATSELECT = ' ';
		SET BASESELECT = ' ,B.S_CNT AS SALES_CNT ,B.S_AMT AS SALES_AMT ,B.S_REAL AS AC_SALES_AMT '
		+' ,B.T_CNT AS TM_SALES_CNT ,B.T_AMT AS TM_SALES_AMT ,B.T_REAL AS TM_AC_SALES_AMT ,B.TIME_RANGE ';
		SET PI = ' ,TIME_RANGE ';
		IF P_PRDTYPE = 3 THEN
			SET BASETABLE = ' PMART.FACT_SALES_TIME_DETAIL ';
		ELSE
			SET BASETABLE = ' PMART.FACT_SALES_TIME ';
		END IF;
	END IF;	
	IF P_ORGTYPE = 0 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.PDEPT_ID  = ' + TRIM(P_ORGID); 
	ELSEIF P_ORGTYPE = 1 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.DEPT_ID  = ' + TRIM(P_ORGID); 
	ELSEIF P_ORGTYPE = 2 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.BRANCH_ID = ' + TRIM(P_ORGID);
	ELSEIF P_ORGTYPE = 3 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.RESPON_ID = ' + P_ORGID;
	ELSEIF P_ORGTYPE = 4 THEN
		SET ORGWHERE = ORGWHERE + ' AND S.OSTORE_ID = ' + P_ORGID;
	END IF;   
   IF P_TIMETYPE = 'M' THEN
	   SET TIMENAME = 'T3.L_MONTH_NAME ';
	   SET TIMEWHERE = ' INNER JOIN PMART.TIME_M T3 ON B.TIME_ID = T3.L_MONTH_ID ';
   ELSEIF P_TIMETYPE = 'W' THEN
	   SET TIMENAME = 'T3.L_WEEK_NAME ';
	   SET TIMEWHERE = ' INNER JOIN PMART.TIME_W T3 ON B.TIME_ID = T3.L_WEEK_ID ';
   ELSE
	   SET TIMENAME = 'T3.L_DAY_NAME ';
	   SET TIMEWHERE = ' INNER JOIN PMART.TIME_D T3 ON B.TIME_ID = T3.L_DAY_ID ';
   END IF;		
   IF P_PRDTYPE = -1 THEN
	   SET PRDWHERE = ' AND B.PRD_ID = ''-1'' ';
   ELSE
	   SET PRDWHERE = ' AND B.PRD_ID = '''+P_PRDID+'''';
   END IF;
   CALL PMART.P_DROP_TABLE ('#VT_FACT_SALES_DOWNLOAD');
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_SALES_DOWNLOAD AS('	
	   					 +' SELECT DAT.PDEPT_SNAME ,DAT.DEPT_SNAME ,DAT.BRANCH_SNAME ,DAT.RESPON_NAME ,DAT.STORE_NO ,DAT.STORE_NAME '
						 +' ,DAT.TIME_ID '+TIMESELECT+' ,SUM(DAT.SALES_CNT) AS SALES_CNT ,SUM(DAT.SALES_AMT) AS SALES_AMT ,SUM(DAT.AC_SALES_AMT) AS AC_SALES_AMT '
						 +' ,SUM(DAT.TM_SALES_CNT) AS TM_SALES_CNT ,SUM(DAT.TM_SALES_AMT) AS TM_SALES_AMT ,SUM(DAT.TM_AC_SALES_AMT) AS TM_AC_SALES_AMT '+SDATSELECT
						 +' FROM ( '
						 +' SELECT DAT.PDEPT_SNAME ,DAT.DEPT_SNAME ,DAT.BRANCH_SNAME ,DAT.RESPON_NAME ,DAT.STORE_NO ,DAT.STORE_NAME '
						 +' ,DAT.TIME_ID '+TIMESELECT+' ,DAT.SALES_CNT ,DAT.SALES_AMT ,DAT.AC_SALES_AMT '
						 +' ,DAT.TM_SALES_CNT ,DAT.TM_SALES_AMT ,DAT.TM_AC_SALES_AMT '+DATSELECT
	   					 +' FROM ( '
						 +'        SELECT '+TIMENAME+' AS TIME_ID  '
						 +'        ,T1.* '+BASESELECT
						 +'        FROM '+BASETABLE+' B ' 
						 +'        INNER JOIN ( '
						 +'          SELECT PDEPT.PDEPT_SNAME ,DEPT.DEPT_SNAME ,BRANCH.BRANCH_SNAME ,RESPON.RESPON_NAME '
						 +'          ,S.OSTORE_ID ,S.STORE_NO ,S.STORE_NAME '
						 +'          FROM PMART.LAST_ORG_STORE S '
						 +'          LEFT JOIN PMART.ORG_PDEPT PDEPT ON S.PDEPT_ID = PDEPT.PDEPT_ID '
						 +'          LEFT JOIN PMART.ORG_DEPT DEPT ON S.DEPT_ID = DEPT.DEPT_ID '
						 +'          LEFT JOIN PMART.ORG_RESPON RESPON ON S.RESPON_ID = RESPON.RESPON_ID '
						 +'          LEFT JOIN PMART.ORG_BRANCH BRANCH ON S.BRANCH_ID = BRANCH.BRANCH_ID '+ TRIM(ORGWHERE)
						 +'         ) T1 ON B.ORG_ID = T1.OSTORE_ID '+PRDWHERE+TIMEWHERE
						 +'         WHERE B.TIME_ID IN ('+P_TIMEID+')' 	
						 +'         ) DAT '
						 +'         ) DAT GROUP BY DAT.PDEPT_SNAME ,DAT.DEPT_SNAME ,DAT.BRANCH_SNAME ,DAT.RESPON_NAME ,DAT.STORE_NO ,DAT.STORE_NAME ,DAT.TIME_ID'+TIMESELECT
			             + ' ) WITH DATA PRIMARY  CHARINDEX(STORE_NO'+PI+',TIME_ID) ON COMMIT PRESERVE ROWS;';						  					
        EXECUTE IMMEDIATE SQLSTR;   
END SP;