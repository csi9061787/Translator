REPLACE PROCEDURE PMART.FUNC_FACT_MEMBER
(
   IN P_RPTID SMALLINT,
   IN P_TIMEID VARCHAR(500),
   IN P_TIMETYPE VARCHAR(1),   
   IN P_ORGTYPE SMALLINT,
   IN P_ORGID VARCHAR(10),
   IN P_DISTRICTTYPE SMALLINT,
   IN P_DISTRICT VARCHAR(20)
)
SP:BEGIN
     DECLARE SQLSTR  VARCHAR(50000);
	 DECLARE ORGSELECT VARCHAR(2000);
	 DECLARE ORGWHERE VARCHAR(2000);  
	 DECLARE ORGSELECT_CALCNT VARCHAR(200);
     DECLARE ORG_CALCNT VARCHAR(200);  	  
     DECLARE TIME_CALCNT VARCHAR(500);  	 	 
     DECLARE TIMEWHERE_CALCNT  VARCHAR(500);
	 DECLARE V_CAST_TYPE VARCHAR(50);
	 DECLARE V_YDIM_VAL VARCHAR(50);
	 DECLARE DIST_CALCNT VARCHAR(50);
	 DECLARE REMDFSELECT VARCHAR(500);
	 DECLARE REMDFNSELECT VARCHAR(500);
	 DECLARE REMDFTABLE VARCHAR(1000);
	 DECLARE REMDFNTABLE VARCHAR(1000);
	 IF P_RPTID = 1  THEN
	 SET REMDFTABLE = ' LEFT JOIN '
						 			+ ' (  '
						 			+ ' SELECT T.TIME_ID , ORG_ID , SUM(AMT) AS  AMT , SUM(CUST_NUM) AS CUST_NUM  , '
									+ ' SUM(SCUST_NUM) AS SCUST_NUM , SUM(UPLOAD_STNUM) AS  UPLOAD_STNUM '
									+ ' FROM PMART.REMD_FACT_SUM D '
									+ ' LEFT JOIN '
									+ ' ( '
									+ ' 		SELECT L_DAY_ID,L_MONTH_ID AS TIME_ID FROM PMART.YMWD_TIME T '
									+ ' 		UNION ALL  '
									+ ' 		SELECT L_DAY_ID,L_YEAR_ID AS TIME_ID FROM PMART.YMWD_TIME T '
									+ ' 		UNION ALL  '
									+ ' 		SELECT L_DAY_ID,L_DAY_ID AS TIME_ID FROM PMART.YMWD_TIME T '
									+ ' ) T ON T.L_DAY_ID=D.L_DAY_ID '
									+ ' GROUP BY T.TIME_ID,D.ORG_ID  '
						 			+ ' )F '
						 			+ ' ON TMP.TIME_ID = F.TIME_ID  AND TMP.ORG_ID = F.ORG_ID ' ;
	 SET REMDFNTABLE = 	' LEFT JOIN  '
										 + ' ( '
										 + ' SELECT T.TIME_ID , ORG_ID , SUM(AMT) AS  AMT , SUM(CUST_NUM) AS CUST_NUM  ,  '
										 + ' SUM(UPLOAD_STNUM) AS  UPLOAD_STNUM '
										 + ' FROM PMART.REMD_FACT_SUM_NCIG D '
										 + ' LEFT JOIN  '
										 + ' (  '
										 + ' 		SELECT L_DAY_ID,L_MONTH_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										 + ' 		UNION ALL  '
										 + ' 		SELECT L_DAY_ID,L_YEAR_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										 + ' 		UNION ALL  '
										 + ' 		SELECT L_DAY_ID,L_DAY_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										 + ' ) T ON T.L_DAY_ID=D.L_DAY_ID '
										 + ' GROUP BY T.TIME_ID,D.ORG_ID '
										 + ' )FN '		
										 + ' ON TMP.TIME_ID = FN.TIME_ID  AND TMP.ORG_ID = FN.ORG_ID ';
	 SET REMDFSELECT = ' ,F.AMT AS AMT , F.CUST_NUM AS CUST_NUM , F.SCUST_NUM AS SCUST_NUM , F.UPLOAD_STNUM AS UPLOAD_STNUM  ';
	 SET REMDFNSELECT = ' ,FN.AMT AS AMT_NCIG , FN.CUST_NUM AS CUST_NUM_NCIG  , FN.UPLOAD_STNUM AS UPLOAD_STNUM_NCIG  ';
	 ELSEIF P_RPTID = 2  THEN
	 SET REMDFTABLE =  ' LEFT JOIN '
						 			    + ' (  '
										+ ' SELECT T.TIME_ID , ORG_ID  ,B.MMA_NO , SUM(AMT) AS  AMT , SUM(CUST_NUM) AS CUST_NUM  , '
										+ '  SUM(UPLOAD_STNUM) AS  UPLOAD_STNUM '
										+ ' FROM PMART.REMD_FACT_STYPE_SUM A '
										+ ' INNER JOIN (SELECT DISTINCT MMA_ID ,MMA_NO FROM PMART.STORE_TYPE_DIM)B '
										+ ' ON A.STYPE_ID = B.MMA_ID  '
										+ ' LEFT JOIN  '
										+ ' ( '
										+ ' 		SELECT L_DAY_ID,L_MONTH_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										+ ' 		UNION ALL  '
										+ ' 		SELECT L_DAY_ID,L_YEAR_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										+ ' 		UNION ALL  '
										+ ' 		SELECT L_DAY_ID,L_DAY_ID AS TIME_ID FROM PMART.YMWD_TIME T '
										+ ' ) T ON T.L_DAY_ID=A.L_DAY_ID '
										+ ' WHERE A.ORG_ID = -1  '
										+ ' GROUP BY T.TIME_ID,A.ORG_ID,B.MMA_NO '
										+ ' )F '
						 			    + ' ON TMP.TIME_ID = F.TIME_ID  AND TMP.ORG_ID = F.MMA_NO ' ;
	 SET REMDFNTABLE = '  ';									
	 SET REMDFSELECT = ' ,F.AMT AS AMT , F.CUST_NUM AS CUST_NUM , NULL AS SCUST_NUM , F.UPLOAD_STNUM AS UPLOAD_STNUM  ';
	 SET REMDFNSELECT = ' ,NULL AS AMT_NCIG , NULL AS CUST_NUM_NCIG  , NULL AS UPLOAD_STNUM_NCIG  ';
	 END IF;
	  SET V_YDIM_VAL ='-1';
	  SET DIST_CALCNT = ' ';
	  IF P_RPTID = 1  THEN
		   IF P_ORGTYPE <> -1 THEN
		       SET V_YDIM_VAL = P_ORGID;
		   END IF;
      ELSEIF P_RPTID = 2  THEN
		  SET DIST_CALCNT = ' SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT ';
	       IF P_DISTRICTTYPE = 1 THEN 
			   SET V_YDIM_VAL = P_DISTRICT;
		   END IF ;
      END IF;   
      SET ORGWHERE = ' WHERE 1=1 ';
	  IF P_ORGTYPE = 0 THEN
	      SET ORGSELECT = 'DEPT_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGWHERE = ORGWHERE + ' AND PDEPT_ID  = ' + TRIM(P_ORGID); 
		  SET ORGSELECT_CALCNT = ' DEPT_ID ';
		  SET ORG_CALCNT = ' PDEPT_ID ';		
	  ELSEIF P_ORGTYPE = 1 THEN
	      SET ORGSELECT = 'BRANCH_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGWHERE = ORGWHERE + ' AND DEPT_ID  = ' + TRIM(P_ORGID); 
		  SET ORGSELECT_CALCNT = ' BRANCH_ID ';
		  SET ORG_CALCNT = ' DEPT_ID ';		  
	  ELSEIF P_ORGTYPE = 2 THEN
	      SET ORGSELECT = 'RESPON_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGWHERE = ORGWHERE + ' AND BRANCH_ID = ' + TRIM(P_ORGID);
		  SET ORGSELECT_CALCNT = ' RESPON_ID ';
		  SET ORG_CALCNT = ' BRANCH_ID ';
	  ELSEIF P_ORGTYPE = 3 THEN
	      SET ORGSELECT = 'OSTORE_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGWHERE = ORGWHERE + ' AND RESPON_ID = ' + P_ORGID;
		  SET ORGSELECT_CALCNT = ' OSTORE_ID ';
		  SET ORG_CALCNT = ' RESPON_ID ';
	  ELSEIF P_ORGTYPE = 4 THEN
	      SET ORGSELECT = 'OSTORE_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGWHERE = ORGWHERE + ' AND OSTORE_ID = ' + P_ORGID;
		  SET ORGSELECT_CALCNT = ' OSTORE_ID ';
          SET ORG_CALCNT = ' OSTORE_ID ';		  
	  ELSE
	      SET ORGSELECT = 'PDEPT_ID AS ORG_ID, OSTORE_ID, SHOP_DISTTRICT_MAIN AS SHOP_DISTTRICT, NVL(SHOP_ZONE_MAIN,'''')+NVL(SHOP_ZONE_SEC1,'''')+NVL(SHOP_ZONE_SEC2,'''') AS SEC_DISTRICT';
		  SET ORGSELECT_CALCNT = ' PDEPT_ID ';
          SET ORG_CALCNT = '  CAST(-1 AS INTEGER) ';		  		  
	  END IF;   
	  IF P_RPTID = 2 THEN
	      SET V_CAST_TYPE = 'CAST('''+ TRIM(V_YDIM_VAL) +'''  AS VARCHAR(9))';
		  SET ORGSELECT_CALCNT = ' SHOP_DISTTRICT_MAIN ';
		  IF P_DISTRICTTYPE = -1 THEN
	          SET ORG_CALCNT = ORG_CALCNT+' ,CAST(''-1'' AS VARCHAR(2)) ';		  			  
		  ELSEIF P_DISTRICTTYPE = 1 THEN
		      SET ORGWHERE = ORGWHERE + ' AND SHOP_DISTTRICT_MAIN = '''  + P_DISTRICT + ''' ';
	          SET ORG_CALCNT = ORG_CALCNT+' ,SHOP_DISTTRICT_MAIN ';		  			  
		  END IF;	 		  
	  ELSE
	      SET V_CAST_TYPE = 'CAST('''+ TRIM(V_YDIM_VAL) +'''  AS INTEGER )';
	  END IF;
	  IF P_TIMETYPE = 'Y' THEN
	      SET TIMEWHERE_CALCNT = '  AND D.L_YEAR_ID IN ('+P_TIMEID+')';
		  SET TIME_CALCNT = '  L_YEAR_ID ';	
	  ELSEIF P_TIMETYPE = 'M' THEN
	      SET TIMEWHERE_CALCNT = '  AND D.L_MONTH_ID IN ('+P_TIMEID+')';
		  SET TIME_CALCNT = '  L_MONTH_ID ';	
	  ELSEIF P_TIMETYPE = 'D' THEN
	      SET TIMEWHERE_CALCNT = '  AND D.L_DAY_ID IN ('+P_TIMEID+')';
		  SET TIME_CALCNT = '  L_DAY_ID ';	
	  END IF;	
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_MEMBER_REMD_TMP');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_MEMBER');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_MEMBER_HEAD');
	  CALL PMART.P_DROP_TABLE ('#VT_FACT_MEMBER_TXDAY');
	  CALL PMART.P_DROP_TABLE ('#VT_ORG');
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_MEMBER_TXDAY AS( '
                      +'     SELECT D.'+TIME_CALCNT+'  AS TIME_ID, L_DAY_ID FROM PMART.TIME_D D ' 
	                  +'     WHERE 1=1  ' + TIMEWHERE_CALCNT 
					  + '  ) WITH DATA PRIMARY INDEX(TIME_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_ORG AS( '
                      +'     SELECT '+ORGSELECT_CALCNT+ ' AS ORG_ID ,OSTORE_ID '
					  +'     FROM  PMART.LAST_ORG_STORE '+ ORGWHERE
					  + '  ) WITH DATA PRIMARY INDEX(OSTORE_ID) ON COMMIT PRESERVE ROWS;';			
EXECUTE IMMEDIATE SQLSTR;  
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_MEMBER_REMD_TMP AS( '
						 + ' SELECT TMP.*  '
						 +  REMDFSELECT
 						 +  REMDFNSELECT
 						 + ' FROM  '
 						 + ' (  '
						 + ' SELECT T.TIME_ID,S.ORG_ID '
						 + ' ,SUM(ALL_AMT) AS ALL_TXAMT'
						 + ' ,SUM(ALL_CNT) AS ALL_TXCNT'
						 + ' ,SUM(ALL_NCIGAMT) AS ALL_NCIGTXAMT'
						 + ' ,SUM(ALL_NCIGCNT) AS ALL_NCIGTXCNT'
						 + ' ,SUM(PLAN_STNUM) AS PLAN_STNUM '
						 + ' ,SUM(M.MEMBER_AMTNET) AS MEMBER_TXAMT'
						 + ' ,SUM(M.MEMBER_CUSTCNT) AS MEMBER_TXCNT'
						 + ' ,SUM(M.MEMBER_AGNCIGAMTNET) AS MEMBER_NCIGTXAMT '
						 + ' ,SUM(M.MEMBER_AGNCIGCNT) AS MEMBER_NCIGTXCNT '
						 + ' ,SUM(M.MEMBER_NAGNCIGAMT) AS MEMBER_NAGNCIGAMT '
						 + ' ,SUM(M.MEMBER_NAGNCIGCNT) AS MEMBER_NAGNCIGCNT '
						 + ' FROM PMART.FACT_MEMBER_REMD M '
						 + ' INNER JOIN #VT_FACT_MEMBER_TXDAY T ON M.TIME_ID = T.L_DAY_ID '
						 + ' INNER JOIN #VT_ORG S ON M.ORG_ID = S.OSTORE_ID '
						 + ' GROUP BY T.TIME_ID, S.ORG_ID '
						 + ' )TMP  '
						 + REMDFTABLE
                         + REMDFNTABLE
						 + ' ) WITH DATA PRIMARY  CHARINDEX(ORG_ID,TIME_ID) ON COMMIT PRESERVE ROWS;';	
EXECUTE IMMEDIATE SQLSTR;   
SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_FACT_MEMBER AS( '		  
					 + ' SELECT DATA_TYPE ,TIME_ID ,Y_DIM '
					 + ' ,ALL_AMT_PSD ,ALL_CNT_PSD ,ALL_CUSTPRICE_PSD '
					 + ' ,MEMBER_TXAMT_PSD ,MEMBER_TXCNT_PSD ,MEMBER_CUSTPRICE_PSD '
					 + ' ,MEMBER_TXAMT ,MEMBER_TXCNT '
					 + ' ,ALL_NCIGAMT_PSD ,ALL_NCIGCNT_PSD '
					 + ' ,MEMBER_NCIGTXAMT_PSD ,MEMBER_NCIGTXCNT_PSD ,MEMBER_NCIGCUSTPRICE_PSD '
					 + ' ,MEMBER_CUSTPRICE_TX '
					 + ' ,CAST(CAST(CAST(MEMBER_NCIGTXAMT_PSD AS DECIMAL(16,4)) / DECODE(MEMBER_NAGNCIGAMT,0,NULL,MEMBER_NAGNCIGAMT)*100 AS DECIMAL(16,2)) AS VARCHAR(20)) + ''%'' AS MEMBER_NCIGAMT_RATE '
					 + ' ,CAST(CAST(CAST(MEMBER_NCIGTXCNT_PSD AS DECIMAL(16,4)) / DECODE(MEMBER_NAGNCIGCNT,0,NULL,MEMBER_NAGNCIGCNT)*100 AS DECIMAL(16,2)) AS VARCHAR(20)) + ''%'' AS MEMBER_NCIGCNT_RATE '
					 + ' ,AMT,CUST_NUM,SCUST_NUM,CAST(AMT_CUST AS DECIMAL(12,2)) AS AMT_CUST '
					 + ' ,AMT_NCIG,CUST_NUM_NCIG,CAST(AMT_CUST_NCIG AS DECIMAL(12,2)) AS AMT_CUST_NCIG  '
					 + ' ,CAST(CAST(CAST(MEMBER_TXAMT_PSD AS DECIMAL(16,4)) '
					 + ' / DECODE(AMT,0,NULL,AMT)*100 AS DECIMAL(16,2)) AS VARCHAR(20)) + ''%'' AS MEMBER_AMT_RATE '
					 + ' ,CAST(CAST(CAST(MEMBER_NCIGTXAMT_PSD AS DECIMAL(16,4)) '
					 + ' / DECODE(AMT_NCIG,0,NULL,AMT_NCIG)*100 AS DECIMAL(16,2)) AS VARCHAR(20)) + ''%'' AS MEMBER_AMT_NCIG_RATE '
					 + ' FROM ( '
					 + '   SELECT	1 DATA_TYPE, CAST(-1 AS INTEGER)  AS TIME_ID,' + V_CAST_TYPE + ' AS  Y_DIM 			,	'
					 +'  		ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0)))  /CASE	WHEN SUM(PLAN_STNUM)  =0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_AMT_PSD  			,'
					 +'  		ROUND(SUM(CAST(ALL_TXCNT AS DECIMAL(16,0)))   /CASE	WHEN SUM(PLAN_STNUM) =0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS ALL_CNT_PSD  			,'
					 +'  		ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0)))   /CASE	WHEN SUM(CAST( ALL_TXCNT AS DECIMAL(16,0)) ) =0 THEN 1 	ELSE SUM(CAST(ALL_TXCNT AS DECIMAL(16,0)) ) END,0)  AS ALL_CUSTPRICE_PSD  		,'
					 +'  		ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT_PSD  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS MEMBER_TXCNT_PSD  			,'
				   	 +'  		ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS  DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS  DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_PSD  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXCNT  			,'
					 +'  		ROUND(SUM(CAST(ALL_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGAMT_PSD  			,'
					 +'  		ROUND(SUM(CAST(ALL_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGCNT_PSD  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXAMT_PSD  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXCNT_PSD    			,'
					 +'  		ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_NCIGCUSTPRICE_PSD  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_TX  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_NAGNCIGAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGAMT  			,'
					 +'  		ROUND(SUM(CAST(MEMBER_NAGNCIGCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGCNT  			,'
					 +'		ROUND(SUM(CAST(AMT AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS AMT     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS CUST_NUM     ,'  
					 +'		ROUND(SUM(CAST(SCUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS SCUST_NUM     ,'
					 +'		SUM(CAST(AMT AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM)=0 THEN 1 	ELSE SUM(CUST_NUM) END AS AMT_CUST     ,'
					 +'		ROUND(SUM(CAST(AMT_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS AMT_NCIG     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS CUST_NUM_NCIG     ,'
					 +'		SUM(CAST(AMT_NCIG AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM_NCIG)=0 THEN 1 	ELSE SUM(CUST_NUM_NCIG) END AS AMT_CUST_NCIG     '
					 +'    FROM	#VT_FACT_MEMBER_REMD_TMP 		'
					 + '		GROUP BY ' + V_CAST_TYPE
					 + '		UNION '
					 + ' 	  SELECT 2 DATA_TYPE, TIME_ID,' + V_CAST_TYPE + ' AS  Y_DIM 			, '
					 + '   	  ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_AMT_PSD  			,'
				 	 + '	  	  ROUND(SUM(CAST(ALL_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS ALL_CNT_PSD  			,'
				 	 + '		  ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(ALL_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(ALL_TXCNT AS DECIMAL(16,0))) END,0)  AS ALL_CUSTPRICE_PSD  			,'
				 	 + '		  ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT_PSD  			,'
				 	 + '		  ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS MEMBER_TXCNT_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXCNT  			,'
					 + '		  ROUND(SUM(CAST(ALL_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGAMT_PSD  			,'
					 + '		  ROUND(SUM(CAST(ALL_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGCNT_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXAMT_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXCNT_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_NCIGCUSTPRICE_PSD  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_TX  			,'
					 + '		  ROUND(SUM(CAST(MEMBER_NAGNCIGAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGAMT  			,'
					 + '		 ROUND(SUM(CAST(MEMBER_NAGNCIGCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGCNT  		,'
					 +'		ROUND(SUM(CAST(AMT AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS AMT     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS CUST_NUM     ,'  
					 +'		ROUND(SUM(CAST(SCUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS SCUST_NUM     ,'
					 +'		SUM(CAST(AMT AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM)=0 THEN 1 	ELSE SUM(CUST_NUM) END AS AMT_CUST     ,'
					 +'		ROUND(SUM(CAST(AMT_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS AMT_NCIG     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS CUST_NUM_NCIG     ,'
					 +'		SUM(CAST(AMT_NCIG AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM_NCIG)=0 THEN 1 	ELSE SUM(CUST_NUM_NCIG) END AS AMT_CUST_NCIG     '					 
					 + ' 	   FROM #VT_FACT_MEMBER_REMD_TMP '
					 + '		GROUP BY TIME_ID '
					 + '		UNION '
					 + ' 	     SELECT 3 DATA_TYPE, CAST(-1 AS INTEGER)  AS TIME_ID, ORG_ID AS  Y_DIM 			, '
					 +'            ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_AMT_PSD  			,'
					 +'	        ROUND(SUM(CAST(ALL_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS ALL_CNT_PSD  			,'
					 +'			ROUND(SUM(CAST(ALL_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(ALL_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(ALL_TXCNT AS DECIMAL(16,0))) END,0)  AS ALL_CUSTPRICE_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)   AS MEMBER_TXCNT_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXAMT  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_TXCNT  			,'
					 +'			ROUND(SUM(CAST(ALL_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGAMT_PSD  			,'
					 +'			ROUND(SUM(CAST(ALL_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS ALL_NCIGCNT_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE	WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXAMT_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NCIGTXCNT_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_NCIGCUSTPRICE_PSD  			,'
					 +'			ROUND(SUM(CAST(MEMBER_TXAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0)))=0 THEN 1 	ELSE SUM(CAST(MEMBER_TXCNT AS DECIMAL(16,0))) END,0)  AS MEMBER_CUSTPRICE_TX  			,'
					 +'			ROUND(SUM(CAST(MEMBER_NAGNCIGAMT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGAMT  			,'
				  	 +'			ROUND(SUM(CAST(MEMBER_NAGNCIGCNT AS DECIMAL(16,0))) /CASE		WHEN SUM(PLAN_STNUM)=0 THEN 1 	ELSE SUM(PLAN_STNUM) END,0)  AS MEMBER_NAGNCIGCNT  			,'
					 +'		ROUND(SUM(CAST(AMT AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS AMT     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS CUST_NUM     ,'  
					 +'		ROUND(SUM(CAST(SCUST_NUM AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM) END,0) AS SCUST_NUM     ,'
					 +'		SUM(CAST(AMT AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM)=0 THEN 1 	ELSE SUM(CUST_NUM) END AS AMT_CUST     ,'
					 +'		ROUND(SUM(CAST(AMT_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS AMT_NCIG     ,'
					 +'		ROUND(SUM(CAST(CUST_NUM_NCIG AS DECIMAL(16,0))) /CASE		WHEN SUM(UPLOAD_STNUM_NCIG)=0 THEN 1 	ELSE SUM(UPLOAD_STNUM_NCIG) END,0) AS CUST_NUM_NCIG     ,'
					 +'		SUM(CAST(AMT_NCIG AS DECIMAL(16,4))) /CASE		WHEN SUM(CUST_NUM_NCIG)=0 THEN 1 	ELSE SUM(CUST_NUM_NCIG) END AS AMT_CUST_NCIG     '					 
					 + ' 		FROM #VT_FACT_MEMBER_REMD_TMP '
					 + '			GROUP BY Y_DIM '
					 + '		UNION '
					 + ' 		SELECT 4 DATA_TYPE, TIME_ID, ORG_ID AS  Y_DIM  			,'
					 +'            ROUND(CAST(ALL_TXAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS ALL_AMT_PSD  			,'
					 +'   			ROUND(CAST(ALL_TXCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)   AS ALL_CNT_PSD  			,'
					 +'   			ROUND(CAST(ALL_TXAMT AS DECIMAL(16,0)) /CASE		WHEN CAST(ALL_TXCNT AS DECIMAL(16,0))=0 THEN 1 	ELSE CAST(ALL_TXCNT AS DECIMAL(16,0)) END,0)  AS ALL_CUSTPRICE_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_TXAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_TXAMT_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_TXCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)   AS MEMBER_TXCNT_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_TXAMT AS DECIMAL(16,0)) /CASE		WHEN CAST(MEMBER_TXCNT AS DECIMAL(16,0))=0 THEN 1 	ELSE CAST(MEMBER_TXCNT AS DECIMAL(16,0)) END,0)  AS MEMBER_CUSTPRICE_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_TXAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_TXAMT  			,'
					 +'   			ROUND(CAST(MEMBER_TXCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_TXCNT  			,'
					 +'   			ROUND(CAST(ALL_NCIGTXAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS ALL_NCIGAMT_PSD  			,'
					 +'   			ROUND(CAST(ALL_NCIGTXCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS ALL_NCIGCNT_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_NCIGTXAMT_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_NCIGTXCNT_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_NCIGTXAMT AS DECIMAL(16,0)) /CASE		WHEN CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0))=0 THEN 1 	ELSE CAST(MEMBER_NCIGTXCNT AS DECIMAL(16,0)) END,0)  AS MEMBER_NCIGCUSTPRICE_PSD  			,'
					 +'   			ROUND(CAST(MEMBER_TXAMT AS DECIMAL(16,0)) /CASE		WHEN CAST(MEMBER_TXCNT AS DECIMAL(16,0))=0 THEN 1 	ELSE CAST(MEMBER_TXCNT AS DECIMAL(16,0)) END,0)  AS MEMBER_CUSTPRICE_TX  			,'
					 +'   			ROUND(CAST(MEMBER_NAGNCIGAMT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_NAGNCIGAMT  			,'
					 +'   			ROUND(CAST(MEMBER_NAGNCIGCNT AS DECIMAL(16,0)) /CASE		WHEN PLAN_STNUM=0 THEN 1 	ELSE PLAN_STNUM END,0)  AS MEMBER_NAGNCIGCNT  			,'
					 +'		ROUND(CAST(AMT AS DECIMAL(16,0)) /CASE		WHEN UPLOAD_STNUM=0 THEN 1 	ELSE UPLOAD_STNUM END,0) AS AMT  			,'
					 +'		ROUND(CAST(CUST_NUM AS DECIMAL(16,0)) /CASE		WHEN UPLOAD_STNUM=0 THEN 1	ELSE UPLOAD_STNUM END,0) AS CUST_NUM  			,'
					 +'		ROUND(CAST(SCUST_NUM AS DECIMAL(16,0)) /CASE		WHEN UPLOAD_STNUM=0 THEN 1 	ELSE UPLOAD_STNUM END,0) AS SCUST_NUM  			,'
					 +'		CAST(AMT AS DECIMAL(16,4)) /CASE		WHEN CUST_NUM=0 THEN 1 	ELSE CUST_NUM END AS AMT_CUST  			,'
					 +'		ROUND(CAST(AMT_NCIG AS DECIMAL(16,0)) /CASE		WHEN UPLOAD_STNUM_NCIG=0 THEN 1 	ELSE UPLOAD_STNUM_NCIG END,0) AS AMT_NCIG  			,'
					 +'		ROUND(CAST(CUST_NUM_NCIG AS DECIMAL(16,0)) /CASE		WHEN UPLOAD_STNUM_NCIG=0 THEN 1 	ELSE UPLOAD_STNUM_NCIG END,0) AS CUST_NUM_NCIG  			,'
					 +'		CAST(AMT_NCIG AS DECIMAL(16,4)) /CASE		WHEN CUST_NUM_NCIG=0 THEN 1 	ELSE CUST_NUM_NCIG END AS AMT_CUST_NCIG  			'					
					 + ' 		FROM #VT_FACT_MEMBER_REMD_TMP '
					 + '			) DAT '
					  + ' ) WITH DATA PRIMARY INDEX(DATA_TYPE,TIME_ID,Y_DIM) ON COMMIT PRESERVE ROWS;';
EXECUTE IMMEDIATE SQLSTR;   
IF P_RPTID = 2 THEN
	CALL PMART.P_DROP_TABLE ('#VT_DIST_YDIM');
	SET SQLSTR = ' CREATE MULTISET VOLATILE TABLE #VT_DIST_YDIM AS( '
	                      +'     SELECT DISTINCT V.Y_DIM AS SHOPDIST_ID,S.SHOPDIST_NAME AS SHOPDIST_NAME ' 
		                  +'       FROM #VT_FACT_MEMBER V  '
						  +'       JOIN PMART.VW_SHOPDIST_DIM S ON V.Y_DIM = S.SHOPDIST_ID '
						  + '  ) WITH DATA PRIMARY INDEX(SHOPDIST_ID) ON COMMIT PRESERVE ROWS;';			
	EXECUTE IMMEDIATE SQLSTR;   
END IF;
END SP;