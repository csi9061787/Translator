REPLACE PROCEDURE PMART.POSK1_2_FUNC(P_L_DAY_ID VARCHAR(2000),
									 P_PRD_ID VARCHAR(2000),
									 P_ORG_LEVEL VARCHAR(2000),
									 P_ORG_ID VARCHAR(2000),
									 P_DATE_TYPE VARCHAR(2000),
									 P_BUSINESS_AREA VARCHAR(2000),
									 P_PRD_TYPE VARCHAR(2000),
									 P_TABLE_ID VARCHAR(2000))
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR  VARCHAR(64000); 	
   DECLARE V_TABLE_NAME VARCHAR(1000);
   DECLARE V_BUSINESS_AREA VARCHAR(1000);
   DECLARE V_PRD_CONDITION VARCHAR(3000);
   DECLARE V_Y_ID VARCHAR(1000);
   DECLARE V_BASIC_STFACT VARCHAR(1000);
    DECLARE SQLWEEK VARCHAR(300);
   CALL PMART.P_DROP_TABLE ('#VT_POSK1_2_FUNC_'+P_TABLE_ID); 
   CASE P_BUSINESS_AREA 
        WHEN '-1' THEN 
			CASE P_PRD_TYPE 
				 WHEN 'P' THEN 
					 CASE P_ORG_LEVEL
						  WHEN '3'  THEN 
							SET V_TABLE_NAME = 'PMART.BASIC_MFACT_DETAIL P';
						  ELSE
							SET V_TABLE_NAME = 'PMART.BASIC_MFACT P';
					  END CASE;
					  SET V_BUSINESS_AREA = '';
					  SET V_PRD_CONDITION = ' AND P.PRD_ID IN('+ P_PRD_ID +') AND P.PRD_ID = D1.PRD_ID ';
                      SET V_Y_ID = '  P.PRD_ID';
                      SET V_BASIC_STFACT = 'PMART.BASIC_STFACT_DETAIL';
				 WHEN 'L' THEN 
					  SET V_TABLE_NAME = 'PMART.PRD_LINK_DIM PLN, PMART.BASIC_MLFACT P';
                      SET V_BUSINESS_AREA = ' AND P.PRD_ID = PLN.LINK_ID ';
                      SET V_PRD_CONDITION = ' AND PLN.PRD_ID IN('+ P_PRD_ID +') AND PLN.PRD_ID = D1.PRD_ID ';
                      SET V_Y_ID = '  PLN.PRD_ID';
                      SET V_BASIC_STFACT = 'PMART.BASIC_STLFACT';
			END CASE;
		ELSE
			CASE P_PRD_TYPE 
				 WHEN 'P' THEN 
					 CASE P_ORG_LEVEL
						  WHEN '3'  THEN 
							SET V_TABLE_NAME = 'PMART.LATEST_ORG_TYPE_DIM ORG, PMART.BASIC_MFACT_DETAIL P';
							SET V_BUSINESS_AREA = ' AND P.ORG_ID = ORG.OSTORE_ID AND ORG.MMA_ID = '+ P_BUSINESS_AREA;
						  ELSE
							SET V_TABLE_NAME = 'PMART.BASIC_MFACT_SHOP P';
							SET V_BUSINESS_AREA = ' AND P.MMA_ID = '+ P_BUSINESS_AREA;
					  END CASE;
					  SET V_PRD_CONDITION = ' AND P.PRD_ID IN('+ P_PRD_ID +') AND P.PRD_ID = D1.PRD_ID ';
                      SET V_Y_ID = '  P.PRD_ID';
                      SET V_BASIC_STFACT = 'PMART.BASIC_STFACT_DETAIL';
				 WHEN 'L' THEN 
					  SET V_TABLE_NAME = 'PMART.PRD_LINK_DIM PLN, PMART.BASIC_MLFACT_SHOP P';
                      SET V_BUSINESS_AREA = ' AND P.PRD_ID = PLN.LINK_ID AND P.MMA_ID = '+ P_BUSINESS_AREA;
                      SET V_PRD_CONDITION = ' AND PLN.PRD_ID IN('+ P_PRD_ID +') AND PLN.PRD_ID = D1.PRD_ID ';
                      SET V_Y_ID = '  PLN.PRD_ID';
                      SET V_BASIC_STFACT = 'PMART.BASIC_STLFACT';
			END CASE;
	END CASE;
	CASE P_DATE_TYPE
		WHEN 'D' THEN  
               SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSK1_2_FUNC_'+P_TABLE_ID+'  AS('+
                   'SELECT P.TIME_ID,'+
					V_Y_ID+','+
				   '  P.ORDER_AMT,'+
				   '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.ORDER_AMT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS ORDER_AMT_PSD ,'+
				   '  P.INPRD_AMT AS INPRD_AMT,'+
                   '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.INPRD_AMT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS INPRD_AMT_PSD ,'+
				   '  P.SALES_AMT ,'+
				   '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.SALES_AMT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS SALES_AMT_PSD ,'+
				   '  P.DIS_AMT+P.SUB_AMT AS DISCOUNT_AMT ,'+
				   '  (P.SALES_AMT - P.DIS_AMT - P.SUB_AMT) AS REAL_SALES_AMT ,'+
				   '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST((P.SALES_AMT-P.DIS_AMT-P.SUB_AMT) AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS REAL_SALES_AMT_PSD ,'+
				   '  ((P.SALES_AMT - P.DIS_AMT - P.SUB_AMT)-P.SALES_UNTAX_COST) AS GP_SALE_AMT ,'+
				   '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE (CAST((P.SALES_AMT - P.DIS_AMT - P.SUB_AMT) AS DECIMAL(18,6)) - P.SALES_UNTAX_COST)/D2.STNUM_STORE_NUM END AS GP_SALE_AMT_PSD ,'+
				   '  CASE WHEN P.ORDER_AMT = 0 THEN 0 ELSE CAST((P.SALES_AMT - P.DIS_AMT - P.SUB_AMT) AS DECIMAL(18,6))/P.ORDER_AMT*100 END AS ORDER_SALES_AMT_RATE ,'+
        		   '  CASE WHEN P.INPRD_AMT = 0 THEN 0 ELSE CAST((P.SALES_AMT - P.DIS_AMT - P.SUB_AMT) AS DECIMAL(18,6))/P.INPRD_AMT*100 END AS INPRD_SALES_AMT_RATE ,'+
          	       '  P.ORDER_CNT ,'+
          	       '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.ORDER_CNT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS ORDER_CNT_PSD ,'+
          	       '  INPRD_CNT ,'+
          	       '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.INPRD_CNT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS INPRD_CNT_PSD ,'+
          	       '  P.SALES_CNT ,'+
      	           '  CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.SALES_CNT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM END AS SALES_CNT_PSD ,'+
          	       '  CASE WHEN P.ORDER_CNT = 0 THEN 0 ELSE CAST(P.SALES_CNT AS DECIMAL(18,6))/P.ORDER_CNT*100 END AS ORDER_SALES_CNT_RATE ,'+
          	       '  CASE WHEN P.INPRD_CNT = 0 THEN 0 ELSE CAST(P.SALES_CNT AS DECIMAL(18,6))/P.INPRD_CNT*100 END AS INPRD_SALES_CNT_RATE ,'+
          	       '  CASE WHEN NP.PRD_ANTICIPATE = 0 THEN 0 ELSE CASE WHEN D2.STNUM_STORE_NUM = 0 THEN 0 ELSE CAST(P.SALES_CNT AS DECIMAL(18,6))/D2.STNUM_STORE_NUM/(NP.PRD_ANTICIPATE/7) END END AS SALES_CNT_RATE ,'+
          	       '  (P.Y_ORDER_SALES_AMT) AS Y_REAL_SALES_AMT ,'+
          	       '  CASE WHEN D1.Y_ORDER_STNUM = 0 THEN 0 ELSE CAST(P.Y_ORDER_SALES_AMT AS DECIMAL(18,6))/D1.Y_ORDER_STNUM END AS Y_REAL_SALES_AMT_PSD ,'+
          	       '  (P.Y_ORDER_SALES_CNT) AS Y_SALES_CNT ,'+
          	       '  CASE WHEN D1.Y_ORDER_STNUM = 0 THEN 0 ELSE CAST(P.Y_ORDER_SALES_CNT AS DECIMAL(18,6))/D1.Y_ORDER_STNUM END AS Y_SALES_CNT_PSD ,'+
          	       '  D1.Y_ORDER_STORE_NUM AS Y_STORE_CNT, ' +
          	       '  CASE WHEN D2.MAST_STORE_NUM = 0 THEN 0 ELSE CAST(D1.Y_ORDER_STORE_NUM AS DECIMAL(18,6))/D2.MAST_STORE_NUM*100 END AS Y_STORE_RATE, '+
          	       '  (P.ORDER_SALES_AMT) AS ORDER_REAL_SALES_AMT ,'+
          	       '  CASE WHEN D1.ORDER_STNUM = 0 THEN 0 ELSE CAST(P.ORDER_SALES_AMT AS DECIMAL(18,6))/D1.ORDER_STNUM END AS ORDER_REAL_SALES_AMT_PSD ,'+
          	       '  (P.ORDER_SALES_CNT) AS ORDER_SALES_CNT ,'+
          	       '  CASE WHEN D1.ORDER_STNUM = 0 THEN 0 ELSE CAST(P.ORDER_SALES_CNT AS DECIMAL(18,6))/D1.ORDER_STNUM END AS ORDER_SALES_CNT_PSD ,'+
          	       '  D1.ORDER_STORE_NUM AS ORDER_STORE_CNT, '+
          	       '  CASE WHEN D2.MAST_STORE_NUM = 0 THEN 0 ELSE CAST(D1.ORDER_STORE_NUM AS DECIMAL(18,6))/D2.MAST_STORE_NUM*100 END AS ORDER_STORE_RATE, '+
          	       '  (P.INPRD_SALES_AMT) AS INPRD_REAL_SALES_AMT ,'+
          	       '  CASE WHEN D1.INPRD_STNUM = 0 THEN 0 ELSE CAST(P.INPRD_SALES_AMT AS DECIMAL(18,6))/D1.INPRD_STNUM END AS INPRD_REAL_SALES_AMT_PSD ,'+
          	       '  (P.INPRD_SALES_CNT) AS INPRD_SALES_CNT ,'+
          	       '  CASE WHEN D1.INPRD_STNUM = 0 THEN 0 ELSE CAST(P.INPRD_SALES_CNT AS DECIMAL(18,6))/D1.INPRD_STNUM END AS INPRD_SALES_CNT_PSD ,'+
          	       '  D1.INPRD_STORE_NUM AS INPRD_STORE_CNT, '+
          	       '  CASE WHEN D2.MAST_STORE_NUM = 0 THEN 0 ELSE CAST(D1.INPRD_STORE_NUM AS DECIMAL(18,6))/D2.MAST_STORE_NUM*100 END AS INPRD_STORE_RATE, '+
          	       '  CASE WHEN D1.SALES_STNUM = 0 THEN 0 ELSE CAST(P.SALES_AMT AS DECIMAL(18,6))/D1.SALES_STNUM END AS SALES_SALES_AMT_PSD ,'+
          	       '  CASE WHEN D1.SALES_STNUM = 0 THEN 0 ELSE CAST(P.SALES_CNT AS DECIMAL(18,6))/D1.SALES_STNUM END AS SALES_SALES_CNT_PSD ,'+
          	       '  CASE WHEN D1.SALES_STNUM = 0 THEN 0 ELSE CAST(P.SALES_UNTAX_REAL_AMT AS DECIMAL(18,6))/D1.SALES_STNUM END AS SALES_REAL_SALES_PSD ,'+
          	       '  CASE WHEN D1.SALES_STNUM = 0 THEN 0 ELSE CAST((P.SALES_UNTAX_REAL_AMT-P.SALES_UNTAX_COST) AS DECIMAL(18,6))/D1.SALES_STNUM END AS SALES_GP_SALES_PSD    ,'+
          	       '  D1.SALES_STORE_NUM AS SALES_STORE_CNT, '+
          	       '  CASE WHEN D2.MAST_STORE_NUM = 0 THEN 0 ELSE CAST(D1.SALES_STORE_NUM AS DECIMAL(18,6))/D2.MAST_STORE_NUM*100 END AS SALES_STORE_RATE, '+
          	       '  (P.THROW_AMT) AS THROW_THROW_AMT ,'+
          	       '  CASE WHEN D1.THROW_STNUM = 0 THEN 0 ELSE CAST(P.THROW_AMT AS DECIMAL(18,6))/D1.THROW_STNUM END AS THROW_THROW_AMT_PSD ,'+
          	       '  (P.THROW_CNT) AS THROW_THROW_CNT ,'+
          	       '  CASE WHEN D1.THROW_STNUM = 0 THEN 0 ELSE CAST(P.THROW_CNT AS DECIMAL(18,6))/D1.THROW_STNUM END AS THROW_THROW_CNT_PSD ,'+
          	       '  D1.THROW_STORE_NUM AS THROW_STORE_CNT, '+
          	       '  CASE WHEN D2.MAST_STORE_NUM = 0 THEN 0 ELSE CAST(D1.THROW_STORE_NUM AS DECIMAL(18,6))/D2.MAST_STORE_NUM*100 END AS THROW_STORE_RATE, '+
          	       '  NP.PRD_ANTICIPATE/7 AS EXPECT_SALES_CNT,'+
          	       '  D2.STNUM_STORE_NUM AS UPLOAD_STNUM '+
          	       ' FROM '+ V_TABLE_NAME +' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, '+
          	       '    (SELECT B1.TIME_ID, B1.PRD_ID, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.SALES_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.ORDER_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.THROW_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.INPRD_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.Y_ORDER_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM '+
          	       '    FROM PMART.BASIC_MAST_FACT A1, PMART.BASIC_STFACT_DETAIL B1, PMART.LAST_ORG_DIM_MASK Y WHERE A1.TIME_ID = B1.TIME_ID AND A1.TIME_ID IN('+ P_L_DAY_ID +') AND B1.PRD_ID IN('+ P_PRD_ID +') AND Y.ORG_ID= '+ P_ORG_ID +') D1, '+
          	       '    (SELECT A1.TIME_ID, '+
          	       '        BIT_EXTRACT(BIT_AND(A1.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(A1.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM '+
          	       '    FROM PMART.BASIC_MAST_FACT A1, PMART.LAST_ORG_DIM_MASK Y WHERE Y.ORG_ID= '+ P_ORG_ID +' AND A1.TIME_ID IN('+ P_L_DAY_ID +') ) D2 '+
          	       ' WHERE P.ORG_ID = '+ P_ORG_ID +
          	       ' AND P.TIME_ID IN('+ P_L_DAY_ID +') '+
          	       V_PRD_CONDITION+
          	       V_BUSINESS_AREA+
          	       ' AND P.TIME_ID = D1.TIME_ID '+
          	       ' AND P.TIME_ID = D2.TIME_ID '+
          	       ' AND D1.PRD_ID = '+ V_Y_ID +
               ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';  
        WHEN  'W' THEN   
			 CALL PMART.P_DROP_TABLE ('#VT_YMWD_TIME_W2');   
		    SET SQLWEEK ='CREATE MULTISET VOLATILE TABLE #VT_YMWD_TIME_W2  AS('+
				  				   ' SELECT L_DAY_ID,  L_WEEK_ID FROM PMART.YMWD_TIME_W2 WHERE L_WEEK_ID IN ('+ P_L_DAY_ID +')'
			') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;'; 	   	   
			EXECUTE IMMEDIATE SQLWEEK;
               SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSK1_2_FUNC_'+P_TABLE_ID+'  AS('+
                   'SELECT B.L_WEEK_ID AS TIME_ID,'+
				   V_Y_ID+','+
          	       '  SUM(P.ORDER_AMT) AS ORDER_AMT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.ORDER_AMT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS ORDER_AMT_PSD ,'+
          	       '  SUM(P.INPRD_AMT) AS INPRD_AMT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.INPRD_AMT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS INPRD_AMT_PSD ,'+
          	       '  SUM(P.SALES_AMT) AS SALES_AMT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_AMT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS SALES_AMT_PSD ,'+
          	       '  SUM(P.DIS_AMT+P.SUB_AMT) AS DISCOUNT_AMT ,'+
          	       '  SUM(P.SALES_AMT-P.DIS_AMT-P.SUB_AMT) AS REAL_SALES_AMT ,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_AMT-P.DIS_AMT-P.SUB_AMT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS REAL_SALES_AMT_PSD ,'+
          	       '  SUM((P.SALES_AMT-P.DIS_AMT-P.SUB_AMT)-P.SALES_UNTAX_COST) AS GP_SALE_AMT ,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM((P.SALES_AMT-P.DIS_AMT-P.SUB_AMT)-P.SALES_UNTAX_COST) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS GP_SALE_AMT_PSD ,'+
          	       '  CASE WHEN SUM(P.ORDER_AMT) = 0 THEN 0 ELSE CAST(SUM(P.SALES_AMT-P.DIS_AMT-P.SUB_AMT) AS DECIMAL(18,6))/SUM(P.ORDER_AMT)*100 END AS ORDER_SALES_AMT_RATE ,'+
          	       '  CASE WHEN SUM(P.INPRD_AMT) = 0 THEN 0 ELSE CAST(SUM(P.SALES_AMT-P.DIS_AMT-P.SUB_AMT) AS DECIMAL(18,6))/SUM(P.INPRD_AMT)*100 END AS INPRD_SALES_AMT_RATE ,'+
          	       '  SUM(P.ORDER_CNT) AS ORDER_CNT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.ORDER_CNT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS ORDER_CNT_PSD ,'+
          	       '  SUM(P.INPRD_CNT) AS INPRD_CNT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.INPRD_CNT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS INPRD_CNT_PSD ,'+
          	       '  SUM(P.SALES_CNT) AS SALES_CNT,'+
          	       '  CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_CNT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)*7 END AS SALES_CNT_PSD ,'+
          	       '  CASE WHEN SUM(P.ORDER_CNT) = 0 THEN 0 ELSE CAST(SUM(P.SALES_CNT) AS DECIMAL(18,6))/SUM(P.ORDER_CNT)*100 END AS ORDER_SALES_CNT_RATE ,'+
          	       '  CASE WHEN SUM(P.INPRD_CNT) = 0 THEN 0 ELSE CAST(SUM(P.SALES_CNT) AS DECIMAL(18,6))/SUM(P.INPRD_CNT)*100 END AS INPRD_SALES_CNT_RATE ,'+
          	       '  CASE WHEN SUM(NP.PRD_ANTICIPATE) = 0 THEN 0 ELSE CASE WHEN SUM(D2.STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_CNT) AS DECIMAL(18,6))/SUM(D2.STNUM_STORE_NUM)/(SUM(NP.PRD_ANTICIPATE)/7) END END AS SALES_CNT_RATE ,'+
          	       '  SUM(P.Y_ORDER_SALES_AMT) AS Y_REAL_SALES_AMT ,'+
          	       '  CASE WHEN SUM(D1.Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.Y_ORDER_SALES_AMT) AS DECIMAL(18,6))/SUM(D1.Y_ORDER_STNUM)*7 END AS Y_REAL_SALES_AMT_PSD ,'+
          	       '  SUM(P.Y_ORDER_SALES_CNT) AS Y_SALES_CNT ,'+
          	       '  CASE WHEN SUM(D1.Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.Y_ORDER_SALES_CNT) AS DECIMAL(18,6))/SUM(D1.Y_ORDER_STNUM)*7 END AS Y_SALES_CNT_PSD ,'+
          	       '  SUM(D1.Y_ORDER_STORE_NUM) AS Y_STORE_CNT, ' +
          	       '  CASE WHEN SUM(D2.MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(D1.Y_ORDER_STORE_NUM) AS DECIMAL(18,6))/SUM(D2.MAST_STORE_NUM)*100 END AS Y_STORE_RATE, '+
          	       '  SUM(P.ORDER_SALES_AMT) AS ORDER_REAL_SALES_AMT ,'+
          	       '  CASE WHEN SUM(D1.ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.ORDER_SALES_AMT) AS DECIMAL(18,6))/SUM(D1.ORDER_STNUM)*7 END AS ORDER_REAL_SALES_AMT_PSD ,'+
          	       '  SUM(P.ORDER_SALES_CNT) AS ORDER_SALES_CNT ,'+
          	       '  CASE WHEN SUM(D1.ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.ORDER_SALES_CNT) AS DECIMAL(18,6))/SUM(D1.ORDER_STNUM)*7 END AS ORDER_SALES_CNT_PSD ,'+
          	       '  SUM(D1.ORDER_STORE_NUM) AS ORDER_STORE_CNT, '+
          	       '  CASE WHEN SUM(D2.MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(D1.ORDER_STORE_NUM) AS DECIMAL(18,6))/SUM(D2.MAST_STORE_NUM)*100 END AS ORDER_STORE_RATE, '+
          	       '  SUM(P.INPRD_SALES_AMT) AS INPRD_REAL_SALES_AMT ,'+
          	       '  CASE WHEN SUM(D1.INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.INPRD_SALES_AMT) AS DECIMAL(18,6))/SUM(D1.INPRD_STNUM)*7 END AS INPRD_REAL_SALES_AMT_PSD ,'+
          	       '  SUM(P.INPRD_SALES_CNT) AS INPRD_SALES_CNT ,'+
          	       '  CASE WHEN SUM(D1.INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.INPRD_SALES_CNT) AS DECIMAL(18,6))/SUM(D1.INPRD_STNUM)*7 END AS INPRD_SALES_CNT_PSD ,'+
          	       '  SUM(D1.INPRD_STORE_NUM) AS INPRD_STORE_CNT, '+
          	       '  CASE WHEN SUM(D2.MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(D1.INPRD_STORE_NUM) AS DECIMAL(18,6))/SUM(D2.MAST_STORE_NUM)*100 END AS INPRD_STORE_RATE, '+
          	       '  CASE WHEN SUM(D1.SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_AMT) AS DECIMAL(18,6))/SUM(D1.SALES_STNUM)*7 END AS SALES_SALES_AMT_PSD ,'+
          	       '  CASE WHEN SUM(D1.SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_CNT) AS DECIMAL(18,6))/SUM(D1.SALES_STNUM*7) END AS SALES_SALES_CNT_PSD ,'+
          	       '  CASE WHEN SUM(D1.SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_UNTAX_REAL_AMT) AS DECIMAL(18,6))/SUM(D1.SALES_STNUM)*7 END AS SALES_REAL_SALES_PSD ,'+
          	       '  CASE WHEN SUM(D1.SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.SALES_UNTAX_REAL_AMT)-SUM(SALES_UNTAX_COST) AS DECIMAL(18,6))/SUM(D1.SALES_STNUM)*7 END AS SALES_GP_SALES_PSD ,'+
          	       '  SUM(D1.SALES_STORE_NUM) AS SALES_STORE_CNT, '+
          	       '  CASE WHEN SUM(D2.MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(D1.SALES_STORE_NUM) AS DECIMAL(18,6))/SUM(D2.MAST_STORE_NUM)*100 END AS SALES_STORE_RATE, '+
          	       '  SUM(P.THROW_AMT) AS THROW_THROW_AMT ,'+
          	       '  CASE WHEN SUM(D1.THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.THROW_AMT) AS DECIMAL(18,6))/SUM(D1.THROW_STNUM)*7 END AS THROW_THROW_AMT_PSD ,'+
          	       '  SUM(P.THROW_CNT) AS THROW_THROW_CNT ,'+
          	       '  CASE WHEN SUM(D1.THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(P.THROW_CNT) AS DECIMAL(18,6))/SUM(D1.THROW_STNUM)*7 END AS THROW_THROW_CNT_PSD ,'+
          	       '  SUM(D1.THROW_STORE_NUM) AS THROW_STORE_CNT, '+
          	       '  CASE WHEN SUM(D2.MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(D1.THROW_STORE_NUM) AS DECIMAL(18,6))/SUM(D2.MAST_STORE_NUM)*100 END AS THROW_STORE_RATE, '+
          	       '  SUM(NP.PRD_ANTICIPATE) AS EXPECT_SALES_CNT,'+
          	       '  SUM(D2.STNUM_STORE_NUM) AS UPLOAD_STNUM'+
          	       ' FROM '+ V_TABLE_NAME +' '+
				   ' JOIN #VT_YMWD_TIME_W2 B ON P.TIME_ID = B.L_DAY_ID '+
				   ' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO , '+
          	       '    (SELECT B1.TIME_ID, B1.PRD_ID, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.SALES_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.ORDER_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.THROW_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.INPRD_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(BIT_AND(B1.Y_ORDER_STORE_NUM,A1.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(B1.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM '+
          	       '    FROM PMART.BASIC_MAST_FACT A1, '+V_BASIC_STFACT+' B1, PMART.LAST_ORG_DIM_MASK Y '+
				   '    WHERE A1.TIME_ID = B1.TIME_ID AND B1.PRD_ID IN('+ P_PRD_ID +') ' +
				   '    AND A1.TIME_ID IN  (SELECT L_DAY_ID FROM  #VT_YMWD_TIME_W2) AND Y.ORG_ID= '+ P_ORG_ID +') D1, '+
          	       '    (SELECT A1.TIME_ID, '+
          	       '        BIT_EXTRACT(BIT_AND(A1.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM, '+
          	       '        BIT_EXTRACT(BIT_AND(A1.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM '+
          	       '    FROM PMART.BASIC_MAST_FACT A1, PMART.LAST_ORG_DIM_MASK Y WHERE Y.ORG_ID= '+ P_ORG_ID +') D2 '+
          	       ' WHERE P.ORG_ID = '+ P_ORG_ID +
          	       V_PRD_CONDITION+
          	       V_BUSINESS_AREA+
          	       ' AND P.TIME_ID = D1.TIME_ID '+
          	       ' AND P.TIME_ID = D2.TIME_ID '+
          	       ' AND D1.PRD_ID = '+ V_Y_ID +
          	       ' GROUP BY B.L_WEEK_ID, ' + V_Y_ID +
               ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;';
        END CASE ;      
	EXECUTE IMMEDIATE SQLSTR;
END SP;