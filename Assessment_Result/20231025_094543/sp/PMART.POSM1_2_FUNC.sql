REPLACE PROCEDURE PMART.POSM1_2_FUNC(P_DATE_TYPE VARCHAR(2000),
									 P_L_DAY_ID VARCHAR(2000),
									 P_PRD_ID VARCHAR(2000),
									 P_ISTHOUSAND VARCHAR(2000),
									 P_MR_ID VARCHAR(2000))
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(10000);
   DECLARE V_MR_SUM VARCHAR(1000);
   DECLARE V_SQL VARCHAR(5000);
   DECLARE V_STRING VARCHAR(6000);
   CALL PMART.P_DROP_TABLE ('#VT_POSM1_2_FUNC'); 
   SET V_MR_SUM = 'SUM(M.ORDER_AMT) AS ORDER_AMT, '+
           'SUM(M.INPRD_AMT) AS INPRD_AMT, '+
           'SUM(M.SALES_AMT) AS SALES_AMT, '+
           'SUM(M.ORDER_CNT) AS ORDER_CNT, '+
           'SUM(M.INPRD_CNT) AS INPRD_CNT, '+
           'SUM(M.SALES_CNT) AS SALES_CNT, '+
           'SUM(M.DC_INPRD_AMT) AS DC_INPRD_AMT, '+
           'SUM(M.DC_INPRD_CNT) AS DC_INPRD_CNT, '+
           '(SUM(M.SALES_AMT)-(SUM(M.DIS_AMT)+SUM(M.SUB_AMT))) AS REAL_SALES_AMT, '+
           '(SUM(M.DIS_AMT)+SUM(M.SUB_AMT)) AS DIS_SUB_AMT ';
   IF (P_ISTHOUSAND='T') THEN
           SET V_SQL = 'CAST(M.ORDER_AMT AS DECIMAL(18,6))  / 1000 AS ORDER_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_AMT AS DECIMAL(18,6))  / U.U_NUM / 1000 END AS ORDER_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 / 1000 END AS ORDER_AMT_PSW, '+
            'CAST(M.INPRD_AMT AS DECIMAL(18,6))  / 1000 AS INPRD_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_AMT AS DECIMAL(18,6))  / U.U_NUM / 1000 END AS INPRD_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 / 1000 END AS INPRD_AMT_PSW, '+
            'CAST(M.SALES_AMT AS DECIMAL(18,6))  / 1000 AS SALES_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_AMT AS DECIMAL(18,6))  / U.U_NUM / 1000 END AS SALES_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 / 1000 END AS SALES_AMT_PSW, '+
            'M.ORDER_CNT  AS ORDER_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_CNT AS DECIMAL(18,6))  / U.U_NUM  END AS ORDER_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_CNT AS DECIMAL(18,6))  / U.U_NUM * 7  END AS ORDER_CNT_PSW, '+
            'M.INPRD_CNT  AS INPRD_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_CNT AS DECIMAL(18,6))  / U.U_NUM  END AS INPRD_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_CNT AS DECIMAL(18,6))  / U.U_NUM * 7  END AS INPRD_CNT_PSW, '+
            'M.SALES_CNT  AS SALES_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / U.U_NUM  END AS SALES_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / U.U_NUM * 7  END AS SALES_CNT_PSW, '+
            'CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / 1000 AS REAL_SALES_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / U.U_NUM  / 1000 END AS REAL_SALES_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 / 1000 END AS REAL_SALES_AMT_PSW, '+
            'CAST(M.DC_INPRD_AMT AS DECIMAL(18,6))  / 1000 AS DC_INPRD_AMT, '+
            'M.DC_INPRD_CNT  AS DC_INPRD_CNT, '+
            'CAST(M.DIS_SUB_AMT AS DECIMAL(18,6))  / 1000 AS DIS_SUB_AMT, '+
            'CASE WHEN M.ORDER_AMT=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / M.ORDER_AMT / 1000 * 100 END AS REAL_SALES_ORDER_SALES_RATE, '+
            'CASE WHEN M.INPRD_AMT=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / M.INPRD_AMT / 1000 * 100 END AS REAL_SALES_INPRD_SALES_RATE, '+
            'CASE WHEN M.ORDER_CNT=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / M.ORDER_CNT * 100  END AS CNT_ORDER_SALES_RATE, '+
            'CASE WHEN M.INPRD_CNT=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / M.INPRD_CNT * 100 END AS CNT_INPRD_SALES_RATE ';
   END IF;
   IF (P_ISTHOUSAND='O') THEN
           SET V_SQL = 'M.ORDER_AMT AS ORDER_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_AMT AS DECIMAL(18,6)) / U.U_NUM END AS ORDER_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS ORDER_AMT_PSW, '+
            'M.INPRD_AMT AS INPRD_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_AMT AS DECIMAL(18,6))  / U.U_NUM END AS INPRD_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS INPRD_AMT_PSW, '+
            'M.SALES_AMT AS SALES_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_AMT AS DECIMAL(18,6))  / U.U_NUM END AS SALES_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS SALES_AMT_PSW, '+
            'M.ORDER_CNT AS ORDER_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_CNT AS DECIMAL(18,6))  / U.U_NUM END AS ORDER_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.ORDER_CNT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS ORDER_CNT_PSW, '+
            'M.INPRD_CNT AS INPRD_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_CNT AS DECIMAL(18,6))  / U.U_NUM END AS INPRD_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.INPRD_CNT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS INPRD_CNT_PSW, '+
            'M.SALES_CNT AS SALES_CNT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / U.U_NUM END AS SALES_CNT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS SALES_CNT_PSW, '+
            'M.REAL_SALES_AMT AS REAL_SALES_AMT, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / U.U_NUM END AS REAL_SALES_AMT_PSD, '+
            'CASE WHEN U.U_NUM=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / U.U_NUM * 7 END AS REAL_SALES_AMT_PSW, '+
            'M.DC_INPRD_AMT AS DC_INPRD_AMT, '+
            'M.DC_INPRD_CNT AS DC_INPRD_CNT, '+
            'M.DIS_SUB_AMT AS DIS_SUB_AMT, '+
            'CASE WHEN M.ORDER_AMT=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / M.ORDER_AMT * 100 END AS REAL_SALES_ORDER_SALES_RATE, '+
            'CASE WHEN M.INPRD_AMT=0 THEN 0 ELSE CAST(M.REAL_SALES_AMT AS DECIMAL(18,6))  / M.INPRD_AMT * 100 END AS REAL_SALES_INPRD_SALES_RATE, '+
            'CASE WHEN M.ORDER_CNT=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / M.ORDER_CNT * 100 END AS CNT_ORDER_SALES_RATE, '+
            'CASE WHEN M.INPRD_CNT=0 THEN 0 ELSE CAST(M.SALES_CNT AS DECIMAL(18,6))  / M.INPRD_CNT * 100 END AS CNT_INPRD_SALES_RATE ';
   END IF;
   IF (P_DATE_TYPE='D') THEN
      SET V_STRING = 'SELECT M.TIME_ID, M.PRD_ID, '+
            V_SQL+
            'FROM '+
            '(    SELECT B.L_DAY_ID AS TIME_ID, M.PRD_ID,'+ V_MR_SUM +' FROM PMART.BASIC_MFACT_MR M , (SELECT DISTINCT L_DAY_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE M.TIME_ID = B.L_DAY_ID AND B.L_DAY_ID IN('+ P_L_DAY_ID +') '+
            '     AND M.MR_ID='+ P_MR_ID +' AND M.PRD_ID IN('+ P_PRD_ID +') GROUP BY B.L_DAY_ID,M.PRD_ID'+
            ') M, '+
            '('+
            '     SELECT B.L_DAY_ID AS TIME_ID, SUM(BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK))) AS U_NUM  '+
            '     FROM PMART.BASIC_MAST_FACT A,PMART.LAST_ORG_DIM_MASK Y,(SELECT DISTINCT L_DAY_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE A.TIME_ID=B.L_DAY_ID AND B.L_DAY_ID IN('+ P_L_DAY_ID +') AND Y.ORG_ID=-1  GROUP BY B.L_DAY_ID '+
            ') U '+
            'WHERE M.TIME_ID=U.TIME_ID ';
   END IF;
   IF (P_DATE_TYPE='W') THEN
      SET V_STRING = 'SELECT M.TIME_ID, M.PRD_ID, '+
            V_SQL+
            'FROM '+
            '(    SELECT B.L_WEEK_ID AS TIME_ID, M.PRD_ID,'+ V_MR_SUM +' FROM PMART.BASIC_MFACT_MR M , (SELECT DISTINCT L_DAY_ID,L_WEEK_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE M.TIME_ID = B.L_DAY_ID AND B.L_WEEK_ID IN('+ P_L_DAY_ID +') '+
            '     AND M.MR_ID='+ P_MR_ID +' AND M.PRD_ID IN('+ P_PRD_ID +') GROUP BY B.L_WEEK_ID,M.PRD_ID'+
            ') M, '+
            '('+
            '     SELECT B.L_WEEK_ID AS TIME_ID, SUM(BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK))) AS U_NUM  '+
            '     FROM PMART.BASIC_MAST_FACT A,PMART.LAST_ORG_DIM_MASK Y,(SELECT DISTINCT L_DAY_ID,L_WEEK_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE A.TIME_ID=B.L_DAY_ID AND B.L_WEEK_ID IN('+ P_L_DAY_ID +') AND Y.ORG_ID=-1  GROUP BY B.L_WEEK_ID '+
            ') U '+
            'WHERE M.TIME_ID=U.TIME_ID ';
   END IF;
   IF (P_DATE_TYPE='M') THEN
      SET V_STRING = 'SELECT M.TIME_ID, M.PRD_ID, '+
            V_SQL+
            'FROM '+
            '(    SELECT B.L_MONTH_ID AS TIME_ID, M.PRD_ID,'+ V_MR_SUM +' FROM PMART.BASIC_MFACT_MR M , (SELECT DISTINCT L_DAY_ID,L_MONTH_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE M.TIME_ID = B.L_DAY_ID AND B.L_MONTH_ID IN('+ P_L_DAY_ID +') '+
            '     AND M.MR_ID='+ P_MR_ID +' AND M.PRD_ID IN('+ P_PRD_ID +') GROUP BY B.L_MONTH_ID,M.PRD_ID'+
            ') M, '+
            '('+
            '     SELECT B.L_MONTH_ID AS TIME_ID, SUM(BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK))) AS U_NUM  '+
            '     FROM PMART.BASIC_MAST_FACT A,PMART.LAST_ORG_DIM_MASK Y,(SELECT DISTINCT L_DAY_ID,L_MONTH_ID FROM PMART.YMWD_TIME_W2) B '+
            '     WHERE A.TIME_ID=B.L_DAY_ID AND B.L_MONTH_ID IN('+ P_L_DAY_ID +') AND Y.ORG_ID=-1  GROUP BY B.L_MONTH_ID '+
            ') U '+
            'WHERE M.TIME_ID=U.TIME_ID ';
   END IF;
   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSM1_2_FUNC  AS('+
        V_STRING +
   ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;'; 
	EXECUTE IMMEDIATE SQLSTR;
END SP;