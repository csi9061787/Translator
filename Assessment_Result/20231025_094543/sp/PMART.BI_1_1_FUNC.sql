REPLACE PROCEDURE PMART.BI_1_1_FUNC(P_WEEK_ID VARCHAR(2000)
									, P_LAST_WEEK_ID VARCHAR(2000)
									, P_LEVEL VARCHAR(2000)
									, P_ORG_ID VARCHAR(2000))
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(20000);
   DECLARE V_SQL VARCHAR(4000);
   DECLARE V_STRING VARCHAR(10000);
   DECLARE V_UNION3 VARCHAR(4000);
   CALL PMART.P_DROP_TABLE ('#VT_BI_1_1_FUNC'); 
   CALL PMART.BI_1_1_RESPON_FUNC(P_WEEK_ID,P_LAST_WEEK_ID,P_ORG_ID);
   IF (P_LEVEL='0') THEN  
      SET V_SQL = 'SELECT CAST('+P_ORG_ID+' AS INTEGER) AS ORG_ID FROM PMART.LAST_ORG_DIM UNION SELECT DISTINCT DEPT_ID AS ORG_ID FROM PMART.LAST_ORG_DIM WHERE TOT_ID='+P_ORG_ID;
	  SET V_UNION3 = '';
   END IF;
   IF (P_LEVEL='1') THEN  
      SET V_SQL = 'SELECT CAST('+P_ORG_ID+' AS INTEGER) AS ORG_ID FROM PMART.LAST_ORG_DIM UNION SELECT DISTINCT BRANCH_ID FROM PMART.LAST_ORG_DIM WHERE DEPT_ID='+P_ORG_ID;
	  SET V_UNION3 = '';
   END IF;
   IF (P_LEVEL='2') THEN  
      SET V_SQL = 'SELECT CAST('+P_ORG_ID+' AS INTEGER) AS ORG_ID FROM PMART.LAST_ORG_DIM UNION SELECT DISTINCT RESPON_ID FROM PMART.LAST_ORG_DIM WHERE BRANCH_ID='+P_ORG_ID;
	  SET V_UNION3 = '';
   END IF;
   IF (P_LEVEL='3') THEN  
	  SET V_SQL = 'SELECT CAST('+P_ORG_ID+' AS INTEGER) AS ORG_ID FROM PMART.LAST_ORG_DIM';
      SET V_UNION3 ='UNION SELECT * FROM #VT_BI_1_1_RESPON_FUNC';	
   END IF;
   SET V_STRING = ' SELECT '+ 
        ' CAST(A.L_DAY_ID AS INTEGER) AS L_DAY_ID, '+
        ' CAST(A.ORG_ID AS INTEGER) AS ORG_ID, '+
        ' CAST(C.L_WEEK_ID AS INTEGER) AS L_WEEK_ID, '+ 
        ' CASE WHEN COALESCE ( A.UPLOAD_STNUM, NULL, 0)=0  THEN NULL ELSE CAST(A.AMT AS DECIMAL(18,6)) /A.UPLOAD_STNUM END AS AMT, '+ 
        ' CASE WHEN COALESCE ( A.UPLOAD_STNUM, NULL, 0)=0  THEN NULL ELSE CAST(A.CUST_NUM AS DECIMAL(18,6)) /A.UPLOAD_STNUM END AS CUST_NUM, '+ 
        ' CASE WHEN COALESCE ( A.CUST_NUM, NULL, 0)=0  THEN NULL ELSE CAST(A.AMT AS DECIMAL(18,6)) /A.CUST_NUM END AS CUST_AMT, '+ 
        ' CASE WHEN COALESCE ( A.CUST_NUM, NULL, 0)=0  THEN NULL ELSE CAST(A.AMT AS DECIMAL(18,6)) /A.UPLOAD_STNUM * 100 / '+  
        ' (SELECT CAST(AMT AS DECIMAL(18,6)) / UPLOAD_STNUM FROM PMART.REMD_FACT_SUM M WHERE M.L_DAY_ID = C.L_DAY_LAST_YEAR AND M.ORG_ID = A.ORG_ID) END '+  
        ' AS P_AMT, '+  
        ' CASE WHEN COALESCE ( A.UPLOAD_STNUM, NULL, 0)=0  THEN NULL ELSE CAST(A.CUST_NUM AS DECIMAL(18,6)) / A.UPLOAD_STNUM * 100 / '+
        ' (SELECT CAST(CUST_NUM AS DECIMAL(18,6)) / UPLOAD_STNUM FROM PMART.REMD_FACT_SUM M WHERE M.L_DAY_ID = C.L_DAY_LAST_YEAR AND M.ORG_ID = A.ORG_ID) END '+
        ' AS P_CUST_NUM '+
        ' FROM PMART.REMD_FACT_SUM A, '+
        ' ('+ V_SQL +') B, '+
        ' PMART.YMWD_TIME C '+
        ' WHERE A.ORG_ID=B.ORG_ID '+
        ' AND C.L_WEEK_ID='+ P_WEEK_ID +'  '+
        ' AND A.L_DAY_ID=C.L_DAY_ID '+
        ' UNION '+
        ' SELECT '+ 
        ' 99991231 AS L_DAY_ID, '+
        ' A.ORG_ID AS ORG_ID, '+
        ' C.L_WEEK_ID AS L_WEEK_ID, '+
        ' CAST(SUM(A.AMT)  AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM) AS AMT, '+
        ' CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM) AS CUST_NUM, '+
        ' CAST(SUM(A.AMT) AS DECIMAL(18,6)) /SUM(A.CUST_NUM) AS CUST_AMT, '+
        ' (CAST(SUM(A.AMT) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM)) * 100 / (CAST(SUM(AA.AMT) AS DECIMAL(18,6)) /SUM(AA.UPLOAD_STNUM)) AS P_AMT, '+ 
        ' (CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM)) * 100 / (CAST(SUM(AA.CUST_NUM) AS DECIMAL(18,6)) /SUM(AA.UPLOAD_STNUM)) AS P_CUST_NUM '+
        ' FROM PMART.REMD_FACT_SUM A, PMART.REMD_FACT_SUM AA, '+
        ' ('+ V_SQL +') B, '+
        ' PMART.YMWD_TIME C '+
        ' WHERE A.ORG_ID=B.ORG_ID '+
        ' AND C.L_WEEK_ID='+ P_WEEK_ID +'  '+
        ' AND A.L_DAY_ID=C.L_DAY_ID '+
        ' AND A.ORG_ID = AA.ORG_ID '+
        ' AND AA.L_DAY_ID = C.L_DAY_LAST_YEAR '+
        ' GROUP BY A.ORG_ID,C.L_WEEK_ID  '+
        ' UNION '+
        ' SELECT '+ 
        ' 1 AS L_DAY_ID, '+
        ' A.ORG_ID AS ORG_ID, '+
        ' C.L_WEEK_ID AS L_WEEK_ID, '+
        ' CAST(SUM(A.AMT) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM) AS AMT, '+
        ' CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM) AS CUST_NUM, '+
        ' CAST(SUM(A.AMT) AS DECIMAL(18,6)) /SUM(A.CUST_NUM) AS CUST_AMT, '+
        ' (CAST(SUM(A.AMT) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM)) * 100 / (CAST(SUM(AA.AMT) AS DECIMAL(18,6)) /SUM(AA.UPLOAD_STNUM)) AS P_AMT, '+ 
        ' (CAST(SUM(A.CUST_NUM) AS DECIMAL(18,6)) /SUM(A.UPLOAD_STNUM)) * 100 / (CAST(SUM(AA.CUST_NUM) AS DECIMAL(18,6)) /SUM(AA.UPLOAD_STNUM)) AS P_CUST_NUM '+
        ' FROM PMART.REMD_FACT_SUM A, PMART.REMD_FACT_SUM AA, '+
        ' ('+ V_SQL +') B, '+
        ' PMART.YMWD_TIME C '+
        ' WHERE A.ORG_ID=B.ORG_ID '+
        ' AND C.L_WEEK_ID='+ P_LAST_WEEK_ID +'  '+
        ' AND A.L_DAY_ID=C.L_DAY_ID '+
        ' AND A.ORG_ID = AA.ORG_ID '+
        ' AND AA.L_DAY_ID = C.L_DAY_LAST_YEAR '+
        ' GROUP BY A.ORG_ID,C.L_WEEK_ID  '+ V_UNION3 +'';
   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_BI_1_1_FUNC  AS('+
        V_STRING +
   ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;'; 
	EXECUTE IMMEDIATE SQLSTR;
END SP;