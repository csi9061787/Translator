REPLACE PROCEDURE PMART.POSK1_3_2_FUNC(P_L_DAY_ID VARCHAR(2000),
									 P_MMA_ID VARCHAR(2000),
									 P_PRD_ID VARCHAR(2000),
									 P_ISTHOUSAND VARCHAR(2000),
									 P_DATE_TYPE VARCHAR(2000))
SQL SECURITY INVOKER
SP:BEGIN
   DECLARE SQLSTR VARCHAR(64000);
   DECLARE V_SQL VARCHAR(9000);
   DECLARE V_SQL_THOUSAND VARCHAR(9000);
   DECLARE V_LOCAL VARCHAR(1);
   DECLARE V_STRING1 VARCHAR(9000);
   DECLARE V_STRING2 VARCHAR(9000); 
   DECLARE SQLWEEK VARCHAR(300);
   CALL PMART.P_DROP_TABLE ('#VT_POSK1_3_2_FUNC'); 
   SET V_SQL_THOUSAND = ' SUM(ORDER_CNT) AS ORDER_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_CNT) AS DECIMAL(18,6)) / (SUM(STNUM_STORE_NUM) ) END AS ORDER_CNT_PSD, '+
      ' CAST(SUM(ORDER_AMT) AS DECIMAL(18,6))  / 1000 AS ORDER_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS ORDER_AMT_PSD, '+
      ' SUM(INPRD_CNT) AS INPRD_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS INPRD_CNT_PSD, '+
      ' CAST(SUM(INPRD_AMT) AS DECIMAL(18,6))  / 1000 AS INPRD_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS INPRD_AMT_PSD, '+
      ' SUM(SALES_CNT) AS SALES_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS SALES_CNT_PSD, '+
      ' CAST(SUM(SALES_AMT) AS DECIMAL(18,6))  / 1000 AS SALES_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS SALES_AMT_PSD, '+
      ' CAST(SUM(DIS_AMT + SUB_AMT) AS DECIMAL(18,6))  / 1000 AS DISCOUNT_AMT, '+
      ' CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / 1000 AS REAL_SALES_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS REAL_SALES_AMT_PSD, '+
      ' CAST((SUM(SALES_AMT - DIS_AMT - SUB_AMT) - SUM(SALES_UNTAX_COST)) AS DECIMAL(18,6))  * SUM(SALES_CNT) / 1000 AS GP_SALE_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE (CAST((SUM(SALES_AMT - DIS_AMT - SUB_AMT) - SUM(SALES_UNTAX_COST)) AS DECIMAL(18,6)) * SUM(SALES_CNT)) / (SUM(STNUM_STORE_NUM) ) END AS GP_SALE_AMT_PSD, '+
      ' CASE WHEN SUM(ORDER_AMT) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / SUM(ORDER_AMT) * 100 END AS ORDER_SALES_AMT_RATE, '+
      ' CASE WHEN SUM(INPRD_AMT) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / SUM(INPRD_AMT) * 100 END AS INPRD_SALES_AMT_RATE, '+
      ' CASE WHEN SUM(ORDER_CNT) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / SUM(ORDER_CNT) * 100 END AS ORDER_SALES_CNT_RATE, '+
      ' CASE WHEN SUM(INPRD_CNT) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / SUM(INPRD_CNT) * 100 END AS INPRD_SALES_CNT_RATE, '+
      ' CASE WHEN SUM(NP.PRD_ANTICIPATE) = 0 THEN 0 ELSE (CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END) / SUM(NP.PRD_ANTICIPATE) END AS CNT_RATE1, '+
      ' SUM(Y_ORDER_SALES_CNT) AS Y_ORDER_CNT, '+
      ' CASE WHEN SUM(Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_SALES_CNT) AS DECIMAL(18,6))  / (SUM(Y_ORDER_STNUM) ) END AS Y_ORDER_CNT_PSD, '+
      ' CAST(SUM(Y_ORDER_SALES_AMT) AS DECIMAL(18,6))  / 1000 AS Y_ORDER_AMT, '+
      ' CASE WHEN SUM(Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_SALES_AMT) AS DECIMAL(18,6))  / (SUM(Y_ORDER_STNUM) ) END AS Y_ORDER_AMT_PSD, '+
      ' SUM(Y_ORDER_STORE_NUM) AS Y_ORDER_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS Y_ORDER_RATE, '+
      ' SUM(ORDER_SALES_CNT) AS ORDER_SALES_CNT, '+
      ' CASE WHEN SUM(ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_SALES_CNT) AS DECIMAL(18,6))  / (SUM(ORDER_STNUM) ) END AS ORDER_SALES_CNT_PSD, '+
      ' SUM(ORDER_SALES_AMT) AS ORDER_SALES_AMT, '+
      ' CASE WHEN SUM(ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_SALES_AMT) AS DECIMAL(18,6))  / (SUM(ORDER_STNUM) ) END AS ORDER_SALES_AMT_PSD, '+
      ' SUM(ORDER_STORE_NUM) AS ORDER_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS ORDER_STORE_RATE, '+
      ' SUM(INPRD_SALES_CNT) AS INPRD_SALES_CNT, '+
      ' CASE WHEN SUM(INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_SALES_CNT) AS DECIMAL(18,6))  / (SUM(INPRD_STNUM) ) END AS INPRD_SALES_CNT_PSD, '+
      ' CAST(SUM(INPRD_SALES_AMT) AS DECIMAL(18,6))  / 1000 AS INPRD_SALES_AMT, '+
      ' CASE WHEN SUM(INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_SALES_AMT) AS DECIMAL(18,6))  / (SUM(INPRD_STNUM) ) END AS INPRD_SALES_AMT_PSD, '+
      ' SUM(INPRD_STORE_NUM) AS INPRD_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS INPRD_STORE_RATE, '+
      ' CASE WHEN SUM(SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(SALES_STNUM)) END AS SALES_SALES_CNT_PSD, '+
      ' CASE WHEN SUM(SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT) AS DECIMAL(18,6))  / (SUM(SALES_STNUM)) END AS SALES_SALES_AMT_PSD, '+
      ' SUM(SALES_UNTAX_REAL_AMT) AS SALES_REAL_SALES_AMT, '+
      ' SUM(SALES_UNTAX_REAL_AMT)-SUM(SALES_UNTAX_COST) AS SALES_GP_AMT, '+
      ' SUM(SALES_STORE_NUM) AS SALES_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS SALES_STORE_RATE, '+
      ' SUM(THROW_CNT) AS THROW_SALES_CNT, '+
      ' CASE WHEN SUM(THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(THROW_CNT) AS DECIMAL(18,6))  / (SUM(THROW_STNUM)) END AS THROW_SALES_CNT_PSD, '+
      ' CAST(SUM(THROW_AMT) AS DECIMAL(18,6))  / 1000 AS THROW_SALES_AMT, '+
      ' CASE WHEN SUM(THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(THROW_AMT) AS DECIMAL(18,6))  / (SUM(THROW_STNUM)) END AS THROW_SALES_AMT_PSD, '+
      ' SUM(THROW_STORE_NUM) AS THROW_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(THROW_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS THROW_STORE_RATE ';
   SET V_SQL = ' SUM(ORDER_CNT) AS ORDER_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_CNT) AS DECIMAL(18,6)) / (SUM(STNUM_STORE_NUM) ) END AS ORDER_CNT_PSD, '+
      ' SUM(ORDER_AMT) AS ORDER_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_AMT) AS DECIMAL(18,6)) / (SUM(STNUM_STORE_NUM) ) END AS ORDER_AMT_PSD, '+
      ' SUM(INPRD_CNT) AS INPRD_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS INPRD_CNT_PSD, '+
      ' SUM(INPRD_AMT) AS INPRD_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS INPRD_AMT_PSD, '+
      ' SUM(SALES_CNT) AS SALES_CNT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS SALES_CNT_PSD, '+
      ' SUM(SALES_AMT) AS SALES_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS SALES_AMT_PSD, '+
      ' SUM(DIS_AMT + SUB_AMT) AS DISCOUNT_AMT, '+
      ' SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS REAL_SALES_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END AS REAL_SALES_AMT_PSD, '+
      ' CAST((SUM(SALES_AMT - DIS_AMT - SUB_AMT) - SUM(SALES_UNTAX_COST)) AS DECIMAL(18,6))  * SUM(SALES_CNT) AS GP_SALE_AMT, '+
      ' CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE (CAST((SUM(SALES_AMT - DIS_AMT - SUB_AMT) - SUM(SALES_UNTAX_COST)) AS DECIMAL(18,6))  * SUM(SALES_CNT)) / (SUM(STNUM_STORE_NUM) ) END AS GP_SALE_AMT_PSD, '+
      ' CASE WHEN SUM(ORDER_AMT) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / SUM(ORDER_AMT) * 100 END AS ORDER_SALES_AMT_RATE, '+
      ' CASE WHEN SUM(INPRD_AMT) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT - DIS_AMT - SUB_AMT) AS DECIMAL(18,6))  / SUM(INPRD_AMT) * 100 END AS INPRD_SALES_AMT_RATE, '+
      ' CASE WHEN SUM(ORDER_CNT) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / SUM(ORDER_CNT) * 100 END AS ORDER_SALES_CNT_RATE, '+
      ' CASE WHEN SUM(INPRD_CNT) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / SUM(INPRD_CNT) * 100 END AS INPRD_SALES_CNT_RATE, '+
      ' CASE WHEN SUM(NP.PRD_ANTICIPATE) = 0 THEN 0 ELSE (CASE WHEN SUM(STNUM_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(STNUM_STORE_NUM) ) END) / SUM(NP.PRD_ANTICIPATE) END AS CNT_RATE1, '+
      ' SUM(Y_ORDER_SALES_CNT) AS Y_ORDER_CNT, '+
      ' CASE WHEN SUM(Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_SALES_CNT) AS DECIMAL(18,6))  / (SUM(Y_ORDER_STNUM) ) END AS Y_ORDER_CNT_PSD, '+
      ' SUM(Y_ORDER_SALES_AMT) AS Y_ORDER_AMT, '+
      ' CASE WHEN SUM(Y_ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_SALES_AMT) AS DECIMAL(18,6))  / (SUM(Y_ORDER_STNUM) ) END AS Y_ORDER_AMT_PSD, '+
      ' SUM(Y_ORDER_STORE_NUM) AS Y_ORDER_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(Y_ORDER_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS Y_ORDER_RATE, '+
      ' SUM(ORDER_SALES_CNT) AS ORDER_SALES_CNT, '+
      ' CASE WHEN SUM(ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_SALES_CNT) AS DECIMAL(18,6))  / (SUM(ORDER_STNUM) ) END AS ORDER_SALES_CNT_PSD, '+
      ' SUM(ORDER_SALES_AMT) AS ORDER_SALES_AMT, '+
      ' CASE WHEN SUM(ORDER_STNUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_SALES_AMT) AS DECIMAL(18,6))  / (SUM(ORDER_STNUM) ) END AS ORDER_SALES_AMT_PSD, '+
      ' SUM(ORDER_STORE_NUM) AS ORDER_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(ORDER_STORE_NUM) AS DECIMAL(18,6)) /(SUM(MAST_STORE_NUM)) * 100 END AS ORDER_STORE_RATE, '+
      ' SUM(INPRD_SALES_CNT) AS INPRD_SALES_CNT, '+
      ' CASE WHEN SUM(INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_SALES_CNT) AS DECIMAL(18,6))  / (SUM(INPRD_STNUM) ) END AS INPRD_SALES_CNT_PSD, '+
      ' SUM(INPRD_SALES_AMT) AS INPRD_SALES_AMT, '+
      ' CASE WHEN SUM(INPRD_STNUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_SALES_AMT) AS DECIMAL(18,6))  / (SUM(INPRD_STNUM) ) END AS INPRD_SALES_AMT_PSD, '+
      ' SUM(INPRD_STORE_NUM) AS INPRD_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(INPRD_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS INPRD_STORE_RATE, '+
      ' CASE WHEN SUM(SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(SALES_CNT) AS DECIMAL(18,6))  / (SUM(SALES_STNUM)) END AS SALES_SALES_CNT_PSD, '+
      ' CASE WHEN SUM(SALES_STNUM) = 0 THEN 0 ELSE CAST(SUM(SALES_AMT) AS DECIMAL(18,6))  / (SUM(SALES_STNUM)) END AS SALES_SALES_AMT_PSD, '+
      ' SUM(SALES_UNTAX_REAL_AMT) AS SALES_REAL_SALES_AMT, '+
      ' SUM(SALES_UNTAX_REAL_AMT)-SUM(SALES_UNTAX_COST) AS SALES_GP_AMT, '+
      ' SUM(SALES_STORE_NUM) AS SALES_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(SALES_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS SALES_STORE_RATE, '+
      ' SUM(THROW_CNT) AS THROW_SALES_CNT, '+
      ' CASE WHEN SUM(THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(THROW_CNT) AS DECIMAL(18,6))  / (SUM(THROW_STNUM)) END AS THROW_SALES_CNT_PSD, '+
      ' SUM(THROW_AMT) AS THROW_SALES_AMT, '+
      ' CASE WHEN SUM(THROW_STNUM) = 0 THEN 0 ELSE CAST(SUM(THROW_AMT) AS DECIMAL(18,6))  / (SUM(THROW_STNUM)) END AS THROW_SALES_AMT_PSD, '+
      ' SUM(THROW_STORE_NUM) AS THROW_STORE_CNT, '+
      ' CASE WHEN SUM(MAST_STORE_NUM) = 0 THEN 0 ELSE CAST(SUM(THROW_STORE_NUM) AS DECIMAL(18,6))  / (SUM(MAST_STORE_NUM) ) * 100 END AS THROW_STORE_RATE ';
   IF P_MMA_ID = '10000001' THEN   
   		SET V_LOCAL = 'A';
   ELSEIF P_MMA_ID = '10000002' THEN   
   		SET V_LOCAL = 'B';
   ELSEIF P_MMA_ID = '10000003' THEN
   		SET V_LOCAL = 'C';
   ELSEIF P_MMA_ID = '10000004' THEN
   		SET V_LOCAL = 'D';   
   ELSEIF P_MMA_ID = '10000005' THEN
   		SET V_LOCAL = 'E';
   ELSEIF P_MMA_ID = '10000006' THEN
   		SET V_LOCAL = 'F';
   ELSEIF P_MMA_ID = '10000007' THEN
   		SET V_LOCAL = 'G';
   ELSEIF P_MMA_ID = '10000008' THEN
   		SET V_LOCAL = 'H';
   ELSEIF P_MMA_ID = '10000009' THEN
   		SET V_LOCAL = 'I';
   ELSEIF P_MMA_ID = '10000010' THEN
   		SET V_LOCAL = 'J';
   END IF;
   IF (P_DATE_TYPE='D') THEN
     IF (P_ISTHOUSAND='O') THEN
        IF (P_MMA_ID<>'-1') THEN
			SET V_STRING1 = 'SELECT CAST(P.TIME_ID AS DECIMAL(10,0)) AS TIME_ID,CAST(''-1'' AS VARCHAR(10)) AS SUB_ID, '+
                V_SQL +
                ' FROM PMART.BASIC_MFACT_SHOP P LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y WHERE A.TIME_ID = B.TIME_ID AND A.TIME_ID IN('+ P_L_DAY_ID +') AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.ORG_ID = -1 '+
				' AND P.TIME_ID IN ('+ P_L_DAY_ID +') '+
				' AND P.MMA_ID IN ('+ P_MMA_ID +') '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY P.TIME_ID,P.MMA_ID ';
			SET V_STRING2 = 'SELECT P.TIME_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') AS SUB_ID, '+
                V_SQL +
                ' FROM PMART.BASIC_MFACT_DETAIL P LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, PMART.LAST_SHOPDIST S, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y WHERE A.TIME_ID = B.TIME_ID AND A.TIME_ID IN('+ P_L_DAY_ID +') AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.TIME_ID IN ('+ P_L_DAY_ID +') '+
				' AND S.LOCAL0 = '''+ V_LOCAL +''' '+
				' AND P.ORG_ID = S.OSTORE_NO '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY P.TIME_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') ';
        END IF;
	 END IF;
	 IF (P_ISTHOUSAND='T') THEN
        IF (P_MMA_ID<>'-1') THEN
			SET V_STRING1 = 'SELECT CAST(P.TIME_ID AS DECIMAL(10,0)) AS TIME_ID,CAST(''-1'' AS VARCHAR(10)) AS SUB_ID, '+
				V_SQL_THOUSAND +
				' FROM PMART.BASIC_MFACT_SHOP P LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y WHERE A.TIME_ID = B.TIME_ID AND A.TIME_ID IN('+ P_L_DAY_ID +') AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.ORG_ID = -1 '+
				' AND P.TIME_ID IN ('+ P_L_DAY_ID +') '+
				' AND P.MMA_ID IN ('+ P_MMA_ID +') '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY P.TIME_ID,P.MMA_ID ';
			SET V_STRING2 = 'SELECT P.TIME_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') AS SUB_ID, '+
				V_SQL_THOUSAND +
				' FROM PMART.BASIC_MFACT_DETAIL P LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, PMART.LAST_SHOPDIST S, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y WHERE A.TIME_ID = B.TIME_ID AND A.TIME_ID IN('+ P_L_DAY_ID +') AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.TIME_ID IN ('+ P_L_DAY_ID +') '+
				' AND S.LOCAL0 = '''+ V_LOCAL +''' '+
				' AND P.ORG_ID = S.OSTORE_NO '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY P.TIME_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') ';
		END IF;
	 END IF;
   END IF;
   IF (P_DATE_TYPE='W') THEN
   CALL PMART.P_DROP_TABLE ('#VT_YMWD_TIME_W2');   
    SET SQLWEEK ='CREATE MULTISET VOLATILE TABLE #VT_YMWD_TIME_W2  AS('+
		  				   ' SELECT L_DAY_ID,  L_WEEK_ID FROM PMART.YMWD_TIME_W2 WHERE L_WEEK_ID IN ('+ P_L_DAY_ID +')'
	') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;'; 	   	   
	EXECUTE IMMEDIATE SQLWEEK;
     IF (P_ISTHOUSAND='O') THEN
        IF (P_MMA_ID<>'-1') THEN
			SET V_STRING1 = 'SELECT CAST(W.L_WEEK_ID AS DECIMAL(10,0)) AS TIME_ID,CAST(''-1'' AS VARCHAR(10)) AS SUB_ID, '+
				V_SQL +				
				' FROM PMART.BASIC_MFACT_SHOP P ' +
				' JOIN #VT_YMWD_TIME_W2 W ON P.TIME_ID = W.L_DAY_ID '+
				' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y '+
				'    WHERE A.TIME_ID = B.TIME_ID ' +
				'    AND A.TIME_ID IN  (SELECT L_DAY_ID FROM  #VT_YMWD_TIME_W2) AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.ORG_ID = -1 '+
				' AND P.MMA_ID IN ('+ P_MMA_ID +') '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY W.L_WEEK_ID,P.MMA_ID ';
			SET V_STRING2 = 'SELECT W.L_WEEK_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') AS SUB_ID, '+
				V_SQL +			
				' FROM PMART.BASIC_MFACT_DETAIL P ' +
				' JOIN #VT_YMWD_TIME_W2 W ON P.TIME_ID = W.L_DAY_ID '+
				' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, PMART.LAST_SHOPDIST S,'+				
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y ' +
				'    WHERE A.TIME_ID = B.TIME_ID ' +
				'    AND A.TIME_ID IN  (SELECT L_DAY_ID FROM  #VT_YMWD_TIME_W2) AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE 1=1 ' +
				' AND S.LOCAL0 = '''+ V_LOCAL +''' '+
				' AND P.ORG_ID = S.OSTORE_NO '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY W.L_WEEK_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') ';
		END IF;
	 END IF;
	 IF (P_ISTHOUSAND='T') THEN
        IF (P_MMA_ID<>'-1') THEN
			SET V_STRING1 = 'SELECT CAST(W.L_WEEK_ID AS DECIMAL(10,0)) AS TIME_ID,CAST(''-1'' AS VARCHAR(10)) AS SUB_ID, '+
				V_SQL_THOUSAND +			
			    ' FROM PMART.BASIC_MFACT_SHOP P ' +
				' JOIN #VT_YMWD_TIME_W2 W ON P.TIME_ID = W.L_DAY_ID '+
				' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, '+
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y ' +
				'    WHERE A.TIME_ID = B.TIME_ID ' +
				'    AND A.TIME_ID IN  (SELECT L_DAY_ID FROM  #VT_YMWD_TIME_W2) AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE P.ORG_ID = -1 '+
				' AND P.MMA_ID IN('+ P_MMA_ID +') '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY W.L_WEEK_ID,P.MMA_ID ';
			SET V_STRING2 = 'SELECT W.L_WEEK_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') AS SUB_ID, '+
				V_SQL_THOUSAND +				
				' FROM PMART.BASIC_MFACT_DETAIL P ' +
				' JOIN #VT_YMWD_TIME_W2 W ON P.TIME_ID = W.L_DAY_ID '+
				' LEFT JOIN PMART.NP_SUPPLEMENT NP ON P.PRD_ID = NP.PRD_NO, PMART.LAST_SHOPDIST S,'+	
				'    (SELECT B.TIME_ID, B.PRD_ID, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.SALES_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS SALES_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.THROW_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS THROW_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.INPRD_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS INPRD_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(BIT_AND(B.Y_ORDER_STORE_NUM,A.STNUM_STORE_NUM),Y.MASK)) AS Y_ORDER_STNUM, '+
				'        BIT_EXTRACT(BIT_AND(B.SALES_STORE_NUM,Y.MASK)) AS SALES_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.ORDER_STORE_NUM,Y.MASK)) AS ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.THROW_STORE_NUM,Y.MASK)) AS THROW_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.INPRD_STORE_NUM,Y.MASK)) AS INPRD_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(B.Y_ORDER_STORE_NUM,Y.MASK)) AS Y_ORDER_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.MAST_STORE_NUM,Y.MASK)) AS MAST_STORE_NUM, '+
				'        BIT_EXTRACT(BIT_AND(A.STNUM_STORE_NUM,Y.MASK)) AS STNUM_STORE_NUM '+
				'    FROM PMART.BASIC_MAST_FACT A, PMART.BASIC_STFACT_DETAIL B, PMART.LAST_ORG_DIM_MASK Y ' +
				'    WHERE A.TIME_ID = B.TIME_ID ' +
				'    AND A.TIME_ID IN  (SELECT L_DAY_ID FROM  #VT_YMWD_TIME_W2) AND B.PRD_ID IN('''+ P_PRD_ID +''') AND Y.ORG_ID= -1) D1 '+
				' WHERE 1=1 ' +
				' AND S.LOCAL0 = '''+ V_LOCAL +''' '+
				' AND P.ORG_ID = S.OSTORE_NO '+
				' AND P.PRD_ID IN ('''+ P_PRD_ID +''') '+
				' AND P.PRD_ID = D1.PRD_ID '+
				' AND P.TIME_ID = D1.TIME_ID '+
				' GROUP BY W.L_WEEK_ID,''SUB''+NVL(S.SEC_1_LOCAL,'''') ';
		END IF;
	 END IF;
   END IF;
   IF (P_MMA_ID<>'-1') THEN
	   SET SQLSTR ='CREATE MULTISET VOLATILE TABLE #VT_POSK1_3_2_FUNC  AS('+
		   V_STRING1 +		   
	   ') WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS;'; 
	   EXECUTE IMMEDIATE SQLSTR;
	   SET SQLSTR ='INSERT INTO #VT_POSK1_3_2_FUNC(TIME_ID, SUB_ID, ORDER_CNT, ORDER_CNT_PSD, ORDER_AMT, ORDER_AMT_PSD, INPRD_CNT, '+
						' INPRD_CNT_PSD, INPRD_AMT, INPRD_AMT_PSD, SALES_CNT, SALES_CNT_PSD, SALES_AMT, SALES_AMT_PSD, DISCOUNT_AMT, '+
						' REAL_SALES_AMT, REAL_SALES_AMT_PSD, GP_SALE_AMT, GP_SALE_AMT_PSD, ORDER_SALES_AMT_RATE, INPRD_SALES_AMT_RATE, '+
						' ORDER_SALES_CNT_RATE, INPRD_SALES_CNT_RATE, CNT_RATE1, Y_ORDER_CNT, Y_ORDER_CNT_PSD, Y_ORDER_AMT, '+
						' Y_ORDER_AMT_PSD, Y_ORDER_STORE_CNT, Y_ORDER_RATE, ORDER_SALES_CNT, ORDER_SALES_CNT_PSD, ORDER_SALES_AMT, '+
						' ORDER_SALES_AMT_PSD, ORDER_STORE_CNT, ORDER_STORE_RATE, INPRD_SALES_CNT, INPRD_SALES_CNT_PSD, INPRD_SALES_AMT, '+
						' INPRD_SALES_AMT_PSD, INPRD_STORE_CNT, INPRD_STORE_RATE, SALES_SALES_CNT_PSD, SALES_SALES_AMT_PSD, SALES_REAL_SALES_AMT, '+
						' SALES_GP_AMT, SALES_STORE_CNT, SALES_STORE_RATE, THROW_SALES_CNT, THROW_SALES_CNT_PSD, THROW_SALES_AMT, '+
						' THROW_SALES_AMT_PSD, THROW_STORE_CNT, THROW_STORE_RATE ) '+
						V_STRING2+';';
	  EXECUTE IMMEDIATE SQLSTR;
   END IF;   
	CALL PMART.P_DROP_TABLE ('#VT_YMWD_TIME_W2');   
END SP;