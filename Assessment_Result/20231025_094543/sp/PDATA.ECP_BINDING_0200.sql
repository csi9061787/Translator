REPLACE PROCEDURE PDATA.ECP_BINDING_0200 (
)
SP:BEGIN
	DECLARE SQLSTR  VARCHAR(4000) DEFAULT '';
	DECLARE P_NO NUMBER;
	DECLARE P_DATE NUMBER;
	DECLARE STORE_CS CURSOR FOR STORE_SQL;    
	SET SQLSTR =' SELECT ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY CAL_DATE) AS SNO ,  CAL_DATE ' +
	' FROM (SELECT DISTINCT CAL_DATE FROM PTEMP.TP1_ECP_BINDING) A ';   
	PREPARE STORE_SQL FROM SQLSTR;
	OPEN STORE_CS;  
	L1:
		WHILE (SQLCODE =0) 
		DO    
	L1_1:
		BEGIN 
		FETCH STORE_CS INTO P_NO,P_DATE ;
		IF SQLSTATE <> '00000' THEN LEAVE L1; END IF; 	   
		MERGE INTO PDATA.ECP_BINDING AS Z
		USING (
			SELECT L_DAY_ID, STORE_ID, OSTORE_ID, RECEVE_CNT, BIND_CNT, PRT_CNT, CAL_DATE, FBIND_RATE, BATCH_NO
			FROM PTEMP.TP1_ECP_BINDING
			WHERE CAL_DATE = P_DATE
		)B
		ON (Z.L_DAY_ID = B.L_DAY_ID AND Z.OSTORE_ID = B.OSTORE_ID)
		WHEN MATCHED THEN UPDATE SET
			BIND_CNT = B.BIND_CNT
			,PRT_CNT = B.PRT_CNT
			,BATCH_NO = B.BATCH_NO
		WHEN NOT MATCHED THEN INSERT
		(
			L_DAY_ID
			,STORE_ID
			,OSTORE_ID
			,RECEVE_CNT
			,BIND_CNT
			,PRT_CNT
			,CAL_DATE
			,FBIND_RATE
			,BATCH_NO
		)
		VALUES
		(
			B.L_DAY_ID
			,B.STORE_ID
			,B.OSTORE_ID
			,B.RECEVE_CNT
			,B.BIND_CNT
			,B.PRT_CNT
			,B.CAL_DATE
			,B.FBIND_RATE
			,B.BATCH_NO
		);
	END L1_1;
	END WHILE L1;      
	CLOSE STORE_CS;
END SP;